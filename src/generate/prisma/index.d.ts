
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model campaigns
 * 
 */
export type campaigns = $Result.DefaultSelection<Prisma.$campaignsPayload>
/**
 * Model contact_messages
 * 
 */
export type contact_messages = $Result.DefaultSelection<Prisma.$contact_messagesPayload>
/**
 * Model documents
 * 
 */
export type documents = $Result.DefaultSelection<Prisma.$documentsPayload>
/**
 * Model donations
 * 
 */
export type donations = $Result.DefaultSelection<Prisma.$donationsPayload>
/**
 * Model donor_profiles
 * 
 */
export type donor_profiles = $Result.DefaultSelection<Prisma.$donor_profilesPayload>
/**
 * Model email_logs
 * 
 */
export type email_logs = $Result.DefaultSelection<Prisma.$email_logsPayload>
/**
 * Model event_participants
 * 
 */
export type event_participants = $Result.DefaultSelection<Prisma.$event_participantsPayload>
/**
 * Model events
 * 
 */
export type events = $Result.DefaultSelection<Prisma.$eventsPayload>
/**
 * Model faqs
 * 
 */
export type faqs = $Result.DefaultSelection<Prisma.$faqsPayload>
/**
 * Model media
 * 
 */
export type media = $Result.DefaultSelection<Prisma.$mediaPayload>
/**
 * Model newsletter_subscribers
 * 
 */
export type newsletter_subscribers = $Result.DefaultSelection<Prisma.$newsletter_subscribersPayload>
/**
 * Model partners
 * 
 */
export type partners = $Result.DefaultSelection<Prisma.$partnersPayload>
/**
 * Model posts
 * 
 */
export type posts = $Result.DefaultSelection<Prisma.$postsPayload>
/**
 * Model programs
 * 
 */
export type programs = $Result.DefaultSelection<Prisma.$programsPayload>
/**
 * Model role_permissions
 * 
 */
export type role_permissions = $Result.DefaultSelection<Prisma.$role_permissionsPayload>
/**
 * Model site_interactions
 * 
 */
export type site_interactions = $Result.DefaultSelection<Prisma.$site_interactionsPayload>
/**
 * Model skills
 * 
 */
export type skills = $Result.DefaultSelection<Prisma.$skillsPayload>
/**
 * Model testimonials
 * 
 */
export type testimonials = $Result.DefaultSelection<Prisma.$testimonialsPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model volunteer_profiles
 * 
 */
export type volunteer_profiles = $Result.DefaultSelection<Prisma.$volunteer_profilesPayload>
/**
 * Model volunteer_skills
 * 
 */
export type volunteer_skills = $Result.DefaultSelection<Prisma.$volunteer_skillsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const role_permissions_role: {
  admin: 'admin',
  editor: 'editor',
  volunteer_manager: 'volunteer_manager'
};

export type role_permissions_role = (typeof role_permissions_role)[keyof typeof role_permissions_role]


export const media_media_type: {
  image: 'image',
  video: 'video',
  pdf: 'pdf'
};

export type media_media_type = (typeof media_media_type)[keyof typeof media_media_type]


export const event_participants_role: {
  volunteer: 'volunteer',
  attendee: 'attendee',
  organizer: 'organizer'
};

export type event_participants_role = (typeof event_participants_role)[keyof typeof event_participants_role]


export const volunteer_skills_proficiency_level: {
  beginner: 'beginner',
  intermediate: 'intermediate',
  expert: 'expert'
};

export type volunteer_skills_proficiency_level = (typeof volunteer_skills_proficiency_level)[keyof typeof volunteer_skills_proficiency_level]


export const programs_category: {
  medical_outreach: 'medical_outreach',
  mental_health: 'mental_health',
  youth_development: 'youth_development',
  disease_prevention: 'disease_prevention'
};

export type programs_category = (typeof programs_category)[keyof typeof programs_category]


export const event_participants_status: {
  registered: 'registered',
  confirmed: 'confirmed',
  attended: 'attended',
  no_show: 'no_show'
};

export type event_participants_status = (typeof event_participants_status)[keyof typeof event_participants_status]


export const partners_type: {
  ngo: 'ngo',
  corporate: 'corporate',
  government: 'government',
  diaspora: 'diaspora'
};

export type partners_type = (typeof partners_type)[keyof typeof partners_type]


export const faqs_language: {
  en: 'en',
  am: 'am'
};

export type faqs_language = (typeof faqs_language)[keyof typeof faqs_language]


export const donor_profiles_donation_frequency: {
  monthly: 'monthly',
  quarterly: 'quarterly',
  yearly: 'yearly'
};

export type donor_profiles_donation_frequency = (typeof donor_profiles_donation_frequency)[keyof typeof donor_profiles_donation_frequency]


export const posts_post_type: {
  blog: 'blog',
  news: 'news',
  press_release: 'press_release'
};

export type posts_post_type = (typeof posts_post_type)[keyof typeof posts_post_type]


export const users_role: {
  admin: 'admin',
  volunteer: 'volunteer',
  donor: 'donor',
  editor: 'editor'
};

export type users_role = (typeof users_role)[keyof typeof users_role]


export const testimonials_type: {
  volunteer: 'volunteer',
  beneficiary: 'beneficiary',
  partner: 'partner'
};

export type testimonials_type = (typeof testimonials_type)[keyof typeof testimonials_type]


export const email_logs_status: {
  sent: 'sent',
  failed: 'failed',
  bounced: 'bounced',
  opened: 'opened',
  clicked: 'clicked'
};

export type email_logs_status = (typeof email_logs_status)[keyof typeof email_logs_status]


export const donations_donation_type: {
  one_time: 'one_time',
  recurring: 'recurring',
  in_kind: 'in_kind'
};

export type donations_donation_type = (typeof donations_donation_type)[keyof typeof donations_donation_type]


export const newsletter_subscribers_language_preference: {
  en: 'en',
  am: 'am'
};

export type newsletter_subscribers_language_preference = (typeof newsletter_subscribers_language_preference)[keyof typeof newsletter_subscribers_language_preference]


export const contact_messages_reason: {
  general: 'general',
  volunteering: 'volunteering',
  media: 'media',
  donations: 'donations'
};

export type contact_messages_reason = (typeof contact_messages_reason)[keyof typeof contact_messages_reason]


export const testimonials_language: {
  en: 'en',
  am: 'am'
};

export type testimonials_language = (typeof testimonials_language)[keyof typeof testimonials_language]


export const contact_messages_status: {
  new: 'new',
  read: 'read',
  replied: 'replied',
  closed: 'closed'
};

export type contact_messages_status = (typeof contact_messages_status)[keyof typeof contact_messages_status]


export const users_language_preference: {
  en: 'en',
  am: 'am'
};

export type users_language_preference = (typeof users_language_preference)[keyof typeof users_language_preference]


export const donations_payment_status: {
  pending: 'pending',
  completed: 'completed',
  failed: 'failed'
};

export type donations_payment_status = (typeof donations_payment_status)[keyof typeof donations_payment_status]


export const partners_language: {
  en: 'en',
  am: 'am'
};

export type partners_language = (typeof partners_language)[keyof typeof partners_language]


export const posts_language: {
  en: 'en',
  am: 'am'
};

export type posts_language = (typeof posts_language)[keyof typeof posts_language]


export const media_language: {
  en: 'en',
  am: 'am'
};

export type media_language = (typeof media_language)[keyof typeof media_language]


export const donor_profiles_donation_tier: {
  bronze: 'bronze',
  silver: 'silver',
  gold: 'gold',
  platinum: 'platinum'
};

export type donor_profiles_donation_tier = (typeof donor_profiles_donation_tier)[keyof typeof donor_profiles_donation_tier]


export const documents_language: {
  en: 'en',
  am: 'am'
};

export type documents_language = (typeof documents_language)[keyof typeof documents_language]


export const volunteer_profiles_background_check_status: {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

export type volunteer_profiles_background_check_status = (typeof volunteer_profiles_background_check_status)[keyof typeof volunteer_profiles_background_check_status]


export const programs_language: {
  en: 'en',
  am: 'am'
};

export type programs_language = (typeof programs_language)[keyof typeof programs_language]


export const events_status: {
  upcoming: 'upcoming',
  ongoing: 'ongoing',
  completed: 'completed',
  cancelled: 'cancelled'
};

export type events_status = (typeof events_status)[keyof typeof events_status]


export const campaigns_language: {
  en: 'en',
  am: 'am'
};

export type campaigns_language = (typeof campaigns_language)[keyof typeof campaigns_language]


export const events_language: {
  en: 'en',
  am: 'am'
};

export type events_language = (typeof events_language)[keyof typeof events_language]

}

export type role_permissions_role = $Enums.role_permissions_role

export const role_permissions_role: typeof $Enums.role_permissions_role

export type media_media_type = $Enums.media_media_type

export const media_media_type: typeof $Enums.media_media_type

export type event_participants_role = $Enums.event_participants_role

export const event_participants_role: typeof $Enums.event_participants_role

export type volunteer_skills_proficiency_level = $Enums.volunteer_skills_proficiency_level

export const volunteer_skills_proficiency_level: typeof $Enums.volunteer_skills_proficiency_level

export type programs_category = $Enums.programs_category

export const programs_category: typeof $Enums.programs_category

export type event_participants_status = $Enums.event_participants_status

export const event_participants_status: typeof $Enums.event_participants_status

export type partners_type = $Enums.partners_type

export const partners_type: typeof $Enums.partners_type

export type faqs_language = $Enums.faqs_language

export const faqs_language: typeof $Enums.faqs_language

export type donor_profiles_donation_frequency = $Enums.donor_profiles_donation_frequency

export const donor_profiles_donation_frequency: typeof $Enums.donor_profiles_donation_frequency

export type posts_post_type = $Enums.posts_post_type

export const posts_post_type: typeof $Enums.posts_post_type

export type users_role = $Enums.users_role

export const users_role: typeof $Enums.users_role

export type testimonials_type = $Enums.testimonials_type

export const testimonials_type: typeof $Enums.testimonials_type

export type email_logs_status = $Enums.email_logs_status

export const email_logs_status: typeof $Enums.email_logs_status

export type donations_donation_type = $Enums.donations_donation_type

export const donations_donation_type: typeof $Enums.donations_donation_type

export type newsletter_subscribers_language_preference = $Enums.newsletter_subscribers_language_preference

export const newsletter_subscribers_language_preference: typeof $Enums.newsletter_subscribers_language_preference

export type contact_messages_reason = $Enums.contact_messages_reason

export const contact_messages_reason: typeof $Enums.contact_messages_reason

export type testimonials_language = $Enums.testimonials_language

export const testimonials_language: typeof $Enums.testimonials_language

export type contact_messages_status = $Enums.contact_messages_status

export const contact_messages_status: typeof $Enums.contact_messages_status

export type users_language_preference = $Enums.users_language_preference

export const users_language_preference: typeof $Enums.users_language_preference

export type donations_payment_status = $Enums.donations_payment_status

export const donations_payment_status: typeof $Enums.donations_payment_status

export type partners_language = $Enums.partners_language

export const partners_language: typeof $Enums.partners_language

export type posts_language = $Enums.posts_language

export const posts_language: typeof $Enums.posts_language

export type media_language = $Enums.media_language

export const media_language: typeof $Enums.media_language

export type donor_profiles_donation_tier = $Enums.donor_profiles_donation_tier

export const donor_profiles_donation_tier: typeof $Enums.donor_profiles_donation_tier

export type documents_language = $Enums.documents_language

export const documents_language: typeof $Enums.documents_language

export type volunteer_profiles_background_check_status = $Enums.volunteer_profiles_background_check_status

export const volunteer_profiles_background_check_status: typeof $Enums.volunteer_profiles_background_check_status

export type programs_language = $Enums.programs_language

export const programs_language: typeof $Enums.programs_language

export type events_status = $Enums.events_status

export const events_status: typeof $Enums.events_status

export type campaigns_language = $Enums.campaigns_language

export const campaigns_language: typeof $Enums.campaigns_language

export type events_language = $Enums.events_language

export const events_language: typeof $Enums.events_language

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Campaigns
 * const campaigns = await prisma.campaigns.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Campaigns
   * const campaigns = await prisma.campaigns.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.campaigns`: Exposes CRUD operations for the **campaigns** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campaigns
    * const campaigns = await prisma.campaigns.findMany()
    * ```
    */
  get campaigns(): Prisma.campaignsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.contact_messages`: Exposes CRUD operations for the **contact_messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contact_messages
    * const contact_messages = await prisma.contact_messages.findMany()
    * ```
    */
  get contact_messages(): Prisma.contact_messagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.documents`: Exposes CRUD operations for the **documents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.documents.findMany()
    * ```
    */
  get documents(): Prisma.documentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donations`: Exposes CRUD operations for the **donations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Donations
    * const donations = await prisma.donations.findMany()
    * ```
    */
  get donations(): Prisma.donationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donor_profiles`: Exposes CRUD operations for the **donor_profiles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Donor_profiles
    * const donor_profiles = await prisma.donor_profiles.findMany()
    * ```
    */
  get donor_profiles(): Prisma.donor_profilesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.email_logs`: Exposes CRUD operations for the **email_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Email_logs
    * const email_logs = await prisma.email_logs.findMany()
    * ```
    */
  get email_logs(): Prisma.email_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.event_participants`: Exposes CRUD operations for the **event_participants** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Event_participants
    * const event_participants = await prisma.event_participants.findMany()
    * ```
    */
  get event_participants(): Prisma.event_participantsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.events`: Exposes CRUD operations for the **events** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Events
    * const events = await prisma.events.findMany()
    * ```
    */
  get events(): Prisma.eventsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.faqs`: Exposes CRUD operations for the **faqs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Faqs
    * const faqs = await prisma.faqs.findMany()
    * ```
    */
  get faqs(): Prisma.faqsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.media`: Exposes CRUD operations for the **media** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Media
    * const media = await prisma.media.findMany()
    * ```
    */
  get media(): Prisma.mediaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.newsletter_subscribers`: Exposes CRUD operations for the **newsletter_subscribers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Newsletter_subscribers
    * const newsletter_subscribers = await prisma.newsletter_subscribers.findMany()
    * ```
    */
  get newsletter_subscribers(): Prisma.newsletter_subscribersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.partners`: Exposes CRUD operations for the **partners** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Partners
    * const partners = await prisma.partners.findMany()
    * ```
    */
  get partners(): Prisma.partnersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.posts`: Exposes CRUD operations for the **posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.posts.findMany()
    * ```
    */
  get posts(): Prisma.postsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.programs`: Exposes CRUD operations for the **programs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Programs
    * const programs = await prisma.programs.findMany()
    * ```
    */
  get programs(): Prisma.programsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role_permissions`: Exposes CRUD operations for the **role_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Role_permissions
    * const role_permissions = await prisma.role_permissions.findMany()
    * ```
    */
  get role_permissions(): Prisma.role_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.site_interactions`: Exposes CRUD operations for the **site_interactions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Site_interactions
    * const site_interactions = await prisma.site_interactions.findMany()
    * ```
    */
  get site_interactions(): Prisma.site_interactionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skills`: Exposes CRUD operations for the **skills** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Skills
    * const skills = await prisma.skills.findMany()
    * ```
    */
  get skills(): Prisma.skillsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.testimonials`: Exposes CRUD operations for the **testimonials** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Testimonials
    * const testimonials = await prisma.testimonials.findMany()
    * ```
    */
  get testimonials(): Prisma.testimonialsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.volunteer_profiles`: Exposes CRUD operations for the **volunteer_profiles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Volunteer_profiles
    * const volunteer_profiles = await prisma.volunteer_profiles.findMany()
    * ```
    */
  get volunteer_profiles(): Prisma.volunteer_profilesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.volunteer_skills`: Exposes CRUD operations for the **volunteer_skills** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Volunteer_skills
    * const volunteer_skills = await prisma.volunteer_skills.findMany()
    * ```
    */
  get volunteer_skills(): Prisma.volunteer_skillsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    campaigns: 'campaigns',
    contact_messages: 'contact_messages',
    documents: 'documents',
    donations: 'donations',
    donor_profiles: 'donor_profiles',
    email_logs: 'email_logs',
    event_participants: 'event_participants',
    events: 'events',
    faqs: 'faqs',
    media: 'media',
    newsletter_subscribers: 'newsletter_subscribers',
    partners: 'partners',
    posts: 'posts',
    programs: 'programs',
    role_permissions: 'role_permissions',
    site_interactions: 'site_interactions',
    skills: 'skills',
    testimonials: 'testimonials',
    users: 'users',
    volunteer_profiles: 'volunteer_profiles',
    volunteer_skills: 'volunteer_skills'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "campaigns" | "contact_messages" | "documents" | "donations" | "donor_profiles" | "email_logs" | "event_participants" | "events" | "faqs" | "media" | "newsletter_subscribers" | "partners" | "posts" | "programs" | "role_permissions" | "site_interactions" | "skills" | "testimonials" | "users" | "volunteer_profiles" | "volunteer_skills"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      campaigns: {
        payload: Prisma.$campaignsPayload<ExtArgs>
        fields: Prisma.campaignsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.campaignsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.campaignsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload>
          }
          findFirst: {
            args: Prisma.campaignsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.campaignsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload>
          }
          findMany: {
            args: Prisma.campaignsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload>[]
          }
          create: {
            args: Prisma.campaignsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload>
          }
          createMany: {
            args: Prisma.campaignsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.campaignsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload>
          }
          update: {
            args: Prisma.campaignsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload>
          }
          deleteMany: {
            args: Prisma.campaignsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.campaignsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.campaignsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$campaignsPayload>
          }
          aggregate: {
            args: Prisma.CampaignsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCampaigns>
          }
          groupBy: {
            args: Prisma.campaignsGroupByArgs<ExtArgs>
            result: $Utils.Optional<CampaignsGroupByOutputType>[]
          }
          count: {
            args: Prisma.campaignsCountArgs<ExtArgs>
            result: $Utils.Optional<CampaignsCountAggregateOutputType> | number
          }
        }
      }
      contact_messages: {
        payload: Prisma.$contact_messagesPayload<ExtArgs>
        fields: Prisma.contact_messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.contact_messagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.contact_messagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload>
          }
          findFirst: {
            args: Prisma.contact_messagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.contact_messagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload>
          }
          findMany: {
            args: Prisma.contact_messagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload>[]
          }
          create: {
            args: Prisma.contact_messagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload>
          }
          createMany: {
            args: Prisma.contact_messagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.contact_messagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload>
          }
          update: {
            args: Prisma.contact_messagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload>
          }
          deleteMany: {
            args: Prisma.contact_messagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.contact_messagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.contact_messagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contact_messagesPayload>
          }
          aggregate: {
            args: Prisma.Contact_messagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContact_messages>
          }
          groupBy: {
            args: Prisma.contact_messagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Contact_messagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.contact_messagesCountArgs<ExtArgs>
            result: $Utils.Optional<Contact_messagesCountAggregateOutputType> | number
          }
        }
      }
      documents: {
        payload: Prisma.$documentsPayload<ExtArgs>
        fields: Prisma.documentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.documentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.documentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          findFirst: {
            args: Prisma.documentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.documentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          findMany: {
            args: Prisma.documentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>[]
          }
          create: {
            args: Prisma.documentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          createMany: {
            args: Prisma.documentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.documentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          update: {
            args: Prisma.documentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          deleteMany: {
            args: Prisma.documentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.documentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.documentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          aggregate: {
            args: Prisma.DocumentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocuments>
          }
          groupBy: {
            args: Prisma.documentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.documentsCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentsCountAggregateOutputType> | number
          }
        }
      }
      donations: {
        payload: Prisma.$donationsPayload<ExtArgs>
        fields: Prisma.donationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.donationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.donationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload>
          }
          findFirst: {
            args: Prisma.donationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.donationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload>
          }
          findMany: {
            args: Prisma.donationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload>[]
          }
          create: {
            args: Prisma.donationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload>
          }
          createMany: {
            args: Prisma.donationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.donationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload>
          }
          update: {
            args: Prisma.donationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload>
          }
          deleteMany: {
            args: Prisma.donationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.donationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.donationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donationsPayload>
          }
          aggregate: {
            args: Prisma.DonationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonations>
          }
          groupBy: {
            args: Prisma.donationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.donationsCountArgs<ExtArgs>
            result: $Utils.Optional<DonationsCountAggregateOutputType> | number
          }
        }
      }
      donor_profiles: {
        payload: Prisma.$donor_profilesPayload<ExtArgs>
        fields: Prisma.donor_profilesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.donor_profilesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.donor_profilesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload>
          }
          findFirst: {
            args: Prisma.donor_profilesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.donor_profilesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload>
          }
          findMany: {
            args: Prisma.donor_profilesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload>[]
          }
          create: {
            args: Prisma.donor_profilesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload>
          }
          createMany: {
            args: Prisma.donor_profilesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.donor_profilesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload>
          }
          update: {
            args: Prisma.donor_profilesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload>
          }
          deleteMany: {
            args: Prisma.donor_profilesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.donor_profilesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.donor_profilesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$donor_profilesPayload>
          }
          aggregate: {
            args: Prisma.Donor_profilesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonor_profiles>
          }
          groupBy: {
            args: Prisma.donor_profilesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Donor_profilesGroupByOutputType>[]
          }
          count: {
            args: Prisma.donor_profilesCountArgs<ExtArgs>
            result: $Utils.Optional<Donor_profilesCountAggregateOutputType> | number
          }
        }
      }
      email_logs: {
        payload: Prisma.$email_logsPayload<ExtArgs>
        fields: Prisma.email_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.email_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.email_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload>
          }
          findFirst: {
            args: Prisma.email_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.email_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload>
          }
          findMany: {
            args: Prisma.email_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload>[]
          }
          create: {
            args: Prisma.email_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload>
          }
          createMany: {
            args: Prisma.email_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.email_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload>
          }
          update: {
            args: Prisma.email_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload>
          }
          deleteMany: {
            args: Prisma.email_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.email_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.email_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_logsPayload>
          }
          aggregate: {
            args: Prisma.Email_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmail_logs>
          }
          groupBy: {
            args: Prisma.email_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Email_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.email_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Email_logsCountAggregateOutputType> | number
          }
        }
      }
      event_participants: {
        payload: Prisma.$event_participantsPayload<ExtArgs>
        fields: Prisma.event_participantsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.event_participantsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.event_participantsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload>
          }
          findFirst: {
            args: Prisma.event_participantsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.event_participantsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload>
          }
          findMany: {
            args: Prisma.event_participantsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload>[]
          }
          create: {
            args: Prisma.event_participantsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload>
          }
          createMany: {
            args: Prisma.event_participantsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.event_participantsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload>
          }
          update: {
            args: Prisma.event_participantsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload>
          }
          deleteMany: {
            args: Prisma.event_participantsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.event_participantsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.event_participantsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_participantsPayload>
          }
          aggregate: {
            args: Prisma.Event_participantsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvent_participants>
          }
          groupBy: {
            args: Prisma.event_participantsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Event_participantsGroupByOutputType>[]
          }
          count: {
            args: Prisma.event_participantsCountArgs<ExtArgs>
            result: $Utils.Optional<Event_participantsCountAggregateOutputType> | number
          }
        }
      }
      events: {
        payload: Prisma.$eventsPayload<ExtArgs>
        fields: Prisma.eventsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.eventsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.eventsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          findFirst: {
            args: Prisma.eventsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.eventsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          findMany: {
            args: Prisma.eventsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>[]
          }
          create: {
            args: Prisma.eventsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          createMany: {
            args: Prisma.eventsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.eventsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          update: {
            args: Prisma.eventsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          deleteMany: {
            args: Prisma.eventsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.eventsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.eventsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          aggregate: {
            args: Prisma.EventsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvents>
          }
          groupBy: {
            args: Prisma.eventsGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventsGroupByOutputType>[]
          }
          count: {
            args: Prisma.eventsCountArgs<ExtArgs>
            result: $Utils.Optional<EventsCountAggregateOutputType> | number
          }
        }
      }
      faqs: {
        payload: Prisma.$faqsPayload<ExtArgs>
        fields: Prisma.faqsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.faqsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.faqsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload>
          }
          findFirst: {
            args: Prisma.faqsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.faqsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload>
          }
          findMany: {
            args: Prisma.faqsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload>[]
          }
          create: {
            args: Prisma.faqsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload>
          }
          createMany: {
            args: Prisma.faqsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.faqsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload>
          }
          update: {
            args: Prisma.faqsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload>
          }
          deleteMany: {
            args: Prisma.faqsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.faqsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.faqsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$faqsPayload>
          }
          aggregate: {
            args: Prisma.FaqsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFaqs>
          }
          groupBy: {
            args: Prisma.faqsGroupByArgs<ExtArgs>
            result: $Utils.Optional<FaqsGroupByOutputType>[]
          }
          count: {
            args: Prisma.faqsCountArgs<ExtArgs>
            result: $Utils.Optional<FaqsCountAggregateOutputType> | number
          }
        }
      }
      media: {
        payload: Prisma.$mediaPayload<ExtArgs>
        fields: Prisma.mediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload>
          }
          findFirst: {
            args: Prisma.mediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload>
          }
          findMany: {
            args: Prisma.mediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload>[]
          }
          create: {
            args: Prisma.mediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload>
          }
          createMany: {
            args: Prisma.mediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.mediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload>
          }
          update: {
            args: Prisma.mediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload>
          }
          deleteMany: {
            args: Prisma.mediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.mediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mediaPayload>
          }
          aggregate: {
            args: Prisma.MediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMedia>
          }
          groupBy: {
            args: Prisma.mediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.mediaCountArgs<ExtArgs>
            result: $Utils.Optional<MediaCountAggregateOutputType> | number
          }
        }
      }
      newsletter_subscribers: {
        payload: Prisma.$newsletter_subscribersPayload<ExtArgs>
        fields: Prisma.newsletter_subscribersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.newsletter_subscribersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.newsletter_subscribersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload>
          }
          findFirst: {
            args: Prisma.newsletter_subscribersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.newsletter_subscribersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload>
          }
          findMany: {
            args: Prisma.newsletter_subscribersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload>[]
          }
          create: {
            args: Prisma.newsletter_subscribersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload>
          }
          createMany: {
            args: Prisma.newsletter_subscribersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.newsletter_subscribersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload>
          }
          update: {
            args: Prisma.newsletter_subscribersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload>
          }
          deleteMany: {
            args: Prisma.newsletter_subscribersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.newsletter_subscribersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.newsletter_subscribersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$newsletter_subscribersPayload>
          }
          aggregate: {
            args: Prisma.Newsletter_subscribersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNewsletter_subscribers>
          }
          groupBy: {
            args: Prisma.newsletter_subscribersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Newsletter_subscribersGroupByOutputType>[]
          }
          count: {
            args: Prisma.newsletter_subscribersCountArgs<ExtArgs>
            result: $Utils.Optional<Newsletter_subscribersCountAggregateOutputType> | number
          }
        }
      }
      partners: {
        payload: Prisma.$partnersPayload<ExtArgs>
        fields: Prisma.partnersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.partnersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.partnersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload>
          }
          findFirst: {
            args: Prisma.partnersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.partnersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload>
          }
          findMany: {
            args: Prisma.partnersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload>[]
          }
          create: {
            args: Prisma.partnersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload>
          }
          createMany: {
            args: Prisma.partnersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.partnersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload>
          }
          update: {
            args: Prisma.partnersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload>
          }
          deleteMany: {
            args: Prisma.partnersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.partnersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.partnersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partnersPayload>
          }
          aggregate: {
            args: Prisma.PartnersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePartners>
          }
          groupBy: {
            args: Prisma.partnersGroupByArgs<ExtArgs>
            result: $Utils.Optional<PartnersGroupByOutputType>[]
          }
          count: {
            args: Prisma.partnersCountArgs<ExtArgs>
            result: $Utils.Optional<PartnersCountAggregateOutputType> | number
          }
        }
      }
      posts: {
        payload: Prisma.$postsPayload<ExtArgs>
        fields: Prisma.postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          findFirst: {
            args: Prisma.postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          findMany: {
            args: Prisma.postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>[]
          }
          create: {
            args: Prisma.postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          createMany: {
            args: Prisma.postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          update: {
            args: Prisma.postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          deleteMany: {
            args: Prisma.postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          aggregate: {
            args: Prisma.PostsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePosts>
          }
          groupBy: {
            args: Prisma.postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostsGroupByOutputType>[]
          }
          count: {
            args: Prisma.postsCountArgs<ExtArgs>
            result: $Utils.Optional<PostsCountAggregateOutputType> | number
          }
        }
      }
      programs: {
        payload: Prisma.$programsPayload<ExtArgs>
        fields: Prisma.programsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.programsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.programsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload>
          }
          findFirst: {
            args: Prisma.programsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.programsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload>
          }
          findMany: {
            args: Prisma.programsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload>[]
          }
          create: {
            args: Prisma.programsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload>
          }
          createMany: {
            args: Prisma.programsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.programsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload>
          }
          update: {
            args: Prisma.programsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload>
          }
          deleteMany: {
            args: Prisma.programsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.programsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.programsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$programsPayload>
          }
          aggregate: {
            args: Prisma.ProgramsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrograms>
          }
          groupBy: {
            args: Prisma.programsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProgramsGroupByOutputType>[]
          }
          count: {
            args: Prisma.programsCountArgs<ExtArgs>
            result: $Utils.Optional<ProgramsCountAggregateOutputType> | number
          }
        }
      }
      role_permissions: {
        payload: Prisma.$role_permissionsPayload<ExtArgs>
        fields: Prisma.role_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.role_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.role_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          findFirst: {
            args: Prisma.role_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.role_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          findMany: {
            args: Prisma.role_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>[]
          }
          create: {
            args: Prisma.role_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          createMany: {
            args: Prisma.role_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.role_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          update: {
            args: Prisma.role_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.role_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.role_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.role_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Role_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole_permissions>
          }
          groupBy: {
            args: Prisma.role_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Role_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.role_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Role_permissionsCountAggregateOutputType> | number
          }
        }
      }
      site_interactions: {
        payload: Prisma.$site_interactionsPayload<ExtArgs>
        fields: Prisma.site_interactionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.site_interactionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.site_interactionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload>
          }
          findFirst: {
            args: Prisma.site_interactionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.site_interactionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload>
          }
          findMany: {
            args: Prisma.site_interactionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload>[]
          }
          create: {
            args: Prisma.site_interactionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload>
          }
          createMany: {
            args: Prisma.site_interactionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.site_interactionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload>
          }
          update: {
            args: Prisma.site_interactionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload>
          }
          deleteMany: {
            args: Prisma.site_interactionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.site_interactionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.site_interactionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_interactionsPayload>
          }
          aggregate: {
            args: Prisma.Site_interactionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSite_interactions>
          }
          groupBy: {
            args: Prisma.site_interactionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Site_interactionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.site_interactionsCountArgs<ExtArgs>
            result: $Utils.Optional<Site_interactionsCountAggregateOutputType> | number
          }
        }
      }
      skills: {
        payload: Prisma.$skillsPayload<ExtArgs>
        fields: Prisma.skillsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.skillsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.skillsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload>
          }
          findFirst: {
            args: Prisma.skillsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.skillsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload>
          }
          findMany: {
            args: Prisma.skillsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload>[]
          }
          create: {
            args: Prisma.skillsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload>
          }
          createMany: {
            args: Prisma.skillsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.skillsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload>
          }
          update: {
            args: Prisma.skillsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload>
          }
          deleteMany: {
            args: Prisma.skillsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.skillsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.skillsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skillsPayload>
          }
          aggregate: {
            args: Prisma.SkillsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkills>
          }
          groupBy: {
            args: Prisma.skillsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkillsGroupByOutputType>[]
          }
          count: {
            args: Prisma.skillsCountArgs<ExtArgs>
            result: $Utils.Optional<SkillsCountAggregateOutputType> | number
          }
        }
      }
      testimonials: {
        payload: Prisma.$testimonialsPayload<ExtArgs>
        fields: Prisma.testimonialsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.testimonialsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.testimonialsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload>
          }
          findFirst: {
            args: Prisma.testimonialsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.testimonialsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload>
          }
          findMany: {
            args: Prisma.testimonialsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload>[]
          }
          create: {
            args: Prisma.testimonialsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload>
          }
          createMany: {
            args: Prisma.testimonialsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.testimonialsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload>
          }
          update: {
            args: Prisma.testimonialsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload>
          }
          deleteMany: {
            args: Prisma.testimonialsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.testimonialsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.testimonialsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$testimonialsPayload>
          }
          aggregate: {
            args: Prisma.TestimonialsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTestimonials>
          }
          groupBy: {
            args: Prisma.testimonialsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TestimonialsGroupByOutputType>[]
          }
          count: {
            args: Prisma.testimonialsCountArgs<ExtArgs>
            result: $Utils.Optional<TestimonialsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      volunteer_profiles: {
        payload: Prisma.$volunteer_profilesPayload<ExtArgs>
        fields: Prisma.volunteer_profilesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.volunteer_profilesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.volunteer_profilesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload>
          }
          findFirst: {
            args: Prisma.volunteer_profilesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.volunteer_profilesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload>
          }
          findMany: {
            args: Prisma.volunteer_profilesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload>[]
          }
          create: {
            args: Prisma.volunteer_profilesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload>
          }
          createMany: {
            args: Prisma.volunteer_profilesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.volunteer_profilesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload>
          }
          update: {
            args: Prisma.volunteer_profilesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload>
          }
          deleteMany: {
            args: Prisma.volunteer_profilesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.volunteer_profilesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.volunteer_profilesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_profilesPayload>
          }
          aggregate: {
            args: Prisma.Volunteer_profilesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVolunteer_profiles>
          }
          groupBy: {
            args: Prisma.volunteer_profilesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Volunteer_profilesGroupByOutputType>[]
          }
          count: {
            args: Prisma.volunteer_profilesCountArgs<ExtArgs>
            result: $Utils.Optional<Volunteer_profilesCountAggregateOutputType> | number
          }
        }
      }
      volunteer_skills: {
        payload: Prisma.$volunteer_skillsPayload<ExtArgs>
        fields: Prisma.volunteer_skillsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.volunteer_skillsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.volunteer_skillsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload>
          }
          findFirst: {
            args: Prisma.volunteer_skillsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.volunteer_skillsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload>
          }
          findMany: {
            args: Prisma.volunteer_skillsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload>[]
          }
          create: {
            args: Prisma.volunteer_skillsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload>
          }
          createMany: {
            args: Prisma.volunteer_skillsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.volunteer_skillsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload>
          }
          update: {
            args: Prisma.volunteer_skillsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload>
          }
          deleteMany: {
            args: Prisma.volunteer_skillsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.volunteer_skillsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.volunteer_skillsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$volunteer_skillsPayload>
          }
          aggregate: {
            args: Prisma.Volunteer_skillsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVolunteer_skills>
          }
          groupBy: {
            args: Prisma.volunteer_skillsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Volunteer_skillsGroupByOutputType>[]
          }
          count: {
            args: Prisma.volunteer_skillsCountArgs<ExtArgs>
            result: $Utils.Optional<Volunteer_skillsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    campaigns?: campaignsOmit
    contact_messages?: contact_messagesOmit
    documents?: documentsOmit
    donations?: donationsOmit
    donor_profiles?: donor_profilesOmit
    email_logs?: email_logsOmit
    event_participants?: event_participantsOmit
    events?: eventsOmit
    faqs?: faqsOmit
    media?: mediaOmit
    newsletter_subscribers?: newsletter_subscribersOmit
    partners?: partnersOmit
    posts?: postsOmit
    programs?: programsOmit
    role_permissions?: role_permissionsOmit
    site_interactions?: site_interactionsOmit
    skills?: skillsOmit
    testimonials?: testimonialsOmit
    users?: usersOmit
    volunteer_profiles?: volunteer_profilesOmit
    volunteer_skills?: volunteer_skillsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CampaignsCountOutputType
   */

  export type CampaignsCountOutputType = {
    donations: number
  }

  export type CampaignsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donations?: boolean | CampaignsCountOutputTypeCountDonationsArgs
  }

  // Custom InputTypes
  /**
   * CampaignsCountOutputType without action
   */
  export type CampaignsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampaignsCountOutputType
     */
    select?: CampaignsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CampaignsCountOutputType without action
   */
  export type CampaignsCountOutputTypeCountDonationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: donationsWhereInput
  }


  /**
   * Count Type Donor_profilesCountOutputType
   */

  export type Donor_profilesCountOutputType = {
    donations: number
  }

  export type Donor_profilesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donations?: boolean | Donor_profilesCountOutputTypeCountDonationsArgs
  }

  // Custom InputTypes
  /**
   * Donor_profilesCountOutputType without action
   */
  export type Donor_profilesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor_profilesCountOutputType
     */
    select?: Donor_profilesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Donor_profilesCountOutputType without action
   */
  export type Donor_profilesCountOutputTypeCountDonationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: donationsWhereInput
  }


  /**
   * Count Type EventsCountOutputType
   */

  export type EventsCountOutputType = {
    event_participants: number
    media: number
  }

  export type EventsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_participants?: boolean | EventsCountOutputTypeCountEvent_participantsArgs
    media?: boolean | EventsCountOutputTypeCountMediaArgs
  }

  // Custom InputTypes
  /**
   * EventsCountOutputType without action
   */
  export type EventsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventsCountOutputType
     */
    select?: EventsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EventsCountOutputType without action
   */
  export type EventsCountOutputTypeCountEvent_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: event_participantsWhereInput
  }

  /**
   * EventsCountOutputType without action
   */
  export type EventsCountOutputTypeCountMediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mediaWhereInput
  }


  /**
   * Count Type ProgramsCountOutputType
   */

  export type ProgramsCountOutputType = {
    media: number
  }

  export type ProgramsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    media?: boolean | ProgramsCountOutputTypeCountMediaArgs
  }

  // Custom InputTypes
  /**
   * ProgramsCountOutputType without action
   */
  export type ProgramsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramsCountOutputType
     */
    select?: ProgramsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProgramsCountOutputType without action
   */
  export type ProgramsCountOutputTypeCountMediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mediaWhereInput
  }


  /**
   * Count Type SkillsCountOutputType
   */

  export type SkillsCountOutputType = {
    volunteer_skills: number
  }

  export type SkillsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    volunteer_skills?: boolean | SkillsCountOutputTypeCountVolunteer_skillsArgs
  }

  // Custom InputTypes
  /**
   * SkillsCountOutputType without action
   */
  export type SkillsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillsCountOutputType
     */
    select?: SkillsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SkillsCountOutputType without action
   */
  export type SkillsCountOutputTypeCountVolunteer_skillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: volunteer_skillsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    campaigns: number
    documents: number
    event_participants: number
    events: number
    media: number
    posts: number
    programs: number
    site_interactions: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaigns?: boolean | UsersCountOutputTypeCountCampaignsArgs
    documents?: boolean | UsersCountOutputTypeCountDocumentsArgs
    event_participants?: boolean | UsersCountOutputTypeCountEvent_participantsArgs
    events?: boolean | UsersCountOutputTypeCountEventsArgs
    media?: boolean | UsersCountOutputTypeCountMediaArgs
    posts?: boolean | UsersCountOutputTypeCountPostsArgs
    programs?: boolean | UsersCountOutputTypeCountProgramsArgs
    site_interactions?: boolean | UsersCountOutputTypeCountSite_interactionsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCampaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: campaignsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: documentsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountEvent_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: event_participantsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: eventsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mediaWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountProgramsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: programsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSite_interactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: site_interactionsWhereInput
  }


  /**
   * Count Type Volunteer_profilesCountOutputType
   */

  export type Volunteer_profilesCountOutputType = {
    volunteer_skills: number
  }

  export type Volunteer_profilesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    volunteer_skills?: boolean | Volunteer_profilesCountOutputTypeCountVolunteer_skillsArgs
  }

  // Custom InputTypes
  /**
   * Volunteer_profilesCountOutputType without action
   */
  export type Volunteer_profilesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Volunteer_profilesCountOutputType
     */
    select?: Volunteer_profilesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Volunteer_profilesCountOutputType without action
   */
  export type Volunteer_profilesCountOutputTypeCountVolunteer_skillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: volunteer_skillsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model campaigns
   */

  export type AggregateCampaigns = {
    _count: CampaignsCountAggregateOutputType | null
    _avg: CampaignsAvgAggregateOutputType | null
    _sum: CampaignsSumAggregateOutputType | null
    _min: CampaignsMinAggregateOutputType | null
    _max: CampaignsMaxAggregateOutputType | null
  }

  export type CampaignsAvgAggregateOutputType = {
    id: number | null
    goal_amount: Decimal | null
    current_amount: Decimal | null
    donor_count: number | null
    created_by: number | null
  }

  export type CampaignsSumAggregateOutputType = {
    id: bigint | null
    goal_amount: Decimal | null
    current_amount: Decimal | null
    donor_count: number | null
    created_by: bigint | null
  }

  export type CampaignsMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    slug: string | null
    description: string | null
    goal_amount: Decimal | null
    current_amount: Decimal | null
    start_date: Date | null
    end_date: Date | null
    is_active: boolean | null
    is_featured: boolean | null
    category: string | null
    progress_bar_color: string | null
    image_url: string | null
    video_url: string | null
    donor_count: number | null
    success_stories: string | null
    created_by: bigint | null
    language: $Enums.campaigns_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type CampaignsMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    slug: string | null
    description: string | null
    goal_amount: Decimal | null
    current_amount: Decimal | null
    start_date: Date | null
    end_date: Date | null
    is_active: boolean | null
    is_featured: boolean | null
    category: string | null
    progress_bar_color: string | null
    image_url: string | null
    video_url: string | null
    donor_count: number | null
    success_stories: string | null
    created_by: bigint | null
    language: $Enums.campaigns_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type CampaignsCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    description: number
    goal_amount: number
    current_amount: number
    start_date: number
    end_date: number
    is_active: number
    is_featured: number
    category: number
    progress_bar_color: number
    image_url: number
    video_url: number
    donor_count: number
    success_stories: number
    created_by: number
    language: number
    translation_group_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type CampaignsAvgAggregateInputType = {
    id?: true
    goal_amount?: true
    current_amount?: true
    donor_count?: true
    created_by?: true
  }

  export type CampaignsSumAggregateInputType = {
    id?: true
    goal_amount?: true
    current_amount?: true
    donor_count?: true
    created_by?: true
  }

  export type CampaignsMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    goal_amount?: true
    current_amount?: true
    start_date?: true
    end_date?: true
    is_active?: true
    is_featured?: true
    category?: true
    progress_bar_color?: true
    image_url?: true
    video_url?: true
    donor_count?: true
    success_stories?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type CampaignsMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    goal_amount?: true
    current_amount?: true
    start_date?: true
    end_date?: true
    is_active?: true
    is_featured?: true
    category?: true
    progress_bar_color?: true
    image_url?: true
    video_url?: true
    donor_count?: true
    success_stories?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type CampaignsCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    goal_amount?: true
    current_amount?: true
    start_date?: true
    end_date?: true
    is_active?: true
    is_featured?: true
    category?: true
    progress_bar_color?: true
    image_url?: true
    video_url?: true
    donor_count?: true
    success_stories?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type CampaignsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which campaigns to aggregate.
     */
    where?: campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignsOrderByWithRelationInput | campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned campaigns
    **/
    _count?: true | CampaignsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CampaignsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CampaignsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampaignsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampaignsMaxAggregateInputType
  }

  export type GetCampaignsAggregateType<T extends CampaignsAggregateArgs> = {
        [P in keyof T & keyof AggregateCampaigns]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampaigns[P]>
      : GetScalarType<T[P], AggregateCampaigns[P]>
  }




  export type campaignsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: campaignsWhereInput
    orderBy?: campaignsOrderByWithAggregationInput | campaignsOrderByWithAggregationInput[]
    by: CampaignsScalarFieldEnum[] | CampaignsScalarFieldEnum
    having?: campaignsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampaignsCountAggregateInputType | true
    _avg?: CampaignsAvgAggregateInputType
    _sum?: CampaignsSumAggregateInputType
    _min?: CampaignsMinAggregateInputType
    _max?: CampaignsMaxAggregateInputType
  }

  export type CampaignsGroupByOutputType = {
    id: bigint
    title: string
    slug: string
    description: string | null
    goal_amount: Decimal
    current_amount: Decimal | null
    start_date: Date
    end_date: Date | null
    is_active: boolean | null
    is_featured: boolean | null
    category: string | null
    progress_bar_color: string | null
    image_url: string | null
    video_url: string | null
    donor_count: number | null
    success_stories: string | null
    created_by: bigint | null
    language: $Enums.campaigns_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: CampaignsCountAggregateOutputType | null
    _avg: CampaignsAvgAggregateOutputType | null
    _sum: CampaignsSumAggregateOutputType | null
    _min: CampaignsMinAggregateOutputType | null
    _max: CampaignsMaxAggregateOutputType | null
  }

  type GetCampaignsGroupByPayload<T extends campaignsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampaignsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampaignsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampaignsGroupByOutputType[P]>
            : GetScalarType<T[P], CampaignsGroupByOutputType[P]>
        }
      >
    >


  export type campaignsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    goal_amount?: boolean
    current_amount?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
    is_featured?: boolean
    category?: boolean
    progress_bar_color?: boolean
    image_url?: boolean
    video_url?: boolean
    donor_count?: boolean
    success_stories?: boolean
    created_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    users?: boolean | campaigns$usersArgs<ExtArgs>
    donations?: boolean | campaigns$donationsArgs<ExtArgs>
    _count?: boolean | CampaignsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campaigns"]>



  export type campaignsSelectScalar = {
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    goal_amount?: boolean
    current_amount?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
    is_featured?: boolean
    category?: boolean
    progress_bar_color?: boolean
    image_url?: boolean
    video_url?: boolean
    donor_count?: boolean
    success_stories?: boolean
    created_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type campaignsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "slug" | "description" | "goal_amount" | "current_amount" | "start_date" | "end_date" | "is_active" | "is_featured" | "category" | "progress_bar_color" | "image_url" | "video_url" | "donor_count" | "success_stories" | "created_by" | "language" | "translation_group_id" | "created_at" | "updated_at" | "deleted_at", ExtArgs["result"]["campaigns"]>
  export type campaignsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | campaigns$usersArgs<ExtArgs>
    donations?: boolean | campaigns$donationsArgs<ExtArgs>
    _count?: boolean | CampaignsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $campaignsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "campaigns"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      donations: Prisma.$donationsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      slug: string
      description: string | null
      goal_amount: Prisma.Decimal
      current_amount: Prisma.Decimal | null
      start_date: Date
      end_date: Date | null
      is_active: boolean | null
      is_featured: boolean | null
      category: string | null
      progress_bar_color: string | null
      image_url: string | null
      video_url: string | null
      donor_count: number | null
      success_stories: string | null
      created_by: bigint | null
      language: $Enums.campaigns_language | null
      translation_group_id: string | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["campaigns"]>
    composites: {}
  }

  type campaignsGetPayload<S extends boolean | null | undefined | campaignsDefaultArgs> = $Result.GetResult<Prisma.$campaignsPayload, S>

  type campaignsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<campaignsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CampaignsCountAggregateInputType | true
    }

  export interface campaignsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['campaigns'], meta: { name: 'campaigns' } }
    /**
     * Find zero or one Campaigns that matches the filter.
     * @param {campaignsFindUniqueArgs} args - Arguments to find a Campaigns
     * @example
     * // Get one Campaigns
     * const campaigns = await prisma.campaigns.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends campaignsFindUniqueArgs>(args: SelectSubset<T, campaignsFindUniqueArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Campaigns that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {campaignsFindUniqueOrThrowArgs} args - Arguments to find a Campaigns
     * @example
     * // Get one Campaigns
     * const campaigns = await prisma.campaigns.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends campaignsFindUniqueOrThrowArgs>(args: SelectSubset<T, campaignsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignsFindFirstArgs} args - Arguments to find a Campaigns
     * @example
     * // Get one Campaigns
     * const campaigns = await prisma.campaigns.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends campaignsFindFirstArgs>(args?: SelectSubset<T, campaignsFindFirstArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campaigns that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignsFindFirstOrThrowArgs} args - Arguments to find a Campaigns
     * @example
     * // Get one Campaigns
     * const campaigns = await prisma.campaigns.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends campaignsFindFirstOrThrowArgs>(args?: SelectSubset<T, campaignsFindFirstOrThrowArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campaigns
     * const campaigns = await prisma.campaigns.findMany()
     * 
     * // Get first 10 Campaigns
     * const campaigns = await prisma.campaigns.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const campaignsWithIdOnly = await prisma.campaigns.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends campaignsFindManyArgs>(args?: SelectSubset<T, campaignsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Campaigns.
     * @param {campaignsCreateArgs} args - Arguments to create a Campaigns.
     * @example
     * // Create one Campaigns
     * const Campaigns = await prisma.campaigns.create({
     *   data: {
     *     // ... data to create a Campaigns
     *   }
     * })
     * 
     */
    create<T extends campaignsCreateArgs>(args: SelectSubset<T, campaignsCreateArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Campaigns.
     * @param {campaignsCreateManyArgs} args - Arguments to create many Campaigns.
     * @example
     * // Create many Campaigns
     * const campaigns = await prisma.campaigns.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends campaignsCreateManyArgs>(args?: SelectSubset<T, campaignsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Campaigns.
     * @param {campaignsDeleteArgs} args - Arguments to delete one Campaigns.
     * @example
     * // Delete one Campaigns
     * const Campaigns = await prisma.campaigns.delete({
     *   where: {
     *     // ... filter to delete one Campaigns
     *   }
     * })
     * 
     */
    delete<T extends campaignsDeleteArgs>(args: SelectSubset<T, campaignsDeleteArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Campaigns.
     * @param {campaignsUpdateArgs} args - Arguments to update one Campaigns.
     * @example
     * // Update one Campaigns
     * const campaigns = await prisma.campaigns.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends campaignsUpdateArgs>(args: SelectSubset<T, campaignsUpdateArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Campaigns.
     * @param {campaignsDeleteManyArgs} args - Arguments to filter Campaigns to delete.
     * @example
     * // Delete a few Campaigns
     * const { count } = await prisma.campaigns.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends campaignsDeleteManyArgs>(args?: SelectSubset<T, campaignsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campaigns
     * const campaigns = await prisma.campaigns.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends campaignsUpdateManyArgs>(args: SelectSubset<T, campaignsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Campaigns.
     * @param {campaignsUpsertArgs} args - Arguments to update or create a Campaigns.
     * @example
     * // Update or create a Campaigns
     * const campaigns = await prisma.campaigns.upsert({
     *   create: {
     *     // ... data to create a Campaigns
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campaigns we want to update
     *   }
     * })
     */
    upsert<T extends campaignsUpsertArgs>(args: SelectSubset<T, campaignsUpsertArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignsCountArgs} args - Arguments to filter Campaigns to count.
     * @example
     * // Count the number of Campaigns
     * const count = await prisma.campaigns.count({
     *   where: {
     *     // ... the filter for the Campaigns we want to count
     *   }
     * })
    **/
    count<T extends campaignsCountArgs>(
      args?: Subset<T, campaignsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampaignsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampaignsAggregateArgs>(args: Subset<T, CampaignsAggregateArgs>): Prisma.PrismaPromise<GetCampaignsAggregateType<T>>

    /**
     * Group by Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {campaignsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends campaignsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: campaignsGroupByArgs['orderBy'] }
        : { orderBy?: campaignsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, campaignsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampaignsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the campaigns model
   */
  readonly fields: campaignsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for campaigns.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__campaignsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends campaigns$usersArgs<ExtArgs> = {}>(args?: Subset<T, campaigns$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    donations<T extends campaigns$donationsArgs<ExtArgs> = {}>(args?: Subset<T, campaigns$donationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the campaigns model
   */
  interface campaignsFieldRefs {
    readonly id: FieldRef<"campaigns", 'BigInt'>
    readonly title: FieldRef<"campaigns", 'String'>
    readonly slug: FieldRef<"campaigns", 'String'>
    readonly description: FieldRef<"campaigns", 'String'>
    readonly goal_amount: FieldRef<"campaigns", 'Decimal'>
    readonly current_amount: FieldRef<"campaigns", 'Decimal'>
    readonly start_date: FieldRef<"campaigns", 'DateTime'>
    readonly end_date: FieldRef<"campaigns", 'DateTime'>
    readonly is_active: FieldRef<"campaigns", 'Boolean'>
    readonly is_featured: FieldRef<"campaigns", 'Boolean'>
    readonly category: FieldRef<"campaigns", 'String'>
    readonly progress_bar_color: FieldRef<"campaigns", 'String'>
    readonly image_url: FieldRef<"campaigns", 'String'>
    readonly video_url: FieldRef<"campaigns", 'String'>
    readonly donor_count: FieldRef<"campaigns", 'Int'>
    readonly success_stories: FieldRef<"campaigns", 'String'>
    readonly created_by: FieldRef<"campaigns", 'BigInt'>
    readonly language: FieldRef<"campaigns", 'campaigns_language'>
    readonly translation_group_id: FieldRef<"campaigns", 'String'>
    readonly created_at: FieldRef<"campaigns", 'DateTime'>
    readonly updated_at: FieldRef<"campaigns", 'DateTime'>
    readonly deleted_at: FieldRef<"campaigns", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * campaigns findUnique
   */
  export type campaignsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * Filter, which campaigns to fetch.
     */
    where: campaignsWhereUniqueInput
  }

  /**
   * campaigns findUniqueOrThrow
   */
  export type campaignsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * Filter, which campaigns to fetch.
     */
    where: campaignsWhereUniqueInput
  }

  /**
   * campaigns findFirst
   */
  export type campaignsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * Filter, which campaigns to fetch.
     */
    where?: campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignsOrderByWithRelationInput | campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for campaigns.
     */
    cursor?: campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of campaigns.
     */
    distinct?: CampaignsScalarFieldEnum | CampaignsScalarFieldEnum[]
  }

  /**
   * campaigns findFirstOrThrow
   */
  export type campaignsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * Filter, which campaigns to fetch.
     */
    where?: campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignsOrderByWithRelationInput | campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for campaigns.
     */
    cursor?: campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of campaigns.
     */
    distinct?: CampaignsScalarFieldEnum | CampaignsScalarFieldEnum[]
  }

  /**
   * campaigns findMany
   */
  export type campaignsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * Filter, which campaigns to fetch.
     */
    where?: campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of campaigns to fetch.
     */
    orderBy?: campaignsOrderByWithRelationInput | campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing campaigns.
     */
    cursor?: campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` campaigns.
     */
    skip?: number
    distinct?: CampaignsScalarFieldEnum | CampaignsScalarFieldEnum[]
  }

  /**
   * campaigns create
   */
  export type campaignsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * The data needed to create a campaigns.
     */
    data: XOR<campaignsCreateInput, campaignsUncheckedCreateInput>
  }

  /**
   * campaigns createMany
   */
  export type campaignsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many campaigns.
     */
    data: campaignsCreateManyInput | campaignsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * campaigns update
   */
  export type campaignsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * The data needed to update a campaigns.
     */
    data: XOR<campaignsUpdateInput, campaignsUncheckedUpdateInput>
    /**
     * Choose, which campaigns to update.
     */
    where: campaignsWhereUniqueInput
  }

  /**
   * campaigns updateMany
   */
  export type campaignsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update campaigns.
     */
    data: XOR<campaignsUpdateManyMutationInput, campaignsUncheckedUpdateManyInput>
    /**
     * Filter which campaigns to update
     */
    where?: campaignsWhereInput
    /**
     * Limit how many campaigns to update.
     */
    limit?: number
  }

  /**
   * campaigns upsert
   */
  export type campaignsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * The filter to search for the campaigns to update in case it exists.
     */
    where: campaignsWhereUniqueInput
    /**
     * In case the campaigns found by the `where` argument doesn't exist, create a new campaigns with this data.
     */
    create: XOR<campaignsCreateInput, campaignsUncheckedCreateInput>
    /**
     * In case the campaigns was found with the provided `where` argument, update it with this data.
     */
    update: XOR<campaignsUpdateInput, campaignsUncheckedUpdateInput>
  }

  /**
   * campaigns delete
   */
  export type campaignsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    /**
     * Filter which campaigns to delete.
     */
    where: campaignsWhereUniqueInput
  }

  /**
   * campaigns deleteMany
   */
  export type campaignsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which campaigns to delete
     */
    where?: campaignsWhereInput
    /**
     * Limit how many campaigns to delete.
     */
    limit?: number
  }

  /**
   * campaigns.users
   */
  export type campaigns$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * campaigns.donations
   */
  export type campaigns$donationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    where?: donationsWhereInput
    orderBy?: donationsOrderByWithRelationInput | donationsOrderByWithRelationInput[]
    cursor?: donationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonationsScalarFieldEnum | DonationsScalarFieldEnum[]
  }

  /**
   * campaigns without action
   */
  export type campaignsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
  }


  /**
   * Model contact_messages
   */

  export type AggregateContact_messages = {
    _count: Contact_messagesCountAggregateOutputType | null
    _avg: Contact_messagesAvgAggregateOutputType | null
    _sum: Contact_messagesSumAggregateOutputType | null
    _min: Contact_messagesMinAggregateOutputType | null
    _max: Contact_messagesMaxAggregateOutputType | null
  }

  export type Contact_messagesAvgAggregateOutputType = {
    id: number | null
  }

  export type Contact_messagesSumAggregateOutputType = {
    id: bigint | null
  }

  export type Contact_messagesMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    email: string | null
    subject: string | null
    message: string | null
    reason: $Enums.contact_messages_reason | null
    status: $Enums.contact_messages_status | null
    ip_address: string | null
    user_agent: string | null
    submitted_at: Date | null
    replied_at: Date | null
  }

  export type Contact_messagesMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    email: string | null
    subject: string | null
    message: string | null
    reason: $Enums.contact_messages_reason | null
    status: $Enums.contact_messages_status | null
    ip_address: string | null
    user_agent: string | null
    submitted_at: Date | null
    replied_at: Date | null
  }

  export type Contact_messagesCountAggregateOutputType = {
    id: number
    name: number
    email: number
    subject: number
    message: number
    reason: number
    status: number
    ip_address: number
    user_agent: number
    submitted_at: number
    replied_at: number
    _all: number
  }


  export type Contact_messagesAvgAggregateInputType = {
    id?: true
  }

  export type Contact_messagesSumAggregateInputType = {
    id?: true
  }

  export type Contact_messagesMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    subject?: true
    message?: true
    reason?: true
    status?: true
    ip_address?: true
    user_agent?: true
    submitted_at?: true
    replied_at?: true
  }

  export type Contact_messagesMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    subject?: true
    message?: true
    reason?: true
    status?: true
    ip_address?: true
    user_agent?: true
    submitted_at?: true
    replied_at?: true
  }

  export type Contact_messagesCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    subject?: true
    message?: true
    reason?: true
    status?: true
    ip_address?: true
    user_agent?: true
    submitted_at?: true
    replied_at?: true
    _all?: true
  }

  export type Contact_messagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_messages to aggregate.
     */
    where?: contact_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_messages to fetch.
     */
    orderBy?: contact_messagesOrderByWithRelationInput | contact_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contact_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contact_messages
    **/
    _count?: true | Contact_messagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Contact_messagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Contact_messagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Contact_messagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Contact_messagesMaxAggregateInputType
  }

  export type GetContact_messagesAggregateType<T extends Contact_messagesAggregateArgs> = {
        [P in keyof T & keyof AggregateContact_messages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact_messages[P]>
      : GetScalarType<T[P], AggregateContact_messages[P]>
  }




  export type contact_messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contact_messagesWhereInput
    orderBy?: contact_messagesOrderByWithAggregationInput | contact_messagesOrderByWithAggregationInput[]
    by: Contact_messagesScalarFieldEnum[] | Contact_messagesScalarFieldEnum
    having?: contact_messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Contact_messagesCountAggregateInputType | true
    _avg?: Contact_messagesAvgAggregateInputType
    _sum?: Contact_messagesSumAggregateInputType
    _min?: Contact_messagesMinAggregateInputType
    _max?: Contact_messagesMaxAggregateInputType
  }

  export type Contact_messagesGroupByOutputType = {
    id: bigint
    name: string
    email: string
    subject: string | null
    message: string
    reason: $Enums.contact_messages_reason
    status: $Enums.contact_messages_status | null
    ip_address: string | null
    user_agent: string | null
    submitted_at: Date | null
    replied_at: Date | null
    _count: Contact_messagesCountAggregateOutputType | null
    _avg: Contact_messagesAvgAggregateOutputType | null
    _sum: Contact_messagesSumAggregateOutputType | null
    _min: Contact_messagesMinAggregateOutputType | null
    _max: Contact_messagesMaxAggregateOutputType | null
  }

  type GetContact_messagesGroupByPayload<T extends contact_messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Contact_messagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Contact_messagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Contact_messagesGroupByOutputType[P]>
            : GetScalarType<T[P], Contact_messagesGroupByOutputType[P]>
        }
      >
    >


  export type contact_messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    subject?: boolean
    message?: boolean
    reason?: boolean
    status?: boolean
    ip_address?: boolean
    user_agent?: boolean
    submitted_at?: boolean
    replied_at?: boolean
  }, ExtArgs["result"]["contact_messages"]>



  export type contact_messagesSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    subject?: boolean
    message?: boolean
    reason?: boolean
    status?: boolean
    ip_address?: boolean
    user_agent?: boolean
    submitted_at?: boolean
    replied_at?: boolean
  }

  export type contact_messagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "subject" | "message" | "reason" | "status" | "ip_address" | "user_agent" | "submitted_at" | "replied_at", ExtArgs["result"]["contact_messages"]>

  export type $contact_messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "contact_messages"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      email: string
      subject: string | null
      message: string
      reason: $Enums.contact_messages_reason
      status: $Enums.contact_messages_status | null
      ip_address: string | null
      user_agent: string | null
      submitted_at: Date | null
      replied_at: Date | null
    }, ExtArgs["result"]["contact_messages"]>
    composites: {}
  }

  type contact_messagesGetPayload<S extends boolean | null | undefined | contact_messagesDefaultArgs> = $Result.GetResult<Prisma.$contact_messagesPayload, S>

  type contact_messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<contact_messagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Contact_messagesCountAggregateInputType | true
    }

  export interface contact_messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['contact_messages'], meta: { name: 'contact_messages' } }
    /**
     * Find zero or one Contact_messages that matches the filter.
     * @param {contact_messagesFindUniqueArgs} args - Arguments to find a Contact_messages
     * @example
     * // Get one Contact_messages
     * const contact_messages = await prisma.contact_messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends contact_messagesFindUniqueArgs>(args: SelectSubset<T, contact_messagesFindUniqueArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Contact_messages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {contact_messagesFindUniqueOrThrowArgs} args - Arguments to find a Contact_messages
     * @example
     * // Get one Contact_messages
     * const contact_messages = await prisma.contact_messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends contact_messagesFindUniqueOrThrowArgs>(args: SelectSubset<T, contact_messagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_messagesFindFirstArgs} args - Arguments to find a Contact_messages
     * @example
     * // Get one Contact_messages
     * const contact_messages = await prisma.contact_messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends contact_messagesFindFirstArgs>(args?: SelectSubset<T, contact_messagesFindFirstArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact_messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_messagesFindFirstOrThrowArgs} args - Arguments to find a Contact_messages
     * @example
     * // Get one Contact_messages
     * const contact_messages = await prisma.contact_messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends contact_messagesFindFirstOrThrowArgs>(args?: SelectSubset<T, contact_messagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contact_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_messagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contact_messages
     * const contact_messages = await prisma.contact_messages.findMany()
     * 
     * // Get first 10 Contact_messages
     * const contact_messages = await prisma.contact_messages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contact_messagesWithIdOnly = await prisma.contact_messages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends contact_messagesFindManyArgs>(args?: SelectSubset<T, contact_messagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Contact_messages.
     * @param {contact_messagesCreateArgs} args - Arguments to create a Contact_messages.
     * @example
     * // Create one Contact_messages
     * const Contact_messages = await prisma.contact_messages.create({
     *   data: {
     *     // ... data to create a Contact_messages
     *   }
     * })
     * 
     */
    create<T extends contact_messagesCreateArgs>(args: SelectSubset<T, contact_messagesCreateArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contact_messages.
     * @param {contact_messagesCreateManyArgs} args - Arguments to create many Contact_messages.
     * @example
     * // Create many Contact_messages
     * const contact_messages = await prisma.contact_messages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends contact_messagesCreateManyArgs>(args?: SelectSubset<T, contact_messagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contact_messages.
     * @param {contact_messagesDeleteArgs} args - Arguments to delete one Contact_messages.
     * @example
     * // Delete one Contact_messages
     * const Contact_messages = await prisma.contact_messages.delete({
     *   where: {
     *     // ... filter to delete one Contact_messages
     *   }
     * })
     * 
     */
    delete<T extends contact_messagesDeleteArgs>(args: SelectSubset<T, contact_messagesDeleteArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Contact_messages.
     * @param {contact_messagesUpdateArgs} args - Arguments to update one Contact_messages.
     * @example
     * // Update one Contact_messages
     * const contact_messages = await prisma.contact_messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends contact_messagesUpdateArgs>(args: SelectSubset<T, contact_messagesUpdateArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contact_messages.
     * @param {contact_messagesDeleteManyArgs} args - Arguments to filter Contact_messages to delete.
     * @example
     * // Delete a few Contact_messages
     * const { count } = await prisma.contact_messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends contact_messagesDeleteManyArgs>(args?: SelectSubset<T, contact_messagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contact_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contact_messages
     * const contact_messages = await prisma.contact_messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends contact_messagesUpdateManyArgs>(args: SelectSubset<T, contact_messagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact_messages.
     * @param {contact_messagesUpsertArgs} args - Arguments to update or create a Contact_messages.
     * @example
     * // Update or create a Contact_messages
     * const contact_messages = await prisma.contact_messages.upsert({
     *   create: {
     *     // ... data to create a Contact_messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact_messages we want to update
     *   }
     * })
     */
    upsert<T extends contact_messagesUpsertArgs>(args: SelectSubset<T, contact_messagesUpsertArgs<ExtArgs>>): Prisma__contact_messagesClient<$Result.GetResult<Prisma.$contact_messagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contact_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_messagesCountArgs} args - Arguments to filter Contact_messages to count.
     * @example
     * // Count the number of Contact_messages
     * const count = await prisma.contact_messages.count({
     *   where: {
     *     // ... the filter for the Contact_messages we want to count
     *   }
     * })
    **/
    count<T extends contact_messagesCountArgs>(
      args?: Subset<T, contact_messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Contact_messagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Contact_messagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Contact_messagesAggregateArgs>(args: Subset<T, Contact_messagesAggregateArgs>): Prisma.PrismaPromise<GetContact_messagesAggregateType<T>>

    /**
     * Group by Contact_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends contact_messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: contact_messagesGroupByArgs['orderBy'] }
        : { orderBy?: contact_messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, contact_messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContact_messagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the contact_messages model
   */
  readonly fields: contact_messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for contact_messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__contact_messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the contact_messages model
   */
  interface contact_messagesFieldRefs {
    readonly id: FieldRef<"contact_messages", 'BigInt'>
    readonly name: FieldRef<"contact_messages", 'String'>
    readonly email: FieldRef<"contact_messages", 'String'>
    readonly subject: FieldRef<"contact_messages", 'String'>
    readonly message: FieldRef<"contact_messages", 'String'>
    readonly reason: FieldRef<"contact_messages", 'contact_messages_reason'>
    readonly status: FieldRef<"contact_messages", 'contact_messages_status'>
    readonly ip_address: FieldRef<"contact_messages", 'String'>
    readonly user_agent: FieldRef<"contact_messages", 'String'>
    readonly submitted_at: FieldRef<"contact_messages", 'DateTime'>
    readonly replied_at: FieldRef<"contact_messages", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * contact_messages findUnique
   */
  export type contact_messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * Filter, which contact_messages to fetch.
     */
    where: contact_messagesWhereUniqueInput
  }

  /**
   * contact_messages findUniqueOrThrow
   */
  export type contact_messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * Filter, which contact_messages to fetch.
     */
    where: contact_messagesWhereUniqueInput
  }

  /**
   * contact_messages findFirst
   */
  export type contact_messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * Filter, which contact_messages to fetch.
     */
    where?: contact_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_messages to fetch.
     */
    orderBy?: contact_messagesOrderByWithRelationInput | contact_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_messages.
     */
    cursor?: contact_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_messages.
     */
    distinct?: Contact_messagesScalarFieldEnum | Contact_messagesScalarFieldEnum[]
  }

  /**
   * contact_messages findFirstOrThrow
   */
  export type contact_messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * Filter, which contact_messages to fetch.
     */
    where?: contact_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_messages to fetch.
     */
    orderBy?: contact_messagesOrderByWithRelationInput | contact_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_messages.
     */
    cursor?: contact_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_messages.
     */
    distinct?: Contact_messagesScalarFieldEnum | Contact_messagesScalarFieldEnum[]
  }

  /**
   * contact_messages findMany
   */
  export type contact_messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * Filter, which contact_messages to fetch.
     */
    where?: contact_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_messages to fetch.
     */
    orderBy?: contact_messagesOrderByWithRelationInput | contact_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contact_messages.
     */
    cursor?: contact_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_messages.
     */
    skip?: number
    distinct?: Contact_messagesScalarFieldEnum | Contact_messagesScalarFieldEnum[]
  }

  /**
   * contact_messages create
   */
  export type contact_messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * The data needed to create a contact_messages.
     */
    data: XOR<contact_messagesCreateInput, contact_messagesUncheckedCreateInput>
  }

  /**
   * contact_messages createMany
   */
  export type contact_messagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many contact_messages.
     */
    data: contact_messagesCreateManyInput | contact_messagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * contact_messages update
   */
  export type contact_messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * The data needed to update a contact_messages.
     */
    data: XOR<contact_messagesUpdateInput, contact_messagesUncheckedUpdateInput>
    /**
     * Choose, which contact_messages to update.
     */
    where: contact_messagesWhereUniqueInput
  }

  /**
   * contact_messages updateMany
   */
  export type contact_messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update contact_messages.
     */
    data: XOR<contact_messagesUpdateManyMutationInput, contact_messagesUncheckedUpdateManyInput>
    /**
     * Filter which contact_messages to update
     */
    where?: contact_messagesWhereInput
    /**
     * Limit how many contact_messages to update.
     */
    limit?: number
  }

  /**
   * contact_messages upsert
   */
  export type contact_messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * The filter to search for the contact_messages to update in case it exists.
     */
    where: contact_messagesWhereUniqueInput
    /**
     * In case the contact_messages found by the `where` argument doesn't exist, create a new contact_messages with this data.
     */
    create: XOR<contact_messagesCreateInput, contact_messagesUncheckedCreateInput>
    /**
     * In case the contact_messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contact_messagesUpdateInput, contact_messagesUncheckedUpdateInput>
  }

  /**
   * contact_messages delete
   */
  export type contact_messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
    /**
     * Filter which contact_messages to delete.
     */
    where: contact_messagesWhereUniqueInput
  }

  /**
   * contact_messages deleteMany
   */
  export type contact_messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_messages to delete
     */
    where?: contact_messagesWhereInput
    /**
     * Limit how many contact_messages to delete.
     */
    limit?: number
  }

  /**
   * contact_messages without action
   */
  export type contact_messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_messages
     */
    select?: contact_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the contact_messages
     */
    omit?: contact_messagesOmit<ExtArgs> | null
  }


  /**
   * Model documents
   */

  export type AggregateDocuments = {
    _count: DocumentsCountAggregateOutputType | null
    _avg: DocumentsAvgAggregateOutputType | null
    _sum: DocumentsSumAggregateOutputType | null
    _min: DocumentsMinAggregateOutputType | null
    _max: DocumentsMaxAggregateOutputType | null
  }

  export type DocumentsAvgAggregateOutputType = {
    id: number | null
    file_size: number | null
    uploaded_by: number | null
    download_count: number | null
  }

  export type DocumentsSumAggregateOutputType = {
    id: bigint | null
    file_size: bigint | null
    uploaded_by: bigint | null
    download_count: number | null
  }

  export type DocumentsMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    description: string | null
    category: string | null
    file_url: string | null
    file_size: bigint | null
    file_type: string | null
    uploaded_by: bigint | null
    language: $Enums.documents_language | null
    translation_group_id: string | null
    is_public: boolean | null
    download_count: number | null
    uploaded_at: Date | null
    updated_at: Date | null
  }

  export type DocumentsMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    description: string | null
    category: string | null
    file_url: string | null
    file_size: bigint | null
    file_type: string | null
    uploaded_by: bigint | null
    language: $Enums.documents_language | null
    translation_group_id: string | null
    is_public: boolean | null
    download_count: number | null
    uploaded_at: Date | null
    updated_at: Date | null
  }

  export type DocumentsCountAggregateOutputType = {
    id: number
    title: number
    description: number
    category: number
    file_url: number
    file_size: number
    file_type: number
    uploaded_by: number
    language: number
    translation_group_id: number
    is_public: number
    download_count: number
    uploaded_at: number
    updated_at: number
    _all: number
  }


  export type DocumentsAvgAggregateInputType = {
    id?: true
    file_size?: true
    uploaded_by?: true
    download_count?: true
  }

  export type DocumentsSumAggregateInputType = {
    id?: true
    file_size?: true
    uploaded_by?: true
    download_count?: true
  }

  export type DocumentsMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    category?: true
    file_url?: true
    file_size?: true
    file_type?: true
    uploaded_by?: true
    language?: true
    translation_group_id?: true
    is_public?: true
    download_count?: true
    uploaded_at?: true
    updated_at?: true
  }

  export type DocumentsMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    category?: true
    file_url?: true
    file_size?: true
    file_type?: true
    uploaded_by?: true
    language?: true
    translation_group_id?: true
    is_public?: true
    download_count?: true
    uploaded_at?: true
    updated_at?: true
  }

  export type DocumentsCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    category?: true
    file_url?: true
    file_size?: true
    file_type?: true
    uploaded_by?: true
    language?: true
    translation_group_id?: true
    is_public?: true
    download_count?: true
    uploaded_at?: true
    updated_at?: true
    _all?: true
  }

  export type DocumentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which documents to aggregate.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned documents
    **/
    _count?: true | DocumentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentsMaxAggregateInputType
  }

  export type GetDocumentsAggregateType<T extends DocumentsAggregateArgs> = {
        [P in keyof T & keyof AggregateDocuments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocuments[P]>
      : GetScalarType<T[P], AggregateDocuments[P]>
  }




  export type documentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: documentsWhereInput
    orderBy?: documentsOrderByWithAggregationInput | documentsOrderByWithAggregationInput[]
    by: DocumentsScalarFieldEnum[] | DocumentsScalarFieldEnum
    having?: documentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentsCountAggregateInputType | true
    _avg?: DocumentsAvgAggregateInputType
    _sum?: DocumentsSumAggregateInputType
    _min?: DocumentsMinAggregateInputType
    _max?: DocumentsMaxAggregateInputType
  }

  export type DocumentsGroupByOutputType = {
    id: bigint
    title: string
    description: string | null
    category: string | null
    file_url: string
    file_size: bigint | null
    file_type: string | null
    uploaded_by: bigint | null
    language: $Enums.documents_language | null
    translation_group_id: string | null
    is_public: boolean | null
    download_count: number | null
    uploaded_at: Date | null
    updated_at: Date | null
    _count: DocumentsCountAggregateOutputType | null
    _avg: DocumentsAvgAggregateOutputType | null
    _sum: DocumentsSumAggregateOutputType | null
    _min: DocumentsMinAggregateOutputType | null
    _max: DocumentsMaxAggregateOutputType | null
  }

  type GetDocumentsGroupByPayload<T extends documentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentsGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentsGroupByOutputType[P]>
        }
      >
    >


  export type documentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    category?: boolean
    file_url?: boolean
    file_size?: boolean
    file_type?: boolean
    uploaded_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_public?: boolean
    download_count?: boolean
    uploaded_at?: boolean
    updated_at?: boolean
    users?: boolean | documents$usersArgs<ExtArgs>
  }, ExtArgs["result"]["documents"]>



  export type documentsSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    category?: boolean
    file_url?: boolean
    file_size?: boolean
    file_type?: boolean
    uploaded_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_public?: boolean
    download_count?: boolean
    uploaded_at?: boolean
    updated_at?: boolean
  }

  export type documentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "category" | "file_url" | "file_size" | "file_type" | "uploaded_by" | "language" | "translation_group_id" | "is_public" | "download_count" | "uploaded_at" | "updated_at", ExtArgs["result"]["documents"]>
  export type documentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | documents$usersArgs<ExtArgs>
  }

  export type $documentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "documents"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      description: string | null
      category: string | null
      file_url: string
      file_size: bigint | null
      file_type: string | null
      uploaded_by: bigint | null
      language: $Enums.documents_language | null
      translation_group_id: string | null
      is_public: boolean | null
      download_count: number | null
      uploaded_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["documents"]>
    composites: {}
  }

  type documentsGetPayload<S extends boolean | null | undefined | documentsDefaultArgs> = $Result.GetResult<Prisma.$documentsPayload, S>

  type documentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<documentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DocumentsCountAggregateInputType | true
    }

  export interface documentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['documents'], meta: { name: 'documents' } }
    /**
     * Find zero or one Documents that matches the filter.
     * @param {documentsFindUniqueArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends documentsFindUniqueArgs>(args: SelectSubset<T, documentsFindUniqueArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Documents that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {documentsFindUniqueOrThrowArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends documentsFindUniqueOrThrowArgs>(args: SelectSubset<T, documentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsFindFirstArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends documentsFindFirstArgs>(args?: SelectSubset<T, documentsFindFirstArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Documents that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsFindFirstOrThrowArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends documentsFindFirstOrThrowArgs>(args?: SelectSubset<T, documentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documents
     * const documents = await prisma.documents.findMany()
     * 
     * // Get first 10 Documents
     * const documents = await prisma.documents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentsWithIdOnly = await prisma.documents.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends documentsFindManyArgs>(args?: SelectSubset<T, documentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Documents.
     * @param {documentsCreateArgs} args - Arguments to create a Documents.
     * @example
     * // Create one Documents
     * const Documents = await prisma.documents.create({
     *   data: {
     *     // ... data to create a Documents
     *   }
     * })
     * 
     */
    create<T extends documentsCreateArgs>(args: SelectSubset<T, documentsCreateArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Documents.
     * @param {documentsCreateManyArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const documents = await prisma.documents.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends documentsCreateManyArgs>(args?: SelectSubset<T, documentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Documents.
     * @param {documentsDeleteArgs} args - Arguments to delete one Documents.
     * @example
     * // Delete one Documents
     * const Documents = await prisma.documents.delete({
     *   where: {
     *     // ... filter to delete one Documents
     *   }
     * })
     * 
     */
    delete<T extends documentsDeleteArgs>(args: SelectSubset<T, documentsDeleteArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Documents.
     * @param {documentsUpdateArgs} args - Arguments to update one Documents.
     * @example
     * // Update one Documents
     * const documents = await prisma.documents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends documentsUpdateArgs>(args: SelectSubset<T, documentsUpdateArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Documents.
     * @param {documentsDeleteManyArgs} args - Arguments to filter Documents to delete.
     * @example
     * // Delete a few Documents
     * const { count } = await prisma.documents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends documentsDeleteManyArgs>(args?: SelectSubset<T, documentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documents
     * const documents = await prisma.documents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends documentsUpdateManyArgs>(args: SelectSubset<T, documentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Documents.
     * @param {documentsUpsertArgs} args - Arguments to update or create a Documents.
     * @example
     * // Update or create a Documents
     * const documents = await prisma.documents.upsert({
     *   create: {
     *     // ... data to create a Documents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Documents we want to update
     *   }
     * })
     */
    upsert<T extends documentsUpsertArgs>(args: SelectSubset<T, documentsUpsertArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsCountArgs} args - Arguments to filter Documents to count.
     * @example
     * // Count the number of Documents
     * const count = await prisma.documents.count({
     *   where: {
     *     // ... the filter for the Documents we want to count
     *   }
     * })
    **/
    count<T extends documentsCountArgs>(
      args?: Subset<T, documentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentsAggregateArgs>(args: Subset<T, DocumentsAggregateArgs>): Prisma.PrismaPromise<GetDocumentsAggregateType<T>>

    /**
     * Group by Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends documentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: documentsGroupByArgs['orderBy'] }
        : { orderBy?: documentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, documentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the documents model
   */
  readonly fields: documentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for documents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__documentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends documents$usersArgs<ExtArgs> = {}>(args?: Subset<T, documents$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the documents model
   */
  interface documentsFieldRefs {
    readonly id: FieldRef<"documents", 'BigInt'>
    readonly title: FieldRef<"documents", 'String'>
    readonly description: FieldRef<"documents", 'String'>
    readonly category: FieldRef<"documents", 'String'>
    readonly file_url: FieldRef<"documents", 'String'>
    readonly file_size: FieldRef<"documents", 'BigInt'>
    readonly file_type: FieldRef<"documents", 'String'>
    readonly uploaded_by: FieldRef<"documents", 'BigInt'>
    readonly language: FieldRef<"documents", 'documents_language'>
    readonly translation_group_id: FieldRef<"documents", 'String'>
    readonly is_public: FieldRef<"documents", 'Boolean'>
    readonly download_count: FieldRef<"documents", 'Int'>
    readonly uploaded_at: FieldRef<"documents", 'DateTime'>
    readonly updated_at: FieldRef<"documents", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * documents findUnique
   */
  export type documentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents findUniqueOrThrow
   */
  export type documentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents findFirst
   */
  export type documentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documents.
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documents.
     */
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * documents findFirstOrThrow
   */
  export type documentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documents.
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documents.
     */
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * documents findMany
   */
  export type documentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing documents.
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * documents create
   */
  export type documentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * The data needed to create a documents.
     */
    data: XOR<documentsCreateInput, documentsUncheckedCreateInput>
  }

  /**
   * documents createMany
   */
  export type documentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many documents.
     */
    data: documentsCreateManyInput | documentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * documents update
   */
  export type documentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * The data needed to update a documents.
     */
    data: XOR<documentsUpdateInput, documentsUncheckedUpdateInput>
    /**
     * Choose, which documents to update.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents updateMany
   */
  export type documentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update documents.
     */
    data: XOR<documentsUpdateManyMutationInput, documentsUncheckedUpdateManyInput>
    /**
     * Filter which documents to update
     */
    where?: documentsWhereInput
    /**
     * Limit how many documents to update.
     */
    limit?: number
  }

  /**
   * documents upsert
   */
  export type documentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * The filter to search for the documents to update in case it exists.
     */
    where: documentsWhereUniqueInput
    /**
     * In case the documents found by the `where` argument doesn't exist, create a new documents with this data.
     */
    create: XOR<documentsCreateInput, documentsUncheckedCreateInput>
    /**
     * In case the documents was found with the provided `where` argument, update it with this data.
     */
    update: XOR<documentsUpdateInput, documentsUncheckedUpdateInput>
  }

  /**
   * documents delete
   */
  export type documentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter which documents to delete.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents deleteMany
   */
  export type documentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which documents to delete
     */
    where?: documentsWhereInput
    /**
     * Limit how many documents to delete.
     */
    limit?: number
  }

  /**
   * documents.users
   */
  export type documents$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * documents without action
   */
  export type documentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
  }


  /**
   * Model donations
   */

  export type AggregateDonations = {
    _count: DonationsCountAggregateOutputType | null
    _avg: DonationsAvgAggregateOutputType | null
    _sum: DonationsSumAggregateOutputType | null
    _min: DonationsMinAggregateOutputType | null
    _max: DonationsMaxAggregateOutputType | null
  }

  export type DonationsAvgAggregateOutputType = {
    id: number | null
    donor_id: number | null
    campaign_id: number | null
    amount: Decimal | null
  }

  export type DonationsSumAggregateOutputType = {
    id: bigint | null
    donor_id: bigint | null
    campaign_id: bigint | null
    amount: Decimal | null
  }

  export type DonationsMinAggregateOutputType = {
    id: bigint | null
    donor_id: bigint | null
    campaign_id: bigint | null
    amount: Decimal | null
    currency: string | null
    donation_type: $Enums.donations_donation_type | null
    payment_method: string | null
    payment_status: $Enums.donations_payment_status | null
    transaction_id: string | null
    receipt_url: string | null
    is_acknowledged: boolean | null
    is_tax_deductible: boolean | null
    is_anonymous: boolean | null
    notes: string | null
    donated_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonationsMaxAggregateOutputType = {
    id: bigint | null
    donor_id: bigint | null
    campaign_id: bigint | null
    amount: Decimal | null
    currency: string | null
    donation_type: $Enums.donations_donation_type | null
    payment_method: string | null
    payment_status: $Enums.donations_payment_status | null
    transaction_id: string | null
    receipt_url: string | null
    is_acknowledged: boolean | null
    is_tax_deductible: boolean | null
    is_anonymous: boolean | null
    notes: string | null
    donated_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonationsCountAggregateOutputType = {
    id: number
    donor_id: number
    campaign_id: number
    amount: number
    currency: number
    donation_type: number
    payment_method: number
    payment_status: number
    transaction_id: number
    receipt_url: number
    is_acknowledged: number
    is_tax_deductible: number
    is_anonymous: number
    notes: number
    donated_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DonationsAvgAggregateInputType = {
    id?: true
    donor_id?: true
    campaign_id?: true
    amount?: true
  }

  export type DonationsSumAggregateInputType = {
    id?: true
    donor_id?: true
    campaign_id?: true
    amount?: true
  }

  export type DonationsMinAggregateInputType = {
    id?: true
    donor_id?: true
    campaign_id?: true
    amount?: true
    currency?: true
    donation_type?: true
    payment_method?: true
    payment_status?: true
    transaction_id?: true
    receipt_url?: true
    is_acknowledged?: true
    is_tax_deductible?: true
    is_anonymous?: true
    notes?: true
    donated_at?: true
    created_at?: true
    updated_at?: true
  }

  export type DonationsMaxAggregateInputType = {
    id?: true
    donor_id?: true
    campaign_id?: true
    amount?: true
    currency?: true
    donation_type?: true
    payment_method?: true
    payment_status?: true
    transaction_id?: true
    receipt_url?: true
    is_acknowledged?: true
    is_tax_deductible?: true
    is_anonymous?: true
    notes?: true
    donated_at?: true
    created_at?: true
    updated_at?: true
  }

  export type DonationsCountAggregateInputType = {
    id?: true
    donor_id?: true
    campaign_id?: true
    amount?: true
    currency?: true
    donation_type?: true
    payment_method?: true
    payment_status?: true
    transaction_id?: true
    receipt_url?: true
    is_acknowledged?: true
    is_tax_deductible?: true
    is_anonymous?: true
    notes?: true
    donated_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DonationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which donations to aggregate.
     */
    where?: donationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donations to fetch.
     */
    orderBy?: donationsOrderByWithRelationInput | donationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: donationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned donations
    **/
    _count?: true | DonationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DonationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DonationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonationsMaxAggregateInputType
  }

  export type GetDonationsAggregateType<T extends DonationsAggregateArgs> = {
        [P in keyof T & keyof AggregateDonations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonations[P]>
      : GetScalarType<T[P], AggregateDonations[P]>
  }




  export type donationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: donationsWhereInput
    orderBy?: donationsOrderByWithAggregationInput | donationsOrderByWithAggregationInput[]
    by: DonationsScalarFieldEnum[] | DonationsScalarFieldEnum
    having?: donationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonationsCountAggregateInputType | true
    _avg?: DonationsAvgAggregateInputType
    _sum?: DonationsSumAggregateInputType
    _min?: DonationsMinAggregateInputType
    _max?: DonationsMaxAggregateInputType
  }

  export type DonationsGroupByOutputType = {
    id: bigint
    donor_id: bigint
    campaign_id: bigint
    amount: Decimal
    currency: string
    donation_type: $Enums.donations_donation_type
    payment_method: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id: string | null
    receipt_url: string | null
    is_acknowledged: boolean | null
    is_tax_deductible: boolean | null
    is_anonymous: boolean | null
    notes: string | null
    donated_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: DonationsCountAggregateOutputType | null
    _avg: DonationsAvgAggregateOutputType | null
    _sum: DonationsSumAggregateOutputType | null
    _min: DonationsMinAggregateOutputType | null
    _max: DonationsMaxAggregateOutputType | null
  }

  type GetDonationsGroupByPayload<T extends donationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonationsGroupByOutputType[P]>
            : GetScalarType<T[P], DonationsGroupByOutputType[P]>
        }
      >
    >


  export type donationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    donor_id?: boolean
    campaign_id?: boolean
    amount?: boolean
    currency?: boolean
    donation_type?: boolean
    payment_method?: boolean
    payment_status?: boolean
    transaction_id?: boolean
    receipt_url?: boolean
    is_acknowledged?: boolean
    is_tax_deductible?: boolean
    is_anonymous?: boolean
    notes?: boolean
    donated_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    donor_profiles?: boolean | donor_profilesDefaultArgs<ExtArgs>
    campaigns?: boolean | campaignsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donations"]>



  export type donationsSelectScalar = {
    id?: boolean
    donor_id?: boolean
    campaign_id?: boolean
    amount?: boolean
    currency?: boolean
    donation_type?: boolean
    payment_method?: boolean
    payment_status?: boolean
    transaction_id?: boolean
    receipt_url?: boolean
    is_acknowledged?: boolean
    is_tax_deductible?: boolean
    is_anonymous?: boolean
    notes?: boolean
    donated_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type donationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "donor_id" | "campaign_id" | "amount" | "currency" | "donation_type" | "payment_method" | "payment_status" | "transaction_id" | "receipt_url" | "is_acknowledged" | "is_tax_deductible" | "is_anonymous" | "notes" | "donated_at" | "created_at" | "updated_at", ExtArgs["result"]["donations"]>
  export type donationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donor_profiles?: boolean | donor_profilesDefaultArgs<ExtArgs>
    campaigns?: boolean | campaignsDefaultArgs<ExtArgs>
  }

  export type $donationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "donations"
    objects: {
      donor_profiles: Prisma.$donor_profilesPayload<ExtArgs>
      campaigns: Prisma.$campaignsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      donor_id: bigint
      campaign_id: bigint
      amount: Prisma.Decimal
      currency: string
      donation_type: $Enums.donations_donation_type
      payment_method: string | null
      payment_status: $Enums.donations_payment_status
      transaction_id: string | null
      receipt_url: string | null
      is_acknowledged: boolean | null
      is_tax_deductible: boolean | null
      is_anonymous: boolean | null
      notes: string | null
      donated_at: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["donations"]>
    composites: {}
  }

  type donationsGetPayload<S extends boolean | null | undefined | donationsDefaultArgs> = $Result.GetResult<Prisma.$donationsPayload, S>

  type donationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<donationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonationsCountAggregateInputType | true
    }

  export interface donationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['donations'], meta: { name: 'donations' } }
    /**
     * Find zero or one Donations that matches the filter.
     * @param {donationsFindUniqueArgs} args - Arguments to find a Donations
     * @example
     * // Get one Donations
     * const donations = await prisma.donations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends donationsFindUniqueArgs>(args: SelectSubset<T, donationsFindUniqueArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Donations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {donationsFindUniqueOrThrowArgs} args - Arguments to find a Donations
     * @example
     * // Get one Donations
     * const donations = await prisma.donations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends donationsFindUniqueOrThrowArgs>(args: SelectSubset<T, donationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Donations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donationsFindFirstArgs} args - Arguments to find a Donations
     * @example
     * // Get one Donations
     * const donations = await prisma.donations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends donationsFindFirstArgs>(args?: SelectSubset<T, donationsFindFirstArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Donations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donationsFindFirstOrThrowArgs} args - Arguments to find a Donations
     * @example
     * // Get one Donations
     * const donations = await prisma.donations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends donationsFindFirstOrThrowArgs>(args?: SelectSubset<T, donationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Donations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Donations
     * const donations = await prisma.donations.findMany()
     * 
     * // Get first 10 Donations
     * const donations = await prisma.donations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const donationsWithIdOnly = await prisma.donations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends donationsFindManyArgs>(args?: SelectSubset<T, donationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Donations.
     * @param {donationsCreateArgs} args - Arguments to create a Donations.
     * @example
     * // Create one Donations
     * const Donations = await prisma.donations.create({
     *   data: {
     *     // ... data to create a Donations
     *   }
     * })
     * 
     */
    create<T extends donationsCreateArgs>(args: SelectSubset<T, donationsCreateArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Donations.
     * @param {donationsCreateManyArgs} args - Arguments to create many Donations.
     * @example
     * // Create many Donations
     * const donations = await prisma.donations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends donationsCreateManyArgs>(args?: SelectSubset<T, donationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Donations.
     * @param {donationsDeleteArgs} args - Arguments to delete one Donations.
     * @example
     * // Delete one Donations
     * const Donations = await prisma.donations.delete({
     *   where: {
     *     // ... filter to delete one Donations
     *   }
     * })
     * 
     */
    delete<T extends donationsDeleteArgs>(args: SelectSubset<T, donationsDeleteArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Donations.
     * @param {donationsUpdateArgs} args - Arguments to update one Donations.
     * @example
     * // Update one Donations
     * const donations = await prisma.donations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends donationsUpdateArgs>(args: SelectSubset<T, donationsUpdateArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Donations.
     * @param {donationsDeleteManyArgs} args - Arguments to filter Donations to delete.
     * @example
     * // Delete a few Donations
     * const { count } = await prisma.donations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends donationsDeleteManyArgs>(args?: SelectSubset<T, donationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Donations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Donations
     * const donations = await prisma.donations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends donationsUpdateManyArgs>(args: SelectSubset<T, donationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Donations.
     * @param {donationsUpsertArgs} args - Arguments to update or create a Donations.
     * @example
     * // Update or create a Donations
     * const donations = await prisma.donations.upsert({
     *   create: {
     *     // ... data to create a Donations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Donations we want to update
     *   }
     * })
     */
    upsert<T extends donationsUpsertArgs>(args: SelectSubset<T, donationsUpsertArgs<ExtArgs>>): Prisma__donationsClient<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Donations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donationsCountArgs} args - Arguments to filter Donations to count.
     * @example
     * // Count the number of Donations
     * const count = await prisma.donations.count({
     *   where: {
     *     // ... the filter for the Donations we want to count
     *   }
     * })
    **/
    count<T extends donationsCountArgs>(
      args?: Subset<T, donationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Donations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonationsAggregateArgs>(args: Subset<T, DonationsAggregateArgs>): Prisma.PrismaPromise<GetDonationsAggregateType<T>>

    /**
     * Group by Donations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends donationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: donationsGroupByArgs['orderBy'] }
        : { orderBy?: donationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, donationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the donations model
   */
  readonly fields: donationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for donations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__donationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donor_profiles<T extends donor_profilesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, donor_profilesDefaultArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    campaigns<T extends campaignsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, campaignsDefaultArgs<ExtArgs>>): Prisma__campaignsClient<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the donations model
   */
  interface donationsFieldRefs {
    readonly id: FieldRef<"donations", 'BigInt'>
    readonly donor_id: FieldRef<"donations", 'BigInt'>
    readonly campaign_id: FieldRef<"donations", 'BigInt'>
    readonly amount: FieldRef<"donations", 'Decimal'>
    readonly currency: FieldRef<"donations", 'String'>
    readonly donation_type: FieldRef<"donations", 'donations_donation_type'>
    readonly payment_method: FieldRef<"donations", 'String'>
    readonly payment_status: FieldRef<"donations", 'donations_payment_status'>
    readonly transaction_id: FieldRef<"donations", 'String'>
    readonly receipt_url: FieldRef<"donations", 'String'>
    readonly is_acknowledged: FieldRef<"donations", 'Boolean'>
    readonly is_tax_deductible: FieldRef<"donations", 'Boolean'>
    readonly is_anonymous: FieldRef<"donations", 'Boolean'>
    readonly notes: FieldRef<"donations", 'String'>
    readonly donated_at: FieldRef<"donations", 'DateTime'>
    readonly created_at: FieldRef<"donations", 'DateTime'>
    readonly updated_at: FieldRef<"donations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * donations findUnique
   */
  export type donationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * Filter, which donations to fetch.
     */
    where: donationsWhereUniqueInput
  }

  /**
   * donations findUniqueOrThrow
   */
  export type donationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * Filter, which donations to fetch.
     */
    where: donationsWhereUniqueInput
  }

  /**
   * donations findFirst
   */
  export type donationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * Filter, which donations to fetch.
     */
    where?: donationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donations to fetch.
     */
    orderBy?: donationsOrderByWithRelationInput | donationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for donations.
     */
    cursor?: donationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of donations.
     */
    distinct?: DonationsScalarFieldEnum | DonationsScalarFieldEnum[]
  }

  /**
   * donations findFirstOrThrow
   */
  export type donationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * Filter, which donations to fetch.
     */
    where?: donationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donations to fetch.
     */
    orderBy?: donationsOrderByWithRelationInput | donationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for donations.
     */
    cursor?: donationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of donations.
     */
    distinct?: DonationsScalarFieldEnum | DonationsScalarFieldEnum[]
  }

  /**
   * donations findMany
   */
  export type donationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * Filter, which donations to fetch.
     */
    where?: donationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donations to fetch.
     */
    orderBy?: donationsOrderByWithRelationInput | donationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing donations.
     */
    cursor?: donationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donations.
     */
    skip?: number
    distinct?: DonationsScalarFieldEnum | DonationsScalarFieldEnum[]
  }

  /**
   * donations create
   */
  export type donationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * The data needed to create a donations.
     */
    data: XOR<donationsCreateInput, donationsUncheckedCreateInput>
  }

  /**
   * donations createMany
   */
  export type donationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many donations.
     */
    data: donationsCreateManyInput | donationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * donations update
   */
  export type donationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * The data needed to update a donations.
     */
    data: XOR<donationsUpdateInput, donationsUncheckedUpdateInput>
    /**
     * Choose, which donations to update.
     */
    where: donationsWhereUniqueInput
  }

  /**
   * donations updateMany
   */
  export type donationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update donations.
     */
    data: XOR<donationsUpdateManyMutationInput, donationsUncheckedUpdateManyInput>
    /**
     * Filter which donations to update
     */
    where?: donationsWhereInput
    /**
     * Limit how many donations to update.
     */
    limit?: number
  }

  /**
   * donations upsert
   */
  export type donationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * The filter to search for the donations to update in case it exists.
     */
    where: donationsWhereUniqueInput
    /**
     * In case the donations found by the `where` argument doesn't exist, create a new donations with this data.
     */
    create: XOR<donationsCreateInput, donationsUncheckedCreateInput>
    /**
     * In case the donations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<donationsUpdateInput, donationsUncheckedUpdateInput>
  }

  /**
   * donations delete
   */
  export type donationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    /**
     * Filter which donations to delete.
     */
    where: donationsWhereUniqueInput
  }

  /**
   * donations deleteMany
   */
  export type donationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which donations to delete
     */
    where?: donationsWhereInput
    /**
     * Limit how many donations to delete.
     */
    limit?: number
  }

  /**
   * donations without action
   */
  export type donationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
  }


  /**
   * Model donor_profiles
   */

  export type AggregateDonor_profiles = {
    _count: Donor_profilesCountAggregateOutputType | null
    _avg: Donor_profilesAvgAggregateOutputType | null
    _sum: Donor_profilesSumAggregateOutputType | null
    _min: Donor_profilesMinAggregateOutputType | null
    _max: Donor_profilesMaxAggregateOutputType | null
  }

  export type Donor_profilesAvgAggregateOutputType = {
    user_id: number | null
    total_donated: Decimal | null
  }

  export type Donor_profilesSumAggregateOutputType = {
    user_id: bigint | null
    total_donated: Decimal | null
  }

  export type Donor_profilesMinAggregateOutputType = {
    user_id: bigint | null
    is_recurring_donor: boolean | null
    preferred_payment_method: string | null
    total_donated: Decimal | null
    donation_frequency: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email: string | null
    is_anonymous: boolean | null
    last_donation_date: Date | null
    donation_tier: $Enums.donor_profiles_donation_tier | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Donor_profilesMaxAggregateOutputType = {
    user_id: bigint | null
    is_recurring_donor: boolean | null
    preferred_payment_method: string | null
    total_donated: Decimal | null
    donation_frequency: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email: string | null
    is_anonymous: boolean | null
    last_donation_date: Date | null
    donation_tier: $Enums.donor_profiles_donation_tier | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Donor_profilesCountAggregateOutputType = {
    user_id: number
    is_recurring_donor: number
    preferred_payment_method: number
    total_donated: number
    donation_frequency: number
    tax_receipt_email: number
    is_anonymous: number
    last_donation_date: number
    donation_tier: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Donor_profilesAvgAggregateInputType = {
    user_id?: true
    total_donated?: true
  }

  export type Donor_profilesSumAggregateInputType = {
    user_id?: true
    total_donated?: true
  }

  export type Donor_profilesMinAggregateInputType = {
    user_id?: true
    is_recurring_donor?: true
    preferred_payment_method?: true
    total_donated?: true
    donation_frequency?: true
    tax_receipt_email?: true
    is_anonymous?: true
    last_donation_date?: true
    donation_tier?: true
    created_at?: true
    updated_at?: true
  }

  export type Donor_profilesMaxAggregateInputType = {
    user_id?: true
    is_recurring_donor?: true
    preferred_payment_method?: true
    total_donated?: true
    donation_frequency?: true
    tax_receipt_email?: true
    is_anonymous?: true
    last_donation_date?: true
    donation_tier?: true
    created_at?: true
    updated_at?: true
  }

  export type Donor_profilesCountAggregateInputType = {
    user_id?: true
    is_recurring_donor?: true
    preferred_payment_method?: true
    total_donated?: true
    donation_frequency?: true
    tax_receipt_email?: true
    is_anonymous?: true
    last_donation_date?: true
    donation_tier?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Donor_profilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which donor_profiles to aggregate.
     */
    where?: donor_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donor_profiles to fetch.
     */
    orderBy?: donor_profilesOrderByWithRelationInput | donor_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: donor_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donor_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donor_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned donor_profiles
    **/
    _count?: true | Donor_profilesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Donor_profilesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Donor_profilesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Donor_profilesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Donor_profilesMaxAggregateInputType
  }

  export type GetDonor_profilesAggregateType<T extends Donor_profilesAggregateArgs> = {
        [P in keyof T & keyof AggregateDonor_profiles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonor_profiles[P]>
      : GetScalarType<T[P], AggregateDonor_profiles[P]>
  }




  export type donor_profilesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: donor_profilesWhereInput
    orderBy?: donor_profilesOrderByWithAggregationInput | donor_profilesOrderByWithAggregationInput[]
    by: Donor_profilesScalarFieldEnum[] | Donor_profilesScalarFieldEnum
    having?: donor_profilesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Donor_profilesCountAggregateInputType | true
    _avg?: Donor_profilesAvgAggregateInputType
    _sum?: Donor_profilesSumAggregateInputType
    _min?: Donor_profilesMinAggregateInputType
    _max?: Donor_profilesMaxAggregateInputType
  }

  export type Donor_profilesGroupByOutputType = {
    user_id: bigint
    is_recurring_donor: boolean | null
    preferred_payment_method: string | null
    total_donated: Decimal | null
    donation_frequency: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email: string | null
    is_anonymous: boolean | null
    last_donation_date: Date | null
    donation_tier: $Enums.donor_profiles_donation_tier | null
    created_at: Date | null
    updated_at: Date | null
    _count: Donor_profilesCountAggregateOutputType | null
    _avg: Donor_profilesAvgAggregateOutputType | null
    _sum: Donor_profilesSumAggregateOutputType | null
    _min: Donor_profilesMinAggregateOutputType | null
    _max: Donor_profilesMaxAggregateOutputType | null
  }

  type GetDonor_profilesGroupByPayload<T extends donor_profilesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Donor_profilesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Donor_profilesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Donor_profilesGroupByOutputType[P]>
            : GetScalarType<T[P], Donor_profilesGroupByOutputType[P]>
        }
      >
    >


  export type donor_profilesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    is_recurring_donor?: boolean
    preferred_payment_method?: boolean
    total_donated?: boolean
    donation_frequency?: boolean
    tax_receipt_email?: boolean
    is_anonymous?: boolean
    last_donation_date?: boolean
    donation_tier?: boolean
    created_at?: boolean
    updated_at?: boolean
    donations?: boolean | donor_profiles$donationsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Donor_profilesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donor_profiles"]>



  export type donor_profilesSelectScalar = {
    user_id?: boolean
    is_recurring_donor?: boolean
    preferred_payment_method?: boolean
    total_donated?: boolean
    donation_frequency?: boolean
    tax_receipt_email?: boolean
    is_anonymous?: boolean
    last_donation_date?: boolean
    donation_tier?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type donor_profilesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "is_recurring_donor" | "preferred_payment_method" | "total_donated" | "donation_frequency" | "tax_receipt_email" | "is_anonymous" | "last_donation_date" | "donation_tier" | "created_at" | "updated_at", ExtArgs["result"]["donor_profiles"]>
  export type donor_profilesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donations?: boolean | donor_profiles$donationsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Donor_profilesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $donor_profilesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "donor_profiles"
    objects: {
      donations: Prisma.$donationsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: bigint
      is_recurring_donor: boolean | null
      preferred_payment_method: string | null
      total_donated: Prisma.Decimal | null
      donation_frequency: $Enums.donor_profiles_donation_frequency | null
      tax_receipt_email: string | null
      is_anonymous: boolean | null
      last_donation_date: Date | null
      donation_tier: $Enums.donor_profiles_donation_tier | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["donor_profiles"]>
    composites: {}
  }

  type donor_profilesGetPayload<S extends boolean | null | undefined | donor_profilesDefaultArgs> = $Result.GetResult<Prisma.$donor_profilesPayload, S>

  type donor_profilesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<donor_profilesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Donor_profilesCountAggregateInputType | true
    }

  export interface donor_profilesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['donor_profiles'], meta: { name: 'donor_profiles' } }
    /**
     * Find zero or one Donor_profiles that matches the filter.
     * @param {donor_profilesFindUniqueArgs} args - Arguments to find a Donor_profiles
     * @example
     * // Get one Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends donor_profilesFindUniqueArgs>(args: SelectSubset<T, donor_profilesFindUniqueArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Donor_profiles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {donor_profilesFindUniqueOrThrowArgs} args - Arguments to find a Donor_profiles
     * @example
     * // Get one Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends donor_profilesFindUniqueOrThrowArgs>(args: SelectSubset<T, donor_profilesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Donor_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donor_profilesFindFirstArgs} args - Arguments to find a Donor_profiles
     * @example
     * // Get one Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends donor_profilesFindFirstArgs>(args?: SelectSubset<T, donor_profilesFindFirstArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Donor_profiles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donor_profilesFindFirstOrThrowArgs} args - Arguments to find a Donor_profiles
     * @example
     * // Get one Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends donor_profilesFindFirstOrThrowArgs>(args?: SelectSubset<T, donor_profilesFindFirstOrThrowArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Donor_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donor_profilesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.findMany()
     * 
     * // Get first 10 Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const donor_profilesWithUser_idOnly = await prisma.donor_profiles.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends donor_profilesFindManyArgs>(args?: SelectSubset<T, donor_profilesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Donor_profiles.
     * @param {donor_profilesCreateArgs} args - Arguments to create a Donor_profiles.
     * @example
     * // Create one Donor_profiles
     * const Donor_profiles = await prisma.donor_profiles.create({
     *   data: {
     *     // ... data to create a Donor_profiles
     *   }
     * })
     * 
     */
    create<T extends donor_profilesCreateArgs>(args: SelectSubset<T, donor_profilesCreateArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Donor_profiles.
     * @param {donor_profilesCreateManyArgs} args - Arguments to create many Donor_profiles.
     * @example
     * // Create many Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends donor_profilesCreateManyArgs>(args?: SelectSubset<T, donor_profilesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Donor_profiles.
     * @param {donor_profilesDeleteArgs} args - Arguments to delete one Donor_profiles.
     * @example
     * // Delete one Donor_profiles
     * const Donor_profiles = await prisma.donor_profiles.delete({
     *   where: {
     *     // ... filter to delete one Donor_profiles
     *   }
     * })
     * 
     */
    delete<T extends donor_profilesDeleteArgs>(args: SelectSubset<T, donor_profilesDeleteArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Donor_profiles.
     * @param {donor_profilesUpdateArgs} args - Arguments to update one Donor_profiles.
     * @example
     * // Update one Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends donor_profilesUpdateArgs>(args: SelectSubset<T, donor_profilesUpdateArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Donor_profiles.
     * @param {donor_profilesDeleteManyArgs} args - Arguments to filter Donor_profiles to delete.
     * @example
     * // Delete a few Donor_profiles
     * const { count } = await prisma.donor_profiles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends donor_profilesDeleteManyArgs>(args?: SelectSubset<T, donor_profilesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Donor_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donor_profilesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends donor_profilesUpdateManyArgs>(args: SelectSubset<T, donor_profilesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Donor_profiles.
     * @param {donor_profilesUpsertArgs} args - Arguments to update or create a Donor_profiles.
     * @example
     * // Update or create a Donor_profiles
     * const donor_profiles = await prisma.donor_profiles.upsert({
     *   create: {
     *     // ... data to create a Donor_profiles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Donor_profiles we want to update
     *   }
     * })
     */
    upsert<T extends donor_profilesUpsertArgs>(args: SelectSubset<T, donor_profilesUpsertArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Donor_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donor_profilesCountArgs} args - Arguments to filter Donor_profiles to count.
     * @example
     * // Count the number of Donor_profiles
     * const count = await prisma.donor_profiles.count({
     *   where: {
     *     // ... the filter for the Donor_profiles we want to count
     *   }
     * })
    **/
    count<T extends donor_profilesCountArgs>(
      args?: Subset<T, donor_profilesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Donor_profilesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Donor_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Donor_profilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Donor_profilesAggregateArgs>(args: Subset<T, Donor_profilesAggregateArgs>): Prisma.PrismaPromise<GetDonor_profilesAggregateType<T>>

    /**
     * Group by Donor_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {donor_profilesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends donor_profilesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: donor_profilesGroupByArgs['orderBy'] }
        : { orderBy?: donor_profilesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, donor_profilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonor_profilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the donor_profiles model
   */
  readonly fields: donor_profilesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for donor_profiles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__donor_profilesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donations<T extends donor_profiles$donationsArgs<ExtArgs> = {}>(args?: Subset<T, donor_profiles$donationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$donationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the donor_profiles model
   */
  interface donor_profilesFieldRefs {
    readonly user_id: FieldRef<"donor_profiles", 'BigInt'>
    readonly is_recurring_donor: FieldRef<"donor_profiles", 'Boolean'>
    readonly preferred_payment_method: FieldRef<"donor_profiles", 'String'>
    readonly total_donated: FieldRef<"donor_profiles", 'Decimal'>
    readonly donation_frequency: FieldRef<"donor_profiles", 'donor_profiles_donation_frequency'>
    readonly tax_receipt_email: FieldRef<"donor_profiles", 'String'>
    readonly is_anonymous: FieldRef<"donor_profiles", 'Boolean'>
    readonly last_donation_date: FieldRef<"donor_profiles", 'DateTime'>
    readonly donation_tier: FieldRef<"donor_profiles", 'donor_profiles_donation_tier'>
    readonly created_at: FieldRef<"donor_profiles", 'DateTime'>
    readonly updated_at: FieldRef<"donor_profiles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * donor_profiles findUnique
   */
  export type donor_profilesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * Filter, which donor_profiles to fetch.
     */
    where: donor_profilesWhereUniqueInput
  }

  /**
   * donor_profiles findUniqueOrThrow
   */
  export type donor_profilesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * Filter, which donor_profiles to fetch.
     */
    where: donor_profilesWhereUniqueInput
  }

  /**
   * donor_profiles findFirst
   */
  export type donor_profilesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * Filter, which donor_profiles to fetch.
     */
    where?: donor_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donor_profiles to fetch.
     */
    orderBy?: donor_profilesOrderByWithRelationInput | donor_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for donor_profiles.
     */
    cursor?: donor_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donor_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donor_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of donor_profiles.
     */
    distinct?: Donor_profilesScalarFieldEnum | Donor_profilesScalarFieldEnum[]
  }

  /**
   * donor_profiles findFirstOrThrow
   */
  export type donor_profilesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * Filter, which donor_profiles to fetch.
     */
    where?: donor_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donor_profiles to fetch.
     */
    orderBy?: donor_profilesOrderByWithRelationInput | donor_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for donor_profiles.
     */
    cursor?: donor_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donor_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donor_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of donor_profiles.
     */
    distinct?: Donor_profilesScalarFieldEnum | Donor_profilesScalarFieldEnum[]
  }

  /**
   * donor_profiles findMany
   */
  export type donor_profilesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * Filter, which donor_profiles to fetch.
     */
    where?: donor_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of donor_profiles to fetch.
     */
    orderBy?: donor_profilesOrderByWithRelationInput | donor_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing donor_profiles.
     */
    cursor?: donor_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` donor_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` donor_profiles.
     */
    skip?: number
    distinct?: Donor_profilesScalarFieldEnum | Donor_profilesScalarFieldEnum[]
  }

  /**
   * donor_profiles create
   */
  export type donor_profilesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * The data needed to create a donor_profiles.
     */
    data: XOR<donor_profilesCreateInput, donor_profilesUncheckedCreateInput>
  }

  /**
   * donor_profiles createMany
   */
  export type donor_profilesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many donor_profiles.
     */
    data: donor_profilesCreateManyInput | donor_profilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * donor_profiles update
   */
  export type donor_profilesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * The data needed to update a donor_profiles.
     */
    data: XOR<donor_profilesUpdateInput, donor_profilesUncheckedUpdateInput>
    /**
     * Choose, which donor_profiles to update.
     */
    where: donor_profilesWhereUniqueInput
  }

  /**
   * donor_profiles updateMany
   */
  export type donor_profilesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update donor_profiles.
     */
    data: XOR<donor_profilesUpdateManyMutationInput, donor_profilesUncheckedUpdateManyInput>
    /**
     * Filter which donor_profiles to update
     */
    where?: donor_profilesWhereInput
    /**
     * Limit how many donor_profiles to update.
     */
    limit?: number
  }

  /**
   * donor_profiles upsert
   */
  export type donor_profilesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * The filter to search for the donor_profiles to update in case it exists.
     */
    where: donor_profilesWhereUniqueInput
    /**
     * In case the donor_profiles found by the `where` argument doesn't exist, create a new donor_profiles with this data.
     */
    create: XOR<donor_profilesCreateInput, donor_profilesUncheckedCreateInput>
    /**
     * In case the donor_profiles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<donor_profilesUpdateInput, donor_profilesUncheckedUpdateInput>
  }

  /**
   * donor_profiles delete
   */
  export type donor_profilesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    /**
     * Filter which donor_profiles to delete.
     */
    where: donor_profilesWhereUniqueInput
  }

  /**
   * donor_profiles deleteMany
   */
  export type donor_profilesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which donor_profiles to delete
     */
    where?: donor_profilesWhereInput
    /**
     * Limit how many donor_profiles to delete.
     */
    limit?: number
  }

  /**
   * donor_profiles.donations
   */
  export type donor_profiles$donationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donations
     */
    select?: donationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donations
     */
    omit?: donationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donationsInclude<ExtArgs> | null
    where?: donationsWhereInput
    orderBy?: donationsOrderByWithRelationInput | donationsOrderByWithRelationInput[]
    cursor?: donationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonationsScalarFieldEnum | DonationsScalarFieldEnum[]
  }

  /**
   * donor_profiles without action
   */
  export type donor_profilesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
  }


  /**
   * Model email_logs
   */

  export type AggregateEmail_logs = {
    _count: Email_logsCountAggregateOutputType | null
    _avg: Email_logsAvgAggregateOutputType | null
    _sum: Email_logsSumAggregateOutputType | null
    _min: Email_logsMinAggregateOutputType | null
    _max: Email_logsMaxAggregateOutputType | null
  }

  export type Email_logsAvgAggregateOutputType = {
    id: number | null
  }

  export type Email_logsSumAggregateOutputType = {
    id: bigint | null
  }

  export type Email_logsMinAggregateOutputType = {
    id: bigint | null
    recipient: string | null
    subject: string | null
    template_used: string | null
    content: string | null
    status: $Enums.email_logs_status | null
    error_message: string | null
    sent_at: Date | null
    opened_at: Date | null
    clicked_at: Date | null
  }

  export type Email_logsMaxAggregateOutputType = {
    id: bigint | null
    recipient: string | null
    subject: string | null
    template_used: string | null
    content: string | null
    status: $Enums.email_logs_status | null
    error_message: string | null
    sent_at: Date | null
    opened_at: Date | null
    clicked_at: Date | null
  }

  export type Email_logsCountAggregateOutputType = {
    id: number
    recipient: number
    subject: number
    template_used: number
    content: number
    status: number
    error_message: number
    sent_at: number
    opened_at: number
    clicked_at: number
    _all: number
  }


  export type Email_logsAvgAggregateInputType = {
    id?: true
  }

  export type Email_logsSumAggregateInputType = {
    id?: true
  }

  export type Email_logsMinAggregateInputType = {
    id?: true
    recipient?: true
    subject?: true
    template_used?: true
    content?: true
    status?: true
    error_message?: true
    sent_at?: true
    opened_at?: true
    clicked_at?: true
  }

  export type Email_logsMaxAggregateInputType = {
    id?: true
    recipient?: true
    subject?: true
    template_used?: true
    content?: true
    status?: true
    error_message?: true
    sent_at?: true
    opened_at?: true
    clicked_at?: true
  }

  export type Email_logsCountAggregateInputType = {
    id?: true
    recipient?: true
    subject?: true
    template_used?: true
    content?: true
    status?: true
    error_message?: true
    sent_at?: true
    opened_at?: true
    clicked_at?: true
    _all?: true
  }

  export type Email_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_logs to aggregate.
     */
    where?: email_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_logs to fetch.
     */
    orderBy?: email_logsOrderByWithRelationInput | email_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: email_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned email_logs
    **/
    _count?: true | Email_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Email_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Email_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Email_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Email_logsMaxAggregateInputType
  }

  export type GetEmail_logsAggregateType<T extends Email_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateEmail_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmail_logs[P]>
      : GetScalarType<T[P], AggregateEmail_logs[P]>
  }




  export type email_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: email_logsWhereInput
    orderBy?: email_logsOrderByWithAggregationInput | email_logsOrderByWithAggregationInput[]
    by: Email_logsScalarFieldEnum[] | Email_logsScalarFieldEnum
    having?: email_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Email_logsCountAggregateInputType | true
    _avg?: Email_logsAvgAggregateInputType
    _sum?: Email_logsSumAggregateInputType
    _min?: Email_logsMinAggregateInputType
    _max?: Email_logsMaxAggregateInputType
  }

  export type Email_logsGroupByOutputType = {
    id: bigint
    recipient: string
    subject: string | null
    template_used: string | null
    content: string | null
    status: $Enums.email_logs_status
    error_message: string | null
    sent_at: Date | null
    opened_at: Date | null
    clicked_at: Date | null
    _count: Email_logsCountAggregateOutputType | null
    _avg: Email_logsAvgAggregateOutputType | null
    _sum: Email_logsSumAggregateOutputType | null
    _min: Email_logsMinAggregateOutputType | null
    _max: Email_logsMaxAggregateOutputType | null
  }

  type GetEmail_logsGroupByPayload<T extends email_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Email_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Email_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Email_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Email_logsGroupByOutputType[P]>
        }
      >
    >


  export type email_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    recipient?: boolean
    subject?: boolean
    template_used?: boolean
    content?: boolean
    status?: boolean
    error_message?: boolean
    sent_at?: boolean
    opened_at?: boolean
    clicked_at?: boolean
  }, ExtArgs["result"]["email_logs"]>



  export type email_logsSelectScalar = {
    id?: boolean
    recipient?: boolean
    subject?: boolean
    template_used?: boolean
    content?: boolean
    status?: boolean
    error_message?: boolean
    sent_at?: boolean
    opened_at?: boolean
    clicked_at?: boolean
  }

  export type email_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "recipient" | "subject" | "template_used" | "content" | "status" | "error_message" | "sent_at" | "opened_at" | "clicked_at", ExtArgs["result"]["email_logs"]>

  export type $email_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "email_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      recipient: string
      subject: string | null
      template_used: string | null
      content: string | null
      status: $Enums.email_logs_status
      error_message: string | null
      sent_at: Date | null
      opened_at: Date | null
      clicked_at: Date | null
    }, ExtArgs["result"]["email_logs"]>
    composites: {}
  }

  type email_logsGetPayload<S extends boolean | null | undefined | email_logsDefaultArgs> = $Result.GetResult<Prisma.$email_logsPayload, S>

  type email_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<email_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Email_logsCountAggregateInputType | true
    }

  export interface email_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['email_logs'], meta: { name: 'email_logs' } }
    /**
     * Find zero or one Email_logs that matches the filter.
     * @param {email_logsFindUniqueArgs} args - Arguments to find a Email_logs
     * @example
     * // Get one Email_logs
     * const email_logs = await prisma.email_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends email_logsFindUniqueArgs>(args: SelectSubset<T, email_logsFindUniqueArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Email_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {email_logsFindUniqueOrThrowArgs} args - Arguments to find a Email_logs
     * @example
     * // Get one Email_logs
     * const email_logs = await prisma.email_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends email_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, email_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_logsFindFirstArgs} args - Arguments to find a Email_logs
     * @example
     * // Get one Email_logs
     * const email_logs = await prisma.email_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends email_logsFindFirstArgs>(args?: SelectSubset<T, email_logsFindFirstArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_logsFindFirstOrThrowArgs} args - Arguments to find a Email_logs
     * @example
     * // Get one Email_logs
     * const email_logs = await prisma.email_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends email_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, email_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Email_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Email_logs
     * const email_logs = await prisma.email_logs.findMany()
     * 
     * // Get first 10 Email_logs
     * const email_logs = await prisma.email_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const email_logsWithIdOnly = await prisma.email_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends email_logsFindManyArgs>(args?: SelectSubset<T, email_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Email_logs.
     * @param {email_logsCreateArgs} args - Arguments to create a Email_logs.
     * @example
     * // Create one Email_logs
     * const Email_logs = await prisma.email_logs.create({
     *   data: {
     *     // ... data to create a Email_logs
     *   }
     * })
     * 
     */
    create<T extends email_logsCreateArgs>(args: SelectSubset<T, email_logsCreateArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Email_logs.
     * @param {email_logsCreateManyArgs} args - Arguments to create many Email_logs.
     * @example
     * // Create many Email_logs
     * const email_logs = await prisma.email_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends email_logsCreateManyArgs>(args?: SelectSubset<T, email_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Email_logs.
     * @param {email_logsDeleteArgs} args - Arguments to delete one Email_logs.
     * @example
     * // Delete one Email_logs
     * const Email_logs = await prisma.email_logs.delete({
     *   where: {
     *     // ... filter to delete one Email_logs
     *   }
     * })
     * 
     */
    delete<T extends email_logsDeleteArgs>(args: SelectSubset<T, email_logsDeleteArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Email_logs.
     * @param {email_logsUpdateArgs} args - Arguments to update one Email_logs.
     * @example
     * // Update one Email_logs
     * const email_logs = await prisma.email_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends email_logsUpdateArgs>(args: SelectSubset<T, email_logsUpdateArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Email_logs.
     * @param {email_logsDeleteManyArgs} args - Arguments to filter Email_logs to delete.
     * @example
     * // Delete a few Email_logs
     * const { count } = await prisma.email_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends email_logsDeleteManyArgs>(args?: SelectSubset<T, email_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Email_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Email_logs
     * const email_logs = await prisma.email_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends email_logsUpdateManyArgs>(args: SelectSubset<T, email_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Email_logs.
     * @param {email_logsUpsertArgs} args - Arguments to update or create a Email_logs.
     * @example
     * // Update or create a Email_logs
     * const email_logs = await prisma.email_logs.upsert({
     *   create: {
     *     // ... data to create a Email_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Email_logs we want to update
     *   }
     * })
     */
    upsert<T extends email_logsUpsertArgs>(args: SelectSubset<T, email_logsUpsertArgs<ExtArgs>>): Prisma__email_logsClient<$Result.GetResult<Prisma.$email_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Email_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_logsCountArgs} args - Arguments to filter Email_logs to count.
     * @example
     * // Count the number of Email_logs
     * const count = await prisma.email_logs.count({
     *   where: {
     *     // ... the filter for the Email_logs we want to count
     *   }
     * })
    **/
    count<T extends email_logsCountArgs>(
      args?: Subset<T, email_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Email_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Email_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Email_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Email_logsAggregateArgs>(args: Subset<T, Email_logsAggregateArgs>): Prisma.PrismaPromise<GetEmail_logsAggregateType<T>>

    /**
     * Group by Email_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends email_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: email_logsGroupByArgs['orderBy'] }
        : { orderBy?: email_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, email_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmail_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the email_logs model
   */
  readonly fields: email_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for email_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__email_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the email_logs model
   */
  interface email_logsFieldRefs {
    readonly id: FieldRef<"email_logs", 'BigInt'>
    readonly recipient: FieldRef<"email_logs", 'String'>
    readonly subject: FieldRef<"email_logs", 'String'>
    readonly template_used: FieldRef<"email_logs", 'String'>
    readonly content: FieldRef<"email_logs", 'String'>
    readonly status: FieldRef<"email_logs", 'email_logs_status'>
    readonly error_message: FieldRef<"email_logs", 'String'>
    readonly sent_at: FieldRef<"email_logs", 'DateTime'>
    readonly opened_at: FieldRef<"email_logs", 'DateTime'>
    readonly clicked_at: FieldRef<"email_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * email_logs findUnique
   */
  export type email_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * Filter, which email_logs to fetch.
     */
    where: email_logsWhereUniqueInput
  }

  /**
   * email_logs findUniqueOrThrow
   */
  export type email_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * Filter, which email_logs to fetch.
     */
    where: email_logsWhereUniqueInput
  }

  /**
   * email_logs findFirst
   */
  export type email_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * Filter, which email_logs to fetch.
     */
    where?: email_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_logs to fetch.
     */
    orderBy?: email_logsOrderByWithRelationInput | email_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_logs.
     */
    cursor?: email_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_logs.
     */
    distinct?: Email_logsScalarFieldEnum | Email_logsScalarFieldEnum[]
  }

  /**
   * email_logs findFirstOrThrow
   */
  export type email_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * Filter, which email_logs to fetch.
     */
    where?: email_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_logs to fetch.
     */
    orderBy?: email_logsOrderByWithRelationInput | email_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_logs.
     */
    cursor?: email_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_logs.
     */
    distinct?: Email_logsScalarFieldEnum | Email_logsScalarFieldEnum[]
  }

  /**
   * email_logs findMany
   */
  export type email_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * Filter, which email_logs to fetch.
     */
    where?: email_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_logs to fetch.
     */
    orderBy?: email_logsOrderByWithRelationInput | email_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing email_logs.
     */
    cursor?: email_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_logs.
     */
    skip?: number
    distinct?: Email_logsScalarFieldEnum | Email_logsScalarFieldEnum[]
  }

  /**
   * email_logs create
   */
  export type email_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a email_logs.
     */
    data: XOR<email_logsCreateInput, email_logsUncheckedCreateInput>
  }

  /**
   * email_logs createMany
   */
  export type email_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many email_logs.
     */
    data: email_logsCreateManyInput | email_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * email_logs update
   */
  export type email_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a email_logs.
     */
    data: XOR<email_logsUpdateInput, email_logsUncheckedUpdateInput>
    /**
     * Choose, which email_logs to update.
     */
    where: email_logsWhereUniqueInput
  }

  /**
   * email_logs updateMany
   */
  export type email_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update email_logs.
     */
    data: XOR<email_logsUpdateManyMutationInput, email_logsUncheckedUpdateManyInput>
    /**
     * Filter which email_logs to update
     */
    where?: email_logsWhereInput
    /**
     * Limit how many email_logs to update.
     */
    limit?: number
  }

  /**
   * email_logs upsert
   */
  export type email_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the email_logs to update in case it exists.
     */
    where: email_logsWhereUniqueInput
    /**
     * In case the email_logs found by the `where` argument doesn't exist, create a new email_logs with this data.
     */
    create: XOR<email_logsCreateInput, email_logsUncheckedCreateInput>
    /**
     * In case the email_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<email_logsUpdateInput, email_logsUncheckedUpdateInput>
  }

  /**
   * email_logs delete
   */
  export type email_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
    /**
     * Filter which email_logs to delete.
     */
    where: email_logsWhereUniqueInput
  }

  /**
   * email_logs deleteMany
   */
  export type email_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_logs to delete
     */
    where?: email_logsWhereInput
    /**
     * Limit how many email_logs to delete.
     */
    limit?: number
  }

  /**
   * email_logs without action
   */
  export type email_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_logs
     */
    select?: email_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_logs
     */
    omit?: email_logsOmit<ExtArgs> | null
  }


  /**
   * Model event_participants
   */

  export type AggregateEvent_participants = {
    _count: Event_participantsCountAggregateOutputType | null
    _avg: Event_participantsAvgAggregateOutputType | null
    _sum: Event_participantsSumAggregateOutputType | null
    _min: Event_participantsMinAggregateOutputType | null
    _max: Event_participantsMaxAggregateOutputType | null
  }

  export type Event_participantsAvgAggregateOutputType = {
    event_id: number | null
    user_id: number | null
    hours_contributed: Decimal | null
    rating: number | null
  }

  export type Event_participantsSumAggregateOutputType = {
    event_id: bigint | null
    user_id: bigint | null
    hours_contributed: Decimal | null
    rating: number | null
  }

  export type Event_participantsMinAggregateOutputType = {
    event_id: bigint | null
    user_id: bigint | null
    role: $Enums.event_participants_role | null
    status: $Enums.event_participants_status | null
    hours_contributed: Decimal | null
    feedback: string | null
    rating: number | null
    registered_at: Date | null
    attended_at: Date | null
  }

  export type Event_participantsMaxAggregateOutputType = {
    event_id: bigint | null
    user_id: bigint | null
    role: $Enums.event_participants_role | null
    status: $Enums.event_participants_status | null
    hours_contributed: Decimal | null
    feedback: string | null
    rating: number | null
    registered_at: Date | null
    attended_at: Date | null
  }

  export type Event_participantsCountAggregateOutputType = {
    event_id: number
    user_id: number
    role: number
    status: number
    hours_contributed: number
    feedback: number
    rating: number
    registered_at: number
    attended_at: number
    _all: number
  }


  export type Event_participantsAvgAggregateInputType = {
    event_id?: true
    user_id?: true
    hours_contributed?: true
    rating?: true
  }

  export type Event_participantsSumAggregateInputType = {
    event_id?: true
    user_id?: true
    hours_contributed?: true
    rating?: true
  }

  export type Event_participantsMinAggregateInputType = {
    event_id?: true
    user_id?: true
    role?: true
    status?: true
    hours_contributed?: true
    feedback?: true
    rating?: true
    registered_at?: true
    attended_at?: true
  }

  export type Event_participantsMaxAggregateInputType = {
    event_id?: true
    user_id?: true
    role?: true
    status?: true
    hours_contributed?: true
    feedback?: true
    rating?: true
    registered_at?: true
    attended_at?: true
  }

  export type Event_participantsCountAggregateInputType = {
    event_id?: true
    user_id?: true
    role?: true
    status?: true
    hours_contributed?: true
    feedback?: true
    rating?: true
    registered_at?: true
    attended_at?: true
    _all?: true
  }

  export type Event_participantsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which event_participants to aggregate.
     */
    where?: event_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_participants to fetch.
     */
    orderBy?: event_participantsOrderByWithRelationInput | event_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: event_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_participants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned event_participants
    **/
    _count?: true | Event_participantsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Event_participantsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Event_participantsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Event_participantsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Event_participantsMaxAggregateInputType
  }

  export type GetEvent_participantsAggregateType<T extends Event_participantsAggregateArgs> = {
        [P in keyof T & keyof AggregateEvent_participants]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvent_participants[P]>
      : GetScalarType<T[P], AggregateEvent_participants[P]>
  }




  export type event_participantsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: event_participantsWhereInput
    orderBy?: event_participantsOrderByWithAggregationInput | event_participantsOrderByWithAggregationInput[]
    by: Event_participantsScalarFieldEnum[] | Event_participantsScalarFieldEnum
    having?: event_participantsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Event_participantsCountAggregateInputType | true
    _avg?: Event_participantsAvgAggregateInputType
    _sum?: Event_participantsSumAggregateInputType
    _min?: Event_participantsMinAggregateInputType
    _max?: Event_participantsMaxAggregateInputType
  }

  export type Event_participantsGroupByOutputType = {
    event_id: bigint
    user_id: bigint
    role: $Enums.event_participants_role
    status: $Enums.event_participants_status | null
    hours_contributed: Decimal | null
    feedback: string | null
    rating: number | null
    registered_at: Date | null
    attended_at: Date | null
    _count: Event_participantsCountAggregateOutputType | null
    _avg: Event_participantsAvgAggregateOutputType | null
    _sum: Event_participantsSumAggregateOutputType | null
    _min: Event_participantsMinAggregateOutputType | null
    _max: Event_participantsMaxAggregateOutputType | null
  }

  type GetEvent_participantsGroupByPayload<T extends event_participantsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Event_participantsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Event_participantsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Event_participantsGroupByOutputType[P]>
            : GetScalarType<T[P], Event_participantsGroupByOutputType[P]>
        }
      >
    >


  export type event_participantsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    event_id?: boolean
    user_id?: boolean
    role?: boolean
    status?: boolean
    hours_contributed?: boolean
    feedback?: boolean
    rating?: boolean
    registered_at?: boolean
    attended_at?: boolean
    events?: boolean | eventsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["event_participants"]>



  export type event_participantsSelectScalar = {
    event_id?: boolean
    user_id?: boolean
    role?: boolean
    status?: boolean
    hours_contributed?: boolean
    feedback?: boolean
    rating?: boolean
    registered_at?: boolean
    attended_at?: boolean
  }

  export type event_participantsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"event_id" | "user_id" | "role" | "status" | "hours_contributed" | "feedback" | "rating" | "registered_at" | "attended_at", ExtArgs["result"]["event_participants"]>
  export type event_participantsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | eventsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $event_participantsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "event_participants"
    objects: {
      events: Prisma.$eventsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      event_id: bigint
      user_id: bigint
      role: $Enums.event_participants_role
      status: $Enums.event_participants_status | null
      hours_contributed: Prisma.Decimal | null
      feedback: string | null
      rating: number | null
      registered_at: Date | null
      attended_at: Date | null
    }, ExtArgs["result"]["event_participants"]>
    composites: {}
  }

  type event_participantsGetPayload<S extends boolean | null | undefined | event_participantsDefaultArgs> = $Result.GetResult<Prisma.$event_participantsPayload, S>

  type event_participantsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<event_participantsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Event_participantsCountAggregateInputType | true
    }

  export interface event_participantsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['event_participants'], meta: { name: 'event_participants' } }
    /**
     * Find zero or one Event_participants that matches the filter.
     * @param {event_participantsFindUniqueArgs} args - Arguments to find a Event_participants
     * @example
     * // Get one Event_participants
     * const event_participants = await prisma.event_participants.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends event_participantsFindUniqueArgs>(args: SelectSubset<T, event_participantsFindUniqueArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Event_participants that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {event_participantsFindUniqueOrThrowArgs} args - Arguments to find a Event_participants
     * @example
     * // Get one Event_participants
     * const event_participants = await prisma.event_participants.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends event_participantsFindUniqueOrThrowArgs>(args: SelectSubset<T, event_participantsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event_participants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_participantsFindFirstArgs} args - Arguments to find a Event_participants
     * @example
     * // Get one Event_participants
     * const event_participants = await prisma.event_participants.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends event_participantsFindFirstArgs>(args?: SelectSubset<T, event_participantsFindFirstArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event_participants that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_participantsFindFirstOrThrowArgs} args - Arguments to find a Event_participants
     * @example
     * // Get one Event_participants
     * const event_participants = await prisma.event_participants.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends event_participantsFindFirstOrThrowArgs>(args?: SelectSubset<T, event_participantsFindFirstOrThrowArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Event_participants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_participantsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Event_participants
     * const event_participants = await prisma.event_participants.findMany()
     * 
     * // Get first 10 Event_participants
     * const event_participants = await prisma.event_participants.findMany({ take: 10 })
     * 
     * // Only select the `event_id`
     * const event_participantsWithEvent_idOnly = await prisma.event_participants.findMany({ select: { event_id: true } })
     * 
     */
    findMany<T extends event_participantsFindManyArgs>(args?: SelectSubset<T, event_participantsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Event_participants.
     * @param {event_participantsCreateArgs} args - Arguments to create a Event_participants.
     * @example
     * // Create one Event_participants
     * const Event_participants = await prisma.event_participants.create({
     *   data: {
     *     // ... data to create a Event_participants
     *   }
     * })
     * 
     */
    create<T extends event_participantsCreateArgs>(args: SelectSubset<T, event_participantsCreateArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Event_participants.
     * @param {event_participantsCreateManyArgs} args - Arguments to create many Event_participants.
     * @example
     * // Create many Event_participants
     * const event_participants = await prisma.event_participants.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends event_participantsCreateManyArgs>(args?: SelectSubset<T, event_participantsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Event_participants.
     * @param {event_participantsDeleteArgs} args - Arguments to delete one Event_participants.
     * @example
     * // Delete one Event_participants
     * const Event_participants = await prisma.event_participants.delete({
     *   where: {
     *     // ... filter to delete one Event_participants
     *   }
     * })
     * 
     */
    delete<T extends event_participantsDeleteArgs>(args: SelectSubset<T, event_participantsDeleteArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Event_participants.
     * @param {event_participantsUpdateArgs} args - Arguments to update one Event_participants.
     * @example
     * // Update one Event_participants
     * const event_participants = await prisma.event_participants.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends event_participantsUpdateArgs>(args: SelectSubset<T, event_participantsUpdateArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Event_participants.
     * @param {event_participantsDeleteManyArgs} args - Arguments to filter Event_participants to delete.
     * @example
     * // Delete a few Event_participants
     * const { count } = await prisma.event_participants.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends event_participantsDeleteManyArgs>(args?: SelectSubset<T, event_participantsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Event_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_participantsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Event_participants
     * const event_participants = await prisma.event_participants.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends event_participantsUpdateManyArgs>(args: SelectSubset<T, event_participantsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Event_participants.
     * @param {event_participantsUpsertArgs} args - Arguments to update or create a Event_participants.
     * @example
     * // Update or create a Event_participants
     * const event_participants = await prisma.event_participants.upsert({
     *   create: {
     *     // ... data to create a Event_participants
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Event_participants we want to update
     *   }
     * })
     */
    upsert<T extends event_participantsUpsertArgs>(args: SelectSubset<T, event_participantsUpsertArgs<ExtArgs>>): Prisma__event_participantsClient<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Event_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_participantsCountArgs} args - Arguments to filter Event_participants to count.
     * @example
     * // Count the number of Event_participants
     * const count = await prisma.event_participants.count({
     *   where: {
     *     // ... the filter for the Event_participants we want to count
     *   }
     * })
    **/
    count<T extends event_participantsCountArgs>(
      args?: Subset<T, event_participantsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Event_participantsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Event_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Event_participantsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Event_participantsAggregateArgs>(args: Subset<T, Event_participantsAggregateArgs>): Prisma.PrismaPromise<GetEvent_participantsAggregateType<T>>

    /**
     * Group by Event_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_participantsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends event_participantsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: event_participantsGroupByArgs['orderBy'] }
        : { orderBy?: event_participantsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, event_participantsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvent_participantsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the event_participants model
   */
  readonly fields: event_participantsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for event_participants.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__event_participantsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    events<T extends eventsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, eventsDefaultArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the event_participants model
   */
  interface event_participantsFieldRefs {
    readonly event_id: FieldRef<"event_participants", 'BigInt'>
    readonly user_id: FieldRef<"event_participants", 'BigInt'>
    readonly role: FieldRef<"event_participants", 'event_participants_role'>
    readonly status: FieldRef<"event_participants", 'event_participants_status'>
    readonly hours_contributed: FieldRef<"event_participants", 'Decimal'>
    readonly feedback: FieldRef<"event_participants", 'String'>
    readonly rating: FieldRef<"event_participants", 'Int'>
    readonly registered_at: FieldRef<"event_participants", 'DateTime'>
    readonly attended_at: FieldRef<"event_participants", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * event_participants findUnique
   */
  export type event_participantsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * Filter, which event_participants to fetch.
     */
    where: event_participantsWhereUniqueInput
  }

  /**
   * event_participants findUniqueOrThrow
   */
  export type event_participantsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * Filter, which event_participants to fetch.
     */
    where: event_participantsWhereUniqueInput
  }

  /**
   * event_participants findFirst
   */
  export type event_participantsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * Filter, which event_participants to fetch.
     */
    where?: event_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_participants to fetch.
     */
    orderBy?: event_participantsOrderByWithRelationInput | event_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for event_participants.
     */
    cursor?: event_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_participants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of event_participants.
     */
    distinct?: Event_participantsScalarFieldEnum | Event_participantsScalarFieldEnum[]
  }

  /**
   * event_participants findFirstOrThrow
   */
  export type event_participantsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * Filter, which event_participants to fetch.
     */
    where?: event_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_participants to fetch.
     */
    orderBy?: event_participantsOrderByWithRelationInput | event_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for event_participants.
     */
    cursor?: event_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_participants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of event_participants.
     */
    distinct?: Event_participantsScalarFieldEnum | Event_participantsScalarFieldEnum[]
  }

  /**
   * event_participants findMany
   */
  export type event_participantsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * Filter, which event_participants to fetch.
     */
    where?: event_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_participants to fetch.
     */
    orderBy?: event_participantsOrderByWithRelationInput | event_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing event_participants.
     */
    cursor?: event_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_participants.
     */
    skip?: number
    distinct?: Event_participantsScalarFieldEnum | Event_participantsScalarFieldEnum[]
  }

  /**
   * event_participants create
   */
  export type event_participantsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * The data needed to create a event_participants.
     */
    data: XOR<event_participantsCreateInput, event_participantsUncheckedCreateInput>
  }

  /**
   * event_participants createMany
   */
  export type event_participantsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many event_participants.
     */
    data: event_participantsCreateManyInput | event_participantsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * event_participants update
   */
  export type event_participantsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * The data needed to update a event_participants.
     */
    data: XOR<event_participantsUpdateInput, event_participantsUncheckedUpdateInput>
    /**
     * Choose, which event_participants to update.
     */
    where: event_participantsWhereUniqueInput
  }

  /**
   * event_participants updateMany
   */
  export type event_participantsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update event_participants.
     */
    data: XOR<event_participantsUpdateManyMutationInput, event_participantsUncheckedUpdateManyInput>
    /**
     * Filter which event_participants to update
     */
    where?: event_participantsWhereInput
    /**
     * Limit how many event_participants to update.
     */
    limit?: number
  }

  /**
   * event_participants upsert
   */
  export type event_participantsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * The filter to search for the event_participants to update in case it exists.
     */
    where: event_participantsWhereUniqueInput
    /**
     * In case the event_participants found by the `where` argument doesn't exist, create a new event_participants with this data.
     */
    create: XOR<event_participantsCreateInput, event_participantsUncheckedCreateInput>
    /**
     * In case the event_participants was found with the provided `where` argument, update it with this data.
     */
    update: XOR<event_participantsUpdateInput, event_participantsUncheckedUpdateInput>
  }

  /**
   * event_participants delete
   */
  export type event_participantsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    /**
     * Filter which event_participants to delete.
     */
    where: event_participantsWhereUniqueInput
  }

  /**
   * event_participants deleteMany
   */
  export type event_participantsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which event_participants to delete
     */
    where?: event_participantsWhereInput
    /**
     * Limit how many event_participants to delete.
     */
    limit?: number
  }

  /**
   * event_participants without action
   */
  export type event_participantsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
  }


  /**
   * Model events
   */

  export type AggregateEvents = {
    _count: EventsCountAggregateOutputType | null
    _avg: EventsAvgAggregateOutputType | null
    _sum: EventsSumAggregateOutputType | null
    _min: EventsMinAggregateOutputType | null
    _max: EventsMaxAggregateOutputType | null
  }

  export type EventsAvgAggregateOutputType = {
    id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    capacity: number | null
    registered_count: number | null
    ticket_price: Decimal | null
    created_by: number | null
  }

  export type EventsSumAggregateOutputType = {
    id: bigint | null
    latitude: Decimal | null
    longitude: Decimal | null
    capacity: number | null
    registered_count: number | null
    ticket_price: Decimal | null
    created_by: bigint | null
  }

  export type EventsMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    slug: string | null
    description: string | null
    event_date: Date | null
    event_time: Date | null
    timezone: string | null
    location: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    category: string | null
    capacity: number | null
    registered_count: number | null
    status: $Enums.events_status | null
    registration_deadline: Date | null
    registration_link: string | null
    map_embed_url: string | null
    agenda: string | null
    speaker_info: string | null
    requirements: string | null
    ticket_price: Decimal | null
    ticket_link: string | null
    is_featured: boolean | null
    created_by: bigint | null
    language: $Enums.events_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type EventsMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    slug: string | null
    description: string | null
    event_date: Date | null
    event_time: Date | null
    timezone: string | null
    location: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    category: string | null
    capacity: number | null
    registered_count: number | null
    status: $Enums.events_status | null
    registration_deadline: Date | null
    registration_link: string | null
    map_embed_url: string | null
    agenda: string | null
    speaker_info: string | null
    requirements: string | null
    ticket_price: Decimal | null
    ticket_link: string | null
    is_featured: boolean | null
    created_by: bigint | null
    language: $Enums.events_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type EventsCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    description: number
    event_date: number
    event_time: number
    timezone: number
    location: number
    latitude: number
    longitude: number
    category: number
    capacity: number
    registered_count: number
    status: number
    registration_deadline: number
    registration_link: number
    map_embed_url: number
    agenda: number
    speaker_info: number
    requirements: number
    ticket_price: number
    ticket_link: number
    is_featured: number
    created_by: number
    language: number
    translation_group_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type EventsAvgAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    capacity?: true
    registered_count?: true
    ticket_price?: true
    created_by?: true
  }

  export type EventsSumAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    capacity?: true
    registered_count?: true
    ticket_price?: true
    created_by?: true
  }

  export type EventsMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    event_date?: true
    event_time?: true
    timezone?: true
    location?: true
    latitude?: true
    longitude?: true
    category?: true
    capacity?: true
    registered_count?: true
    status?: true
    registration_deadline?: true
    registration_link?: true
    map_embed_url?: true
    agenda?: true
    speaker_info?: true
    requirements?: true
    ticket_price?: true
    ticket_link?: true
    is_featured?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type EventsMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    event_date?: true
    event_time?: true
    timezone?: true
    location?: true
    latitude?: true
    longitude?: true
    category?: true
    capacity?: true
    registered_count?: true
    status?: true
    registration_deadline?: true
    registration_link?: true
    map_embed_url?: true
    agenda?: true
    speaker_info?: true
    requirements?: true
    ticket_price?: true
    ticket_link?: true
    is_featured?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type EventsCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    event_date?: true
    event_time?: true
    timezone?: true
    location?: true
    latitude?: true
    longitude?: true
    category?: true
    capacity?: true
    registered_count?: true
    status?: true
    registration_deadline?: true
    registration_link?: true
    map_embed_url?: true
    agenda?: true
    speaker_info?: true
    requirements?: true
    ticket_price?: true
    ticket_link?: true
    is_featured?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type EventsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which events to aggregate.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned events
    **/
    _count?: true | EventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventsMaxAggregateInputType
  }

  export type GetEventsAggregateType<T extends EventsAggregateArgs> = {
        [P in keyof T & keyof AggregateEvents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvents[P]>
      : GetScalarType<T[P], AggregateEvents[P]>
  }




  export type eventsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: eventsWhereInput
    orderBy?: eventsOrderByWithAggregationInput | eventsOrderByWithAggregationInput[]
    by: EventsScalarFieldEnum[] | EventsScalarFieldEnum
    having?: eventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventsCountAggregateInputType | true
    _avg?: EventsAvgAggregateInputType
    _sum?: EventsSumAggregateInputType
    _min?: EventsMinAggregateInputType
    _max?: EventsMaxAggregateInputType
  }

  export type EventsGroupByOutputType = {
    id: bigint
    title: string
    slug: string
    description: string | null
    event_date: Date
    event_time: Date
    timezone: string | null
    location: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    category: string | null
    capacity: number | null
    registered_count: number | null
    status: $Enums.events_status | null
    registration_deadline: Date | null
    registration_link: string | null
    map_embed_url: string | null
    agenda: string | null
    speaker_info: string | null
    requirements: string | null
    ticket_price: Decimal | null
    ticket_link: string | null
    is_featured: boolean | null
    created_by: bigint | null
    language: $Enums.events_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: EventsCountAggregateOutputType | null
    _avg: EventsAvgAggregateOutputType | null
    _sum: EventsSumAggregateOutputType | null
    _min: EventsMinAggregateOutputType | null
    _max: EventsMaxAggregateOutputType | null
  }

  type GetEventsGroupByPayload<T extends eventsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventsGroupByOutputType[P]>
            : GetScalarType<T[P], EventsGroupByOutputType[P]>
        }
      >
    >


  export type eventsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    event_date?: boolean
    event_time?: boolean
    timezone?: boolean
    location?: boolean
    latitude?: boolean
    longitude?: boolean
    category?: boolean
    capacity?: boolean
    registered_count?: boolean
    status?: boolean
    registration_deadline?: boolean
    registration_link?: boolean
    map_embed_url?: boolean
    agenda?: boolean
    speaker_info?: boolean
    requirements?: boolean
    ticket_price?: boolean
    ticket_link?: boolean
    is_featured?: boolean
    created_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    event_participants?: boolean | events$event_participantsArgs<ExtArgs>
    users?: boolean | events$usersArgs<ExtArgs>
    media?: boolean | events$mediaArgs<ExtArgs>
    _count?: boolean | EventsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["events"]>



  export type eventsSelectScalar = {
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    event_date?: boolean
    event_time?: boolean
    timezone?: boolean
    location?: boolean
    latitude?: boolean
    longitude?: boolean
    category?: boolean
    capacity?: boolean
    registered_count?: boolean
    status?: boolean
    registration_deadline?: boolean
    registration_link?: boolean
    map_embed_url?: boolean
    agenda?: boolean
    speaker_info?: boolean
    requirements?: boolean
    ticket_price?: boolean
    ticket_link?: boolean
    is_featured?: boolean
    created_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type eventsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "slug" | "description" | "event_date" | "event_time" | "timezone" | "location" | "latitude" | "longitude" | "category" | "capacity" | "registered_count" | "status" | "registration_deadline" | "registration_link" | "map_embed_url" | "agenda" | "speaker_info" | "requirements" | "ticket_price" | "ticket_link" | "is_featured" | "created_by" | "language" | "translation_group_id" | "created_at" | "updated_at" | "deleted_at", ExtArgs["result"]["events"]>
  export type eventsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_participants?: boolean | events$event_participantsArgs<ExtArgs>
    users?: boolean | events$usersArgs<ExtArgs>
    media?: boolean | events$mediaArgs<ExtArgs>
    _count?: boolean | EventsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $eventsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "events"
    objects: {
      event_participants: Prisma.$event_participantsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs> | null
      media: Prisma.$mediaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      slug: string
      description: string | null
      event_date: Date
      event_time: Date
      timezone: string | null
      location: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      category: string | null
      capacity: number | null
      registered_count: number | null
      status: $Enums.events_status | null
      registration_deadline: Date | null
      registration_link: string | null
      map_embed_url: string | null
      agenda: string | null
      speaker_info: string | null
      requirements: string | null
      ticket_price: Prisma.Decimal | null
      ticket_link: string | null
      is_featured: boolean | null
      created_by: bigint | null
      language: $Enums.events_language | null
      translation_group_id: string | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["events"]>
    composites: {}
  }

  type eventsGetPayload<S extends boolean | null | undefined | eventsDefaultArgs> = $Result.GetResult<Prisma.$eventsPayload, S>

  type eventsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<eventsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventsCountAggregateInputType | true
    }

  export interface eventsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['events'], meta: { name: 'events' } }
    /**
     * Find zero or one Events that matches the filter.
     * @param {eventsFindUniqueArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends eventsFindUniqueArgs>(args: SelectSubset<T, eventsFindUniqueArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Events that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {eventsFindUniqueOrThrowArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends eventsFindUniqueOrThrowArgs>(args: SelectSubset<T, eventsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsFindFirstArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends eventsFindFirstArgs>(args?: SelectSubset<T, eventsFindFirstArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Events that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsFindFirstOrThrowArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends eventsFindFirstOrThrowArgs>(args?: SelectSubset<T, eventsFindFirstOrThrowArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Events
     * const events = await prisma.events.findMany()
     * 
     * // Get first 10 Events
     * const events = await prisma.events.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventsWithIdOnly = await prisma.events.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends eventsFindManyArgs>(args?: SelectSubset<T, eventsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Events.
     * @param {eventsCreateArgs} args - Arguments to create a Events.
     * @example
     * // Create one Events
     * const Events = await prisma.events.create({
     *   data: {
     *     // ... data to create a Events
     *   }
     * })
     * 
     */
    create<T extends eventsCreateArgs>(args: SelectSubset<T, eventsCreateArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Events.
     * @param {eventsCreateManyArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const events = await prisma.events.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends eventsCreateManyArgs>(args?: SelectSubset<T, eventsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Events.
     * @param {eventsDeleteArgs} args - Arguments to delete one Events.
     * @example
     * // Delete one Events
     * const Events = await prisma.events.delete({
     *   where: {
     *     // ... filter to delete one Events
     *   }
     * })
     * 
     */
    delete<T extends eventsDeleteArgs>(args: SelectSubset<T, eventsDeleteArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Events.
     * @param {eventsUpdateArgs} args - Arguments to update one Events.
     * @example
     * // Update one Events
     * const events = await prisma.events.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends eventsUpdateArgs>(args: SelectSubset<T, eventsUpdateArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Events.
     * @param {eventsDeleteManyArgs} args - Arguments to filter Events to delete.
     * @example
     * // Delete a few Events
     * const { count } = await prisma.events.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends eventsDeleteManyArgs>(args?: SelectSubset<T, eventsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Events
     * const events = await prisma.events.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends eventsUpdateManyArgs>(args: SelectSubset<T, eventsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Events.
     * @param {eventsUpsertArgs} args - Arguments to update or create a Events.
     * @example
     * // Update or create a Events
     * const events = await prisma.events.upsert({
     *   create: {
     *     // ... data to create a Events
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Events we want to update
     *   }
     * })
     */
    upsert<T extends eventsUpsertArgs>(args: SelectSubset<T, eventsUpsertArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsCountArgs} args - Arguments to filter Events to count.
     * @example
     * // Count the number of Events
     * const count = await prisma.events.count({
     *   where: {
     *     // ... the filter for the Events we want to count
     *   }
     * })
    **/
    count<T extends eventsCountArgs>(
      args?: Subset<T, eventsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventsAggregateArgs>(args: Subset<T, EventsAggregateArgs>): Prisma.PrismaPromise<GetEventsAggregateType<T>>

    /**
     * Group by Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends eventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: eventsGroupByArgs['orderBy'] }
        : { orderBy?: eventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, eventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the events model
   */
  readonly fields: eventsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for events.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__eventsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event_participants<T extends events$event_participantsArgs<ExtArgs> = {}>(args?: Subset<T, events$event_participantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends events$usersArgs<ExtArgs> = {}>(args?: Subset<T, events$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    media<T extends events$mediaArgs<ExtArgs> = {}>(args?: Subset<T, events$mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the events model
   */
  interface eventsFieldRefs {
    readonly id: FieldRef<"events", 'BigInt'>
    readonly title: FieldRef<"events", 'String'>
    readonly slug: FieldRef<"events", 'String'>
    readonly description: FieldRef<"events", 'String'>
    readonly event_date: FieldRef<"events", 'DateTime'>
    readonly event_time: FieldRef<"events", 'DateTime'>
    readonly timezone: FieldRef<"events", 'String'>
    readonly location: FieldRef<"events", 'String'>
    readonly latitude: FieldRef<"events", 'Decimal'>
    readonly longitude: FieldRef<"events", 'Decimal'>
    readonly category: FieldRef<"events", 'String'>
    readonly capacity: FieldRef<"events", 'Int'>
    readonly registered_count: FieldRef<"events", 'Int'>
    readonly status: FieldRef<"events", 'events_status'>
    readonly registration_deadline: FieldRef<"events", 'DateTime'>
    readonly registration_link: FieldRef<"events", 'String'>
    readonly map_embed_url: FieldRef<"events", 'String'>
    readonly agenda: FieldRef<"events", 'String'>
    readonly speaker_info: FieldRef<"events", 'String'>
    readonly requirements: FieldRef<"events", 'String'>
    readonly ticket_price: FieldRef<"events", 'Decimal'>
    readonly ticket_link: FieldRef<"events", 'String'>
    readonly is_featured: FieldRef<"events", 'Boolean'>
    readonly created_by: FieldRef<"events", 'BigInt'>
    readonly language: FieldRef<"events", 'events_language'>
    readonly translation_group_id: FieldRef<"events", 'String'>
    readonly created_at: FieldRef<"events", 'DateTime'>
    readonly updated_at: FieldRef<"events", 'DateTime'>
    readonly deleted_at: FieldRef<"events", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * events findUnique
   */
  export type eventsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events findUniqueOrThrow
   */
  export type eventsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events findFirst
   */
  export type eventsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for events.
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of events.
     */
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * events findFirstOrThrow
   */
  export type eventsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for events.
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of events.
     */
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * events findMany
   */
  export type eventsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing events.
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * events create
   */
  export type eventsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * The data needed to create a events.
     */
    data: XOR<eventsCreateInput, eventsUncheckedCreateInput>
  }

  /**
   * events createMany
   */
  export type eventsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many events.
     */
    data: eventsCreateManyInput | eventsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * events update
   */
  export type eventsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * The data needed to update a events.
     */
    data: XOR<eventsUpdateInput, eventsUncheckedUpdateInput>
    /**
     * Choose, which events to update.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events updateMany
   */
  export type eventsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update events.
     */
    data: XOR<eventsUpdateManyMutationInput, eventsUncheckedUpdateManyInput>
    /**
     * Filter which events to update
     */
    where?: eventsWhereInput
    /**
     * Limit how many events to update.
     */
    limit?: number
  }

  /**
   * events upsert
   */
  export type eventsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * The filter to search for the events to update in case it exists.
     */
    where: eventsWhereUniqueInput
    /**
     * In case the events found by the `where` argument doesn't exist, create a new events with this data.
     */
    create: XOR<eventsCreateInput, eventsUncheckedCreateInput>
    /**
     * In case the events was found with the provided `where` argument, update it with this data.
     */
    update: XOR<eventsUpdateInput, eventsUncheckedUpdateInput>
  }

  /**
   * events delete
   */
  export type eventsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter which events to delete.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events deleteMany
   */
  export type eventsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which events to delete
     */
    where?: eventsWhereInput
    /**
     * Limit how many events to delete.
     */
    limit?: number
  }

  /**
   * events.event_participants
   */
  export type events$event_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    where?: event_participantsWhereInput
    orderBy?: event_participantsOrderByWithRelationInput | event_participantsOrderByWithRelationInput[]
    cursor?: event_participantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Event_participantsScalarFieldEnum | Event_participantsScalarFieldEnum[]
  }

  /**
   * events.users
   */
  export type events$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * events.media
   */
  export type events$mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    where?: mediaWhereInput
    orderBy?: mediaOrderByWithRelationInput | mediaOrderByWithRelationInput[]
    cursor?: mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * events without action
   */
  export type eventsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
  }


  /**
   * Model faqs
   */

  export type AggregateFaqs = {
    _count: FaqsCountAggregateOutputType | null
    _avg: FaqsAvgAggregateOutputType | null
    _sum: FaqsSumAggregateOutputType | null
    _min: FaqsMinAggregateOutputType | null
    _max: FaqsMaxAggregateOutputType | null
  }

  export type FaqsAvgAggregateOutputType = {
    id: number | null
    sort_order: number | null
  }

  export type FaqsSumAggregateOutputType = {
    id: bigint | null
    sort_order: number | null
  }

  export type FaqsMinAggregateOutputType = {
    id: bigint | null
    question: string | null
    answer: string | null
    category: string | null
    language: $Enums.faqs_language | null
    translation_group_id: string | null
    is_active: boolean | null
    sort_order: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type FaqsMaxAggregateOutputType = {
    id: bigint | null
    question: string | null
    answer: string | null
    category: string | null
    language: $Enums.faqs_language | null
    translation_group_id: string | null
    is_active: boolean | null
    sort_order: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type FaqsCountAggregateOutputType = {
    id: number
    question: number
    answer: number
    category: number
    language: number
    translation_group_id: number
    is_active: number
    sort_order: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type FaqsAvgAggregateInputType = {
    id?: true
    sort_order?: true
  }

  export type FaqsSumAggregateInputType = {
    id?: true
    sort_order?: true
  }

  export type FaqsMinAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    category?: true
    language?: true
    translation_group_id?: true
    is_active?: true
    sort_order?: true
    created_at?: true
    updated_at?: true
  }

  export type FaqsMaxAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    category?: true
    language?: true
    translation_group_id?: true
    is_active?: true
    sort_order?: true
    created_at?: true
    updated_at?: true
  }

  export type FaqsCountAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    category?: true
    language?: true
    translation_group_id?: true
    is_active?: true
    sort_order?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type FaqsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which faqs to aggregate.
     */
    where?: faqsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of faqs to fetch.
     */
    orderBy?: faqsOrderByWithRelationInput | faqsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: faqsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned faqs
    **/
    _count?: true | FaqsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FaqsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FaqsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FaqsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FaqsMaxAggregateInputType
  }

  export type GetFaqsAggregateType<T extends FaqsAggregateArgs> = {
        [P in keyof T & keyof AggregateFaqs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFaqs[P]>
      : GetScalarType<T[P], AggregateFaqs[P]>
  }




  export type faqsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: faqsWhereInput
    orderBy?: faqsOrderByWithAggregationInput | faqsOrderByWithAggregationInput[]
    by: FaqsScalarFieldEnum[] | FaqsScalarFieldEnum
    having?: faqsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FaqsCountAggregateInputType | true
    _avg?: FaqsAvgAggregateInputType
    _sum?: FaqsSumAggregateInputType
    _min?: FaqsMinAggregateInputType
    _max?: FaqsMaxAggregateInputType
  }

  export type FaqsGroupByOutputType = {
    id: bigint
    question: string
    answer: string
    category: string | null
    language: $Enums.faqs_language | null
    translation_group_id: string | null
    is_active: boolean | null
    sort_order: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: FaqsCountAggregateOutputType | null
    _avg: FaqsAvgAggregateOutputType | null
    _sum: FaqsSumAggregateOutputType | null
    _min: FaqsMinAggregateOutputType | null
    _max: FaqsMaxAggregateOutputType | null
  }

  type GetFaqsGroupByPayload<T extends faqsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FaqsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FaqsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FaqsGroupByOutputType[P]>
            : GetScalarType<T[P], FaqsGroupByOutputType[P]>
        }
      >
    >


  export type faqsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    question?: boolean
    answer?: boolean
    category?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_active?: boolean
    sort_order?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["faqs"]>



  export type faqsSelectScalar = {
    id?: boolean
    question?: boolean
    answer?: boolean
    category?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_active?: boolean
    sort_order?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type faqsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "question" | "answer" | "category" | "language" | "translation_group_id" | "is_active" | "sort_order" | "created_at" | "updated_at", ExtArgs["result"]["faqs"]>

  export type $faqsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "faqs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      question: string
      answer: string
      category: string | null
      language: $Enums.faqs_language | null
      translation_group_id: string | null
      is_active: boolean | null
      sort_order: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["faqs"]>
    composites: {}
  }

  type faqsGetPayload<S extends boolean | null | undefined | faqsDefaultArgs> = $Result.GetResult<Prisma.$faqsPayload, S>

  type faqsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<faqsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FaqsCountAggregateInputType | true
    }

  export interface faqsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['faqs'], meta: { name: 'faqs' } }
    /**
     * Find zero or one Faqs that matches the filter.
     * @param {faqsFindUniqueArgs} args - Arguments to find a Faqs
     * @example
     * // Get one Faqs
     * const faqs = await prisma.faqs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends faqsFindUniqueArgs>(args: SelectSubset<T, faqsFindUniqueArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Faqs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {faqsFindUniqueOrThrowArgs} args - Arguments to find a Faqs
     * @example
     * // Get one Faqs
     * const faqs = await prisma.faqs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends faqsFindUniqueOrThrowArgs>(args: SelectSubset<T, faqsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Faqs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {faqsFindFirstArgs} args - Arguments to find a Faqs
     * @example
     * // Get one Faqs
     * const faqs = await prisma.faqs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends faqsFindFirstArgs>(args?: SelectSubset<T, faqsFindFirstArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Faqs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {faqsFindFirstOrThrowArgs} args - Arguments to find a Faqs
     * @example
     * // Get one Faqs
     * const faqs = await prisma.faqs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends faqsFindFirstOrThrowArgs>(args?: SelectSubset<T, faqsFindFirstOrThrowArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Faqs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {faqsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Faqs
     * const faqs = await prisma.faqs.findMany()
     * 
     * // Get first 10 Faqs
     * const faqs = await prisma.faqs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const faqsWithIdOnly = await prisma.faqs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends faqsFindManyArgs>(args?: SelectSubset<T, faqsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Faqs.
     * @param {faqsCreateArgs} args - Arguments to create a Faqs.
     * @example
     * // Create one Faqs
     * const Faqs = await prisma.faqs.create({
     *   data: {
     *     // ... data to create a Faqs
     *   }
     * })
     * 
     */
    create<T extends faqsCreateArgs>(args: SelectSubset<T, faqsCreateArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Faqs.
     * @param {faqsCreateManyArgs} args - Arguments to create many Faqs.
     * @example
     * // Create many Faqs
     * const faqs = await prisma.faqs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends faqsCreateManyArgs>(args?: SelectSubset<T, faqsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Faqs.
     * @param {faqsDeleteArgs} args - Arguments to delete one Faqs.
     * @example
     * // Delete one Faqs
     * const Faqs = await prisma.faqs.delete({
     *   where: {
     *     // ... filter to delete one Faqs
     *   }
     * })
     * 
     */
    delete<T extends faqsDeleteArgs>(args: SelectSubset<T, faqsDeleteArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Faqs.
     * @param {faqsUpdateArgs} args - Arguments to update one Faqs.
     * @example
     * // Update one Faqs
     * const faqs = await prisma.faqs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends faqsUpdateArgs>(args: SelectSubset<T, faqsUpdateArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Faqs.
     * @param {faqsDeleteManyArgs} args - Arguments to filter Faqs to delete.
     * @example
     * // Delete a few Faqs
     * const { count } = await prisma.faqs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends faqsDeleteManyArgs>(args?: SelectSubset<T, faqsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {faqsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Faqs
     * const faqs = await prisma.faqs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends faqsUpdateManyArgs>(args: SelectSubset<T, faqsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Faqs.
     * @param {faqsUpsertArgs} args - Arguments to update or create a Faqs.
     * @example
     * // Update or create a Faqs
     * const faqs = await prisma.faqs.upsert({
     *   create: {
     *     // ... data to create a Faqs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Faqs we want to update
     *   }
     * })
     */
    upsert<T extends faqsUpsertArgs>(args: SelectSubset<T, faqsUpsertArgs<ExtArgs>>): Prisma__faqsClient<$Result.GetResult<Prisma.$faqsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {faqsCountArgs} args - Arguments to filter Faqs to count.
     * @example
     * // Count the number of Faqs
     * const count = await prisma.faqs.count({
     *   where: {
     *     // ... the filter for the Faqs we want to count
     *   }
     * })
    **/
    count<T extends faqsCountArgs>(
      args?: Subset<T, faqsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FaqsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FaqsAggregateArgs>(args: Subset<T, FaqsAggregateArgs>): Prisma.PrismaPromise<GetFaqsAggregateType<T>>

    /**
     * Group by Faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {faqsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends faqsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: faqsGroupByArgs['orderBy'] }
        : { orderBy?: faqsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, faqsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFaqsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the faqs model
   */
  readonly fields: faqsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for faqs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__faqsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the faqs model
   */
  interface faqsFieldRefs {
    readonly id: FieldRef<"faqs", 'BigInt'>
    readonly question: FieldRef<"faqs", 'String'>
    readonly answer: FieldRef<"faqs", 'String'>
    readonly category: FieldRef<"faqs", 'String'>
    readonly language: FieldRef<"faqs", 'faqs_language'>
    readonly translation_group_id: FieldRef<"faqs", 'String'>
    readonly is_active: FieldRef<"faqs", 'Boolean'>
    readonly sort_order: FieldRef<"faqs", 'Int'>
    readonly created_at: FieldRef<"faqs", 'DateTime'>
    readonly updated_at: FieldRef<"faqs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * faqs findUnique
   */
  export type faqsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * Filter, which faqs to fetch.
     */
    where: faqsWhereUniqueInput
  }

  /**
   * faqs findUniqueOrThrow
   */
  export type faqsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * Filter, which faqs to fetch.
     */
    where: faqsWhereUniqueInput
  }

  /**
   * faqs findFirst
   */
  export type faqsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * Filter, which faqs to fetch.
     */
    where?: faqsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of faqs to fetch.
     */
    orderBy?: faqsOrderByWithRelationInput | faqsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for faqs.
     */
    cursor?: faqsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of faqs.
     */
    distinct?: FaqsScalarFieldEnum | FaqsScalarFieldEnum[]
  }

  /**
   * faqs findFirstOrThrow
   */
  export type faqsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * Filter, which faqs to fetch.
     */
    where?: faqsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of faqs to fetch.
     */
    orderBy?: faqsOrderByWithRelationInput | faqsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for faqs.
     */
    cursor?: faqsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of faqs.
     */
    distinct?: FaqsScalarFieldEnum | FaqsScalarFieldEnum[]
  }

  /**
   * faqs findMany
   */
  export type faqsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * Filter, which faqs to fetch.
     */
    where?: faqsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of faqs to fetch.
     */
    orderBy?: faqsOrderByWithRelationInput | faqsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing faqs.
     */
    cursor?: faqsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` faqs.
     */
    skip?: number
    distinct?: FaqsScalarFieldEnum | FaqsScalarFieldEnum[]
  }

  /**
   * faqs create
   */
  export type faqsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * The data needed to create a faqs.
     */
    data: XOR<faqsCreateInput, faqsUncheckedCreateInput>
  }

  /**
   * faqs createMany
   */
  export type faqsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many faqs.
     */
    data: faqsCreateManyInput | faqsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * faqs update
   */
  export type faqsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * The data needed to update a faqs.
     */
    data: XOR<faqsUpdateInput, faqsUncheckedUpdateInput>
    /**
     * Choose, which faqs to update.
     */
    where: faqsWhereUniqueInput
  }

  /**
   * faqs updateMany
   */
  export type faqsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update faqs.
     */
    data: XOR<faqsUpdateManyMutationInput, faqsUncheckedUpdateManyInput>
    /**
     * Filter which faqs to update
     */
    where?: faqsWhereInput
    /**
     * Limit how many faqs to update.
     */
    limit?: number
  }

  /**
   * faqs upsert
   */
  export type faqsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * The filter to search for the faqs to update in case it exists.
     */
    where: faqsWhereUniqueInput
    /**
     * In case the faqs found by the `where` argument doesn't exist, create a new faqs with this data.
     */
    create: XOR<faqsCreateInput, faqsUncheckedCreateInput>
    /**
     * In case the faqs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<faqsUpdateInput, faqsUncheckedUpdateInput>
  }

  /**
   * faqs delete
   */
  export type faqsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
    /**
     * Filter which faqs to delete.
     */
    where: faqsWhereUniqueInput
  }

  /**
   * faqs deleteMany
   */
  export type faqsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which faqs to delete
     */
    where?: faqsWhereInput
    /**
     * Limit how many faqs to delete.
     */
    limit?: number
  }

  /**
   * faqs without action
   */
  export type faqsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the faqs
     */
    select?: faqsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the faqs
     */
    omit?: faqsOmit<ExtArgs> | null
  }


  /**
   * Model media
   */

  export type AggregateMedia = {
    _count: MediaCountAggregateOutputType | null
    _avg: MediaAvgAggregateOutputType | null
    _sum: MediaSumAggregateOutputType | null
    _min: MediaMinAggregateOutputType | null
    _max: MediaMaxAggregateOutputType | null
  }

  export type MediaAvgAggregateOutputType = {
    id: number | null
    related_event_id: number | null
    related_program_id: number | null
    uploaded_by: number | null
  }

  export type MediaSumAggregateOutputType = {
    id: bigint | null
    related_event_id: bigint | null
    related_program_id: bigint | null
    uploaded_by: bigint | null
  }

  export type MediaMinAggregateOutputType = {
    id: bigint | null
    media_type: $Enums.media_media_type | null
    title: string | null
    description: string | null
    file_url: string | null
    related_event_id: bigint | null
    related_program_id: bigint | null
    uploaded_by: bigint | null
    language: $Enums.media_language | null
    translation_group_id: string | null
    uploaded_at: Date | null
  }

  export type MediaMaxAggregateOutputType = {
    id: bigint | null
    media_type: $Enums.media_media_type | null
    title: string | null
    description: string | null
    file_url: string | null
    related_event_id: bigint | null
    related_program_id: bigint | null
    uploaded_by: bigint | null
    language: $Enums.media_language | null
    translation_group_id: string | null
    uploaded_at: Date | null
  }

  export type MediaCountAggregateOutputType = {
    id: number
    media_type: number
    title: number
    description: number
    file_url: number
    related_event_id: number
    related_program_id: number
    uploaded_by: number
    language: number
    translation_group_id: number
    uploaded_at: number
    _all: number
  }


  export type MediaAvgAggregateInputType = {
    id?: true
    related_event_id?: true
    related_program_id?: true
    uploaded_by?: true
  }

  export type MediaSumAggregateInputType = {
    id?: true
    related_event_id?: true
    related_program_id?: true
    uploaded_by?: true
  }

  export type MediaMinAggregateInputType = {
    id?: true
    media_type?: true
    title?: true
    description?: true
    file_url?: true
    related_event_id?: true
    related_program_id?: true
    uploaded_by?: true
    language?: true
    translation_group_id?: true
    uploaded_at?: true
  }

  export type MediaMaxAggregateInputType = {
    id?: true
    media_type?: true
    title?: true
    description?: true
    file_url?: true
    related_event_id?: true
    related_program_id?: true
    uploaded_by?: true
    language?: true
    translation_group_id?: true
    uploaded_at?: true
  }

  export type MediaCountAggregateInputType = {
    id?: true
    media_type?: true
    title?: true
    description?: true
    file_url?: true
    related_event_id?: true
    related_program_id?: true
    uploaded_by?: true
    language?: true
    translation_group_id?: true
    uploaded_at?: true
    _all?: true
  }

  export type MediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which media to aggregate.
     */
    where?: mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of media to fetch.
     */
    orderBy?: mediaOrderByWithRelationInput | mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` media.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned media
    **/
    _count?: true | MediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MediaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MediaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MediaMaxAggregateInputType
  }

  export type GetMediaAggregateType<T extends MediaAggregateArgs> = {
        [P in keyof T & keyof AggregateMedia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedia[P]>
      : GetScalarType<T[P], AggregateMedia[P]>
  }




  export type mediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mediaWhereInput
    orderBy?: mediaOrderByWithAggregationInput | mediaOrderByWithAggregationInput[]
    by: MediaScalarFieldEnum[] | MediaScalarFieldEnum
    having?: mediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MediaCountAggregateInputType | true
    _avg?: MediaAvgAggregateInputType
    _sum?: MediaSumAggregateInputType
    _min?: MediaMinAggregateInputType
    _max?: MediaMaxAggregateInputType
  }

  export type MediaGroupByOutputType = {
    id: bigint
    media_type: $Enums.media_media_type
    title: string | null
    description: string | null
    file_url: string
    related_event_id: bigint | null
    related_program_id: bigint | null
    uploaded_by: bigint | null
    language: $Enums.media_language | null
    translation_group_id: string | null
    uploaded_at: Date | null
    _count: MediaCountAggregateOutputType | null
    _avg: MediaAvgAggregateOutputType | null
    _sum: MediaSumAggregateOutputType | null
    _min: MediaMinAggregateOutputType | null
    _max: MediaMaxAggregateOutputType | null
  }

  type GetMediaGroupByPayload<T extends mediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MediaGroupByOutputType[P]>
            : GetScalarType<T[P], MediaGroupByOutputType[P]>
        }
      >
    >


  export type mediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    media_type?: boolean
    title?: boolean
    description?: boolean
    file_url?: boolean
    related_event_id?: boolean
    related_program_id?: boolean
    uploaded_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    uploaded_at?: boolean
    events?: boolean | media$eventsArgs<ExtArgs>
    programs?: boolean | media$programsArgs<ExtArgs>
    users?: boolean | media$usersArgs<ExtArgs>
  }, ExtArgs["result"]["media"]>



  export type mediaSelectScalar = {
    id?: boolean
    media_type?: boolean
    title?: boolean
    description?: boolean
    file_url?: boolean
    related_event_id?: boolean
    related_program_id?: boolean
    uploaded_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    uploaded_at?: boolean
  }

  export type mediaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "media_type" | "title" | "description" | "file_url" | "related_event_id" | "related_program_id" | "uploaded_by" | "language" | "translation_group_id" | "uploaded_at", ExtArgs["result"]["media"]>
  export type mediaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | media$eventsArgs<ExtArgs>
    programs?: boolean | media$programsArgs<ExtArgs>
    users?: boolean | media$usersArgs<ExtArgs>
  }

  export type $mediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "media"
    objects: {
      events: Prisma.$eventsPayload<ExtArgs> | null
      programs: Prisma.$programsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      media_type: $Enums.media_media_type
      title: string | null
      description: string | null
      file_url: string
      related_event_id: bigint | null
      related_program_id: bigint | null
      uploaded_by: bigint | null
      language: $Enums.media_language | null
      translation_group_id: string | null
      uploaded_at: Date | null
    }, ExtArgs["result"]["media"]>
    composites: {}
  }

  type mediaGetPayload<S extends boolean | null | undefined | mediaDefaultArgs> = $Result.GetResult<Prisma.$mediaPayload, S>

  type mediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mediaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MediaCountAggregateInputType | true
    }

  export interface mediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['media'], meta: { name: 'media' } }
    /**
     * Find zero or one Media that matches the filter.
     * @param {mediaFindUniqueArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mediaFindUniqueArgs>(args: SelectSubset<T, mediaFindUniqueArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Media that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mediaFindUniqueOrThrowArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mediaFindUniqueOrThrowArgs>(args: SelectSubset<T, mediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediaFindFirstArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mediaFindFirstArgs>(args?: SelectSubset<T, mediaFindFirstArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Media that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediaFindFirstOrThrowArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mediaFindFirstOrThrowArgs>(args?: SelectSubset<T, mediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Media
     * const media = await prisma.media.findMany()
     * 
     * // Get first 10 Media
     * const media = await prisma.media.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mediaWithIdOnly = await prisma.media.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends mediaFindManyArgs>(args?: SelectSubset<T, mediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Media.
     * @param {mediaCreateArgs} args - Arguments to create a Media.
     * @example
     * // Create one Media
     * const Media = await prisma.media.create({
     *   data: {
     *     // ... data to create a Media
     *   }
     * })
     * 
     */
    create<T extends mediaCreateArgs>(args: SelectSubset<T, mediaCreateArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Media.
     * @param {mediaCreateManyArgs} args - Arguments to create many Media.
     * @example
     * // Create many Media
     * const media = await prisma.media.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mediaCreateManyArgs>(args?: SelectSubset<T, mediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Media.
     * @param {mediaDeleteArgs} args - Arguments to delete one Media.
     * @example
     * // Delete one Media
     * const Media = await prisma.media.delete({
     *   where: {
     *     // ... filter to delete one Media
     *   }
     * })
     * 
     */
    delete<T extends mediaDeleteArgs>(args: SelectSubset<T, mediaDeleteArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Media.
     * @param {mediaUpdateArgs} args - Arguments to update one Media.
     * @example
     * // Update one Media
     * const media = await prisma.media.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mediaUpdateArgs>(args: SelectSubset<T, mediaUpdateArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Media.
     * @param {mediaDeleteManyArgs} args - Arguments to filter Media to delete.
     * @example
     * // Delete a few Media
     * const { count } = await prisma.media.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mediaDeleteManyArgs>(args?: SelectSubset<T, mediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Media
     * const media = await prisma.media.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mediaUpdateManyArgs>(args: SelectSubset<T, mediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Media.
     * @param {mediaUpsertArgs} args - Arguments to update or create a Media.
     * @example
     * // Update or create a Media
     * const media = await prisma.media.upsert({
     *   create: {
     *     // ... data to create a Media
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Media we want to update
     *   }
     * })
     */
    upsert<T extends mediaUpsertArgs>(args: SelectSubset<T, mediaUpsertArgs<ExtArgs>>): Prisma__mediaClient<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediaCountArgs} args - Arguments to filter Media to count.
     * @example
     * // Count the number of Media
     * const count = await prisma.media.count({
     *   where: {
     *     // ... the filter for the Media we want to count
     *   }
     * })
    **/
    count<T extends mediaCountArgs>(
      args?: Subset<T, mediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MediaAggregateArgs>(args: Subset<T, MediaAggregateArgs>): Prisma.PrismaPromise<GetMediaAggregateType<T>>

    /**
     * Group by Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mediaGroupByArgs['orderBy'] }
        : { orderBy?: mediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the media model
   */
  readonly fields: mediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for media.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    events<T extends media$eventsArgs<ExtArgs> = {}>(args?: Subset<T, media$eventsArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    programs<T extends media$programsArgs<ExtArgs> = {}>(args?: Subset<T, media$programsArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends media$usersArgs<ExtArgs> = {}>(args?: Subset<T, media$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the media model
   */
  interface mediaFieldRefs {
    readonly id: FieldRef<"media", 'BigInt'>
    readonly media_type: FieldRef<"media", 'media_media_type'>
    readonly title: FieldRef<"media", 'String'>
    readonly description: FieldRef<"media", 'String'>
    readonly file_url: FieldRef<"media", 'String'>
    readonly related_event_id: FieldRef<"media", 'BigInt'>
    readonly related_program_id: FieldRef<"media", 'BigInt'>
    readonly uploaded_by: FieldRef<"media", 'BigInt'>
    readonly language: FieldRef<"media", 'media_language'>
    readonly translation_group_id: FieldRef<"media", 'String'>
    readonly uploaded_at: FieldRef<"media", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * media findUnique
   */
  export type mediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * Filter, which media to fetch.
     */
    where: mediaWhereUniqueInput
  }

  /**
   * media findUniqueOrThrow
   */
  export type mediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * Filter, which media to fetch.
     */
    where: mediaWhereUniqueInput
  }

  /**
   * media findFirst
   */
  export type mediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * Filter, which media to fetch.
     */
    where?: mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of media to fetch.
     */
    orderBy?: mediaOrderByWithRelationInput | mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for media.
     */
    cursor?: mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` media.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of media.
     */
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * media findFirstOrThrow
   */
  export type mediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * Filter, which media to fetch.
     */
    where?: mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of media to fetch.
     */
    orderBy?: mediaOrderByWithRelationInput | mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for media.
     */
    cursor?: mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` media.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of media.
     */
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * media findMany
   */
  export type mediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * Filter, which media to fetch.
     */
    where?: mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of media to fetch.
     */
    orderBy?: mediaOrderByWithRelationInput | mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing media.
     */
    cursor?: mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` media.
     */
    skip?: number
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * media create
   */
  export type mediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * The data needed to create a media.
     */
    data: XOR<mediaCreateInput, mediaUncheckedCreateInput>
  }

  /**
   * media createMany
   */
  export type mediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many media.
     */
    data: mediaCreateManyInput | mediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * media update
   */
  export type mediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * The data needed to update a media.
     */
    data: XOR<mediaUpdateInput, mediaUncheckedUpdateInput>
    /**
     * Choose, which media to update.
     */
    where: mediaWhereUniqueInput
  }

  /**
   * media updateMany
   */
  export type mediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update media.
     */
    data: XOR<mediaUpdateManyMutationInput, mediaUncheckedUpdateManyInput>
    /**
     * Filter which media to update
     */
    where?: mediaWhereInput
    /**
     * Limit how many media to update.
     */
    limit?: number
  }

  /**
   * media upsert
   */
  export type mediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * The filter to search for the media to update in case it exists.
     */
    where: mediaWhereUniqueInput
    /**
     * In case the media found by the `where` argument doesn't exist, create a new media with this data.
     */
    create: XOR<mediaCreateInput, mediaUncheckedCreateInput>
    /**
     * In case the media was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mediaUpdateInput, mediaUncheckedUpdateInput>
  }

  /**
   * media delete
   */
  export type mediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    /**
     * Filter which media to delete.
     */
    where: mediaWhereUniqueInput
  }

  /**
   * media deleteMany
   */
  export type mediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which media to delete
     */
    where?: mediaWhereInput
    /**
     * Limit how many media to delete.
     */
    limit?: number
  }

  /**
   * media.events
   */
  export type media$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    where?: eventsWhereInput
  }

  /**
   * media.programs
   */
  export type media$programsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    where?: programsWhereInput
  }

  /**
   * media.users
   */
  export type media$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * media without action
   */
  export type mediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
  }


  /**
   * Model newsletter_subscribers
   */

  export type AggregateNewsletter_subscribers = {
    _count: Newsletter_subscribersCountAggregateOutputType | null
    _avg: Newsletter_subscribersAvgAggregateOutputType | null
    _sum: Newsletter_subscribersSumAggregateOutputType | null
    _min: Newsletter_subscribersMinAggregateOutputType | null
    _max: Newsletter_subscribersMaxAggregateOutputType | null
  }

  export type Newsletter_subscribersAvgAggregateOutputType = {
    id: number | null
  }

  export type Newsletter_subscribersSumAggregateOutputType = {
    id: bigint | null
  }

  export type Newsletter_subscribersMinAggregateOutputType = {
    id: bigint | null
    email: string | null
    first_name: string | null
    last_name: string | null
    is_active: boolean | null
    language_preference: $Enums.newsletter_subscribers_language_preference | null
    subscribed_at: Date | null
    unsubscribed_at: Date | null
  }

  export type Newsletter_subscribersMaxAggregateOutputType = {
    id: bigint | null
    email: string | null
    first_name: string | null
    last_name: string | null
    is_active: boolean | null
    language_preference: $Enums.newsletter_subscribers_language_preference | null
    subscribed_at: Date | null
    unsubscribed_at: Date | null
  }

  export type Newsletter_subscribersCountAggregateOutputType = {
    id: number
    email: number
    first_name: number
    last_name: number
    is_active: number
    language_preference: number
    subscribed_at: number
    unsubscribed_at: number
    _all: number
  }


  export type Newsletter_subscribersAvgAggregateInputType = {
    id?: true
  }

  export type Newsletter_subscribersSumAggregateInputType = {
    id?: true
  }

  export type Newsletter_subscribersMinAggregateInputType = {
    id?: true
    email?: true
    first_name?: true
    last_name?: true
    is_active?: true
    language_preference?: true
    subscribed_at?: true
    unsubscribed_at?: true
  }

  export type Newsletter_subscribersMaxAggregateInputType = {
    id?: true
    email?: true
    first_name?: true
    last_name?: true
    is_active?: true
    language_preference?: true
    subscribed_at?: true
    unsubscribed_at?: true
  }

  export type Newsletter_subscribersCountAggregateInputType = {
    id?: true
    email?: true
    first_name?: true
    last_name?: true
    is_active?: true
    language_preference?: true
    subscribed_at?: true
    unsubscribed_at?: true
    _all?: true
  }

  export type Newsletter_subscribersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which newsletter_subscribers to aggregate.
     */
    where?: newsletter_subscribersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletter_subscribers to fetch.
     */
    orderBy?: newsletter_subscribersOrderByWithRelationInput | newsletter_subscribersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: newsletter_subscribersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletter_subscribers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletter_subscribers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned newsletter_subscribers
    **/
    _count?: true | Newsletter_subscribersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Newsletter_subscribersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Newsletter_subscribersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Newsletter_subscribersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Newsletter_subscribersMaxAggregateInputType
  }

  export type GetNewsletter_subscribersAggregateType<T extends Newsletter_subscribersAggregateArgs> = {
        [P in keyof T & keyof AggregateNewsletter_subscribers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNewsletter_subscribers[P]>
      : GetScalarType<T[P], AggregateNewsletter_subscribers[P]>
  }




  export type newsletter_subscribersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: newsletter_subscribersWhereInput
    orderBy?: newsletter_subscribersOrderByWithAggregationInput | newsletter_subscribersOrderByWithAggregationInput[]
    by: Newsletter_subscribersScalarFieldEnum[] | Newsletter_subscribersScalarFieldEnum
    having?: newsletter_subscribersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Newsletter_subscribersCountAggregateInputType | true
    _avg?: Newsletter_subscribersAvgAggregateInputType
    _sum?: Newsletter_subscribersSumAggregateInputType
    _min?: Newsletter_subscribersMinAggregateInputType
    _max?: Newsletter_subscribersMaxAggregateInputType
  }

  export type Newsletter_subscribersGroupByOutputType = {
    id: bigint
    email: string
    first_name: string | null
    last_name: string | null
    is_active: boolean | null
    language_preference: $Enums.newsletter_subscribers_language_preference | null
    subscribed_at: Date | null
    unsubscribed_at: Date | null
    _count: Newsletter_subscribersCountAggregateOutputType | null
    _avg: Newsletter_subscribersAvgAggregateOutputType | null
    _sum: Newsletter_subscribersSumAggregateOutputType | null
    _min: Newsletter_subscribersMinAggregateOutputType | null
    _max: Newsletter_subscribersMaxAggregateOutputType | null
  }

  type GetNewsletter_subscribersGroupByPayload<T extends newsletter_subscribersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Newsletter_subscribersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Newsletter_subscribersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Newsletter_subscribersGroupByOutputType[P]>
            : GetScalarType<T[P], Newsletter_subscribersGroupByOutputType[P]>
        }
      >
    >


  export type newsletter_subscribersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    first_name?: boolean
    last_name?: boolean
    is_active?: boolean
    language_preference?: boolean
    subscribed_at?: boolean
    unsubscribed_at?: boolean
  }, ExtArgs["result"]["newsletter_subscribers"]>



  export type newsletter_subscribersSelectScalar = {
    id?: boolean
    email?: boolean
    first_name?: boolean
    last_name?: boolean
    is_active?: boolean
    language_preference?: boolean
    subscribed_at?: boolean
    unsubscribed_at?: boolean
  }

  export type newsletter_subscribersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "first_name" | "last_name" | "is_active" | "language_preference" | "subscribed_at" | "unsubscribed_at", ExtArgs["result"]["newsletter_subscribers"]>

  export type $newsletter_subscribersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "newsletter_subscribers"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      email: string
      first_name: string | null
      last_name: string | null
      is_active: boolean | null
      language_preference: $Enums.newsletter_subscribers_language_preference | null
      subscribed_at: Date | null
      unsubscribed_at: Date | null
    }, ExtArgs["result"]["newsletter_subscribers"]>
    composites: {}
  }

  type newsletter_subscribersGetPayload<S extends boolean | null | undefined | newsletter_subscribersDefaultArgs> = $Result.GetResult<Prisma.$newsletter_subscribersPayload, S>

  type newsletter_subscribersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<newsletter_subscribersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Newsletter_subscribersCountAggregateInputType | true
    }

  export interface newsletter_subscribersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['newsletter_subscribers'], meta: { name: 'newsletter_subscribers' } }
    /**
     * Find zero or one Newsletter_subscribers that matches the filter.
     * @param {newsletter_subscribersFindUniqueArgs} args - Arguments to find a Newsletter_subscribers
     * @example
     * // Get one Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends newsletter_subscribersFindUniqueArgs>(args: SelectSubset<T, newsletter_subscribersFindUniqueArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Newsletter_subscribers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {newsletter_subscribersFindUniqueOrThrowArgs} args - Arguments to find a Newsletter_subscribers
     * @example
     * // Get one Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends newsletter_subscribersFindUniqueOrThrowArgs>(args: SelectSubset<T, newsletter_subscribersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Newsletter_subscribers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletter_subscribersFindFirstArgs} args - Arguments to find a Newsletter_subscribers
     * @example
     * // Get one Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends newsletter_subscribersFindFirstArgs>(args?: SelectSubset<T, newsletter_subscribersFindFirstArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Newsletter_subscribers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletter_subscribersFindFirstOrThrowArgs} args - Arguments to find a Newsletter_subscribers
     * @example
     * // Get one Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends newsletter_subscribersFindFirstOrThrowArgs>(args?: SelectSubset<T, newsletter_subscribersFindFirstOrThrowArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Newsletter_subscribers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletter_subscribersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.findMany()
     * 
     * // Get first 10 Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsletter_subscribersWithIdOnly = await prisma.newsletter_subscribers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends newsletter_subscribersFindManyArgs>(args?: SelectSubset<T, newsletter_subscribersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Newsletter_subscribers.
     * @param {newsletter_subscribersCreateArgs} args - Arguments to create a Newsletter_subscribers.
     * @example
     * // Create one Newsletter_subscribers
     * const Newsletter_subscribers = await prisma.newsletter_subscribers.create({
     *   data: {
     *     // ... data to create a Newsletter_subscribers
     *   }
     * })
     * 
     */
    create<T extends newsletter_subscribersCreateArgs>(args: SelectSubset<T, newsletter_subscribersCreateArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Newsletter_subscribers.
     * @param {newsletter_subscribersCreateManyArgs} args - Arguments to create many Newsletter_subscribers.
     * @example
     * // Create many Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends newsletter_subscribersCreateManyArgs>(args?: SelectSubset<T, newsletter_subscribersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Newsletter_subscribers.
     * @param {newsletter_subscribersDeleteArgs} args - Arguments to delete one Newsletter_subscribers.
     * @example
     * // Delete one Newsletter_subscribers
     * const Newsletter_subscribers = await prisma.newsletter_subscribers.delete({
     *   where: {
     *     // ... filter to delete one Newsletter_subscribers
     *   }
     * })
     * 
     */
    delete<T extends newsletter_subscribersDeleteArgs>(args: SelectSubset<T, newsletter_subscribersDeleteArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Newsletter_subscribers.
     * @param {newsletter_subscribersUpdateArgs} args - Arguments to update one Newsletter_subscribers.
     * @example
     * // Update one Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends newsletter_subscribersUpdateArgs>(args: SelectSubset<T, newsletter_subscribersUpdateArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Newsletter_subscribers.
     * @param {newsletter_subscribersDeleteManyArgs} args - Arguments to filter Newsletter_subscribers to delete.
     * @example
     * // Delete a few Newsletter_subscribers
     * const { count } = await prisma.newsletter_subscribers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends newsletter_subscribersDeleteManyArgs>(args?: SelectSubset<T, newsletter_subscribersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Newsletter_subscribers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletter_subscribersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends newsletter_subscribersUpdateManyArgs>(args: SelectSubset<T, newsletter_subscribersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Newsletter_subscribers.
     * @param {newsletter_subscribersUpsertArgs} args - Arguments to update or create a Newsletter_subscribers.
     * @example
     * // Update or create a Newsletter_subscribers
     * const newsletter_subscribers = await prisma.newsletter_subscribers.upsert({
     *   create: {
     *     // ... data to create a Newsletter_subscribers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Newsletter_subscribers we want to update
     *   }
     * })
     */
    upsert<T extends newsletter_subscribersUpsertArgs>(args: SelectSubset<T, newsletter_subscribersUpsertArgs<ExtArgs>>): Prisma__newsletter_subscribersClient<$Result.GetResult<Prisma.$newsletter_subscribersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Newsletter_subscribers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletter_subscribersCountArgs} args - Arguments to filter Newsletter_subscribers to count.
     * @example
     * // Count the number of Newsletter_subscribers
     * const count = await prisma.newsletter_subscribers.count({
     *   where: {
     *     // ... the filter for the Newsletter_subscribers we want to count
     *   }
     * })
    **/
    count<T extends newsletter_subscribersCountArgs>(
      args?: Subset<T, newsletter_subscribersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Newsletter_subscribersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Newsletter_subscribers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Newsletter_subscribersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Newsletter_subscribersAggregateArgs>(args: Subset<T, Newsletter_subscribersAggregateArgs>): Prisma.PrismaPromise<GetNewsletter_subscribersAggregateType<T>>

    /**
     * Group by Newsletter_subscribers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {newsletter_subscribersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends newsletter_subscribersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: newsletter_subscribersGroupByArgs['orderBy'] }
        : { orderBy?: newsletter_subscribersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, newsletter_subscribersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsletter_subscribersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the newsletter_subscribers model
   */
  readonly fields: newsletter_subscribersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for newsletter_subscribers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__newsletter_subscribersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the newsletter_subscribers model
   */
  interface newsletter_subscribersFieldRefs {
    readonly id: FieldRef<"newsletter_subscribers", 'BigInt'>
    readonly email: FieldRef<"newsletter_subscribers", 'String'>
    readonly first_name: FieldRef<"newsletter_subscribers", 'String'>
    readonly last_name: FieldRef<"newsletter_subscribers", 'String'>
    readonly is_active: FieldRef<"newsletter_subscribers", 'Boolean'>
    readonly language_preference: FieldRef<"newsletter_subscribers", 'newsletter_subscribers_language_preference'>
    readonly subscribed_at: FieldRef<"newsletter_subscribers", 'DateTime'>
    readonly unsubscribed_at: FieldRef<"newsletter_subscribers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * newsletter_subscribers findUnique
   */
  export type newsletter_subscribersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * Filter, which newsletter_subscribers to fetch.
     */
    where: newsletter_subscribersWhereUniqueInput
  }

  /**
   * newsletter_subscribers findUniqueOrThrow
   */
  export type newsletter_subscribersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * Filter, which newsletter_subscribers to fetch.
     */
    where: newsletter_subscribersWhereUniqueInput
  }

  /**
   * newsletter_subscribers findFirst
   */
  export type newsletter_subscribersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * Filter, which newsletter_subscribers to fetch.
     */
    where?: newsletter_subscribersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletter_subscribers to fetch.
     */
    orderBy?: newsletter_subscribersOrderByWithRelationInput | newsletter_subscribersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for newsletter_subscribers.
     */
    cursor?: newsletter_subscribersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletter_subscribers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletter_subscribers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of newsletter_subscribers.
     */
    distinct?: Newsletter_subscribersScalarFieldEnum | Newsletter_subscribersScalarFieldEnum[]
  }

  /**
   * newsletter_subscribers findFirstOrThrow
   */
  export type newsletter_subscribersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * Filter, which newsletter_subscribers to fetch.
     */
    where?: newsletter_subscribersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletter_subscribers to fetch.
     */
    orderBy?: newsletter_subscribersOrderByWithRelationInput | newsletter_subscribersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for newsletter_subscribers.
     */
    cursor?: newsletter_subscribersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletter_subscribers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletter_subscribers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of newsletter_subscribers.
     */
    distinct?: Newsletter_subscribersScalarFieldEnum | Newsletter_subscribersScalarFieldEnum[]
  }

  /**
   * newsletter_subscribers findMany
   */
  export type newsletter_subscribersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * Filter, which newsletter_subscribers to fetch.
     */
    where?: newsletter_subscribersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of newsletter_subscribers to fetch.
     */
    orderBy?: newsletter_subscribersOrderByWithRelationInput | newsletter_subscribersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing newsletter_subscribers.
     */
    cursor?: newsletter_subscribersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` newsletter_subscribers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` newsletter_subscribers.
     */
    skip?: number
    distinct?: Newsletter_subscribersScalarFieldEnum | Newsletter_subscribersScalarFieldEnum[]
  }

  /**
   * newsletter_subscribers create
   */
  export type newsletter_subscribersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * The data needed to create a newsletter_subscribers.
     */
    data: XOR<newsletter_subscribersCreateInput, newsletter_subscribersUncheckedCreateInput>
  }

  /**
   * newsletter_subscribers createMany
   */
  export type newsletter_subscribersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many newsletter_subscribers.
     */
    data: newsletter_subscribersCreateManyInput | newsletter_subscribersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * newsletter_subscribers update
   */
  export type newsletter_subscribersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * The data needed to update a newsletter_subscribers.
     */
    data: XOR<newsletter_subscribersUpdateInput, newsletter_subscribersUncheckedUpdateInput>
    /**
     * Choose, which newsletter_subscribers to update.
     */
    where: newsletter_subscribersWhereUniqueInput
  }

  /**
   * newsletter_subscribers updateMany
   */
  export type newsletter_subscribersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update newsletter_subscribers.
     */
    data: XOR<newsletter_subscribersUpdateManyMutationInput, newsletter_subscribersUncheckedUpdateManyInput>
    /**
     * Filter which newsletter_subscribers to update
     */
    where?: newsletter_subscribersWhereInput
    /**
     * Limit how many newsletter_subscribers to update.
     */
    limit?: number
  }

  /**
   * newsletter_subscribers upsert
   */
  export type newsletter_subscribersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * The filter to search for the newsletter_subscribers to update in case it exists.
     */
    where: newsletter_subscribersWhereUniqueInput
    /**
     * In case the newsletter_subscribers found by the `where` argument doesn't exist, create a new newsletter_subscribers with this data.
     */
    create: XOR<newsletter_subscribersCreateInput, newsletter_subscribersUncheckedCreateInput>
    /**
     * In case the newsletter_subscribers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<newsletter_subscribersUpdateInput, newsletter_subscribersUncheckedUpdateInput>
  }

  /**
   * newsletter_subscribers delete
   */
  export type newsletter_subscribersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
    /**
     * Filter which newsletter_subscribers to delete.
     */
    where: newsletter_subscribersWhereUniqueInput
  }

  /**
   * newsletter_subscribers deleteMany
   */
  export type newsletter_subscribersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which newsletter_subscribers to delete
     */
    where?: newsletter_subscribersWhereInput
    /**
     * Limit how many newsletter_subscribers to delete.
     */
    limit?: number
  }

  /**
   * newsletter_subscribers without action
   */
  export type newsletter_subscribersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the newsletter_subscribers
     */
    select?: newsletter_subscribersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the newsletter_subscribers
     */
    omit?: newsletter_subscribersOmit<ExtArgs> | null
  }


  /**
   * Model partners
   */

  export type AggregatePartners = {
    _count: PartnersCountAggregateOutputType | null
    _avg: PartnersAvgAggregateOutputType | null
    _sum: PartnersSumAggregateOutputType | null
    _min: PartnersMinAggregateOutputType | null
    _max: PartnersMaxAggregateOutputType | null
  }

  export type PartnersAvgAggregateOutputType = {
    id: number | null
  }

  export type PartnersSumAggregateOutputType = {
    id: bigint | null
  }

  export type PartnersMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    logo_url: string | null
    type: $Enums.partners_type | null
    website: string | null
    contact_email: string | null
    quote: string | null
    language: $Enums.partners_language | null
    translation_group_id: string | null
    is_active: boolean | null
    partnership_start_date: Date | null
    partnership_end_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PartnersMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    logo_url: string | null
    type: $Enums.partners_type | null
    website: string | null
    contact_email: string | null
    quote: string | null
    language: $Enums.partners_language | null
    translation_group_id: string | null
    is_active: boolean | null
    partnership_start_date: Date | null
    partnership_end_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PartnersCountAggregateOutputType = {
    id: number
    name: number
    logo_url: number
    type: number
    website: number
    contact_email: number
    quote: number
    language: number
    translation_group_id: number
    is_active: number
    partnership_start_date: number
    partnership_end_date: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PartnersAvgAggregateInputType = {
    id?: true
  }

  export type PartnersSumAggregateInputType = {
    id?: true
  }

  export type PartnersMinAggregateInputType = {
    id?: true
    name?: true
    logo_url?: true
    type?: true
    website?: true
    contact_email?: true
    quote?: true
    language?: true
    translation_group_id?: true
    is_active?: true
    partnership_start_date?: true
    partnership_end_date?: true
    created_at?: true
    updated_at?: true
  }

  export type PartnersMaxAggregateInputType = {
    id?: true
    name?: true
    logo_url?: true
    type?: true
    website?: true
    contact_email?: true
    quote?: true
    language?: true
    translation_group_id?: true
    is_active?: true
    partnership_start_date?: true
    partnership_end_date?: true
    created_at?: true
    updated_at?: true
  }

  export type PartnersCountAggregateInputType = {
    id?: true
    name?: true
    logo_url?: true
    type?: true
    website?: true
    contact_email?: true
    quote?: true
    language?: true
    translation_group_id?: true
    is_active?: true
    partnership_start_date?: true
    partnership_end_date?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PartnersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which partners to aggregate.
     */
    where?: partnersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partners to fetch.
     */
    orderBy?: partnersOrderByWithRelationInput | partnersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: partnersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned partners
    **/
    _count?: true | PartnersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PartnersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PartnersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PartnersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PartnersMaxAggregateInputType
  }

  export type GetPartnersAggregateType<T extends PartnersAggregateArgs> = {
        [P in keyof T & keyof AggregatePartners]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePartners[P]>
      : GetScalarType<T[P], AggregatePartners[P]>
  }




  export type partnersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: partnersWhereInput
    orderBy?: partnersOrderByWithAggregationInput | partnersOrderByWithAggregationInput[]
    by: PartnersScalarFieldEnum[] | PartnersScalarFieldEnum
    having?: partnersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PartnersCountAggregateInputType | true
    _avg?: PartnersAvgAggregateInputType
    _sum?: PartnersSumAggregateInputType
    _min?: PartnersMinAggregateInputType
    _max?: PartnersMaxAggregateInputType
  }

  export type PartnersGroupByOutputType = {
    id: bigint
    name: string
    logo_url: string | null
    type: $Enums.partners_type
    website: string | null
    contact_email: string | null
    quote: string | null
    language: $Enums.partners_language | null
    translation_group_id: string | null
    is_active: boolean | null
    partnership_start_date: Date | null
    partnership_end_date: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: PartnersCountAggregateOutputType | null
    _avg: PartnersAvgAggregateOutputType | null
    _sum: PartnersSumAggregateOutputType | null
    _min: PartnersMinAggregateOutputType | null
    _max: PartnersMaxAggregateOutputType | null
  }

  type GetPartnersGroupByPayload<T extends partnersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PartnersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PartnersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PartnersGroupByOutputType[P]>
            : GetScalarType<T[P], PartnersGroupByOutputType[P]>
        }
      >
    >


  export type partnersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo_url?: boolean
    type?: boolean
    website?: boolean
    contact_email?: boolean
    quote?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_active?: boolean
    partnership_start_date?: boolean
    partnership_end_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["partners"]>



  export type partnersSelectScalar = {
    id?: boolean
    name?: boolean
    logo_url?: boolean
    type?: boolean
    website?: boolean
    contact_email?: boolean
    quote?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_active?: boolean
    partnership_start_date?: boolean
    partnership_end_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type partnersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "logo_url" | "type" | "website" | "contact_email" | "quote" | "language" | "translation_group_id" | "is_active" | "partnership_start_date" | "partnership_end_date" | "created_at" | "updated_at", ExtArgs["result"]["partners"]>

  export type $partnersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "partners"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      logo_url: string | null
      type: $Enums.partners_type
      website: string | null
      contact_email: string | null
      quote: string | null
      language: $Enums.partners_language | null
      translation_group_id: string | null
      is_active: boolean | null
      partnership_start_date: Date | null
      partnership_end_date: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["partners"]>
    composites: {}
  }

  type partnersGetPayload<S extends boolean | null | undefined | partnersDefaultArgs> = $Result.GetResult<Prisma.$partnersPayload, S>

  type partnersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<partnersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PartnersCountAggregateInputType | true
    }

  export interface partnersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['partners'], meta: { name: 'partners' } }
    /**
     * Find zero or one Partners that matches the filter.
     * @param {partnersFindUniqueArgs} args - Arguments to find a Partners
     * @example
     * // Get one Partners
     * const partners = await prisma.partners.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends partnersFindUniqueArgs>(args: SelectSubset<T, partnersFindUniqueArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Partners that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {partnersFindUniqueOrThrowArgs} args - Arguments to find a Partners
     * @example
     * // Get one Partners
     * const partners = await prisma.partners.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends partnersFindUniqueOrThrowArgs>(args: SelectSubset<T, partnersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Partners that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partnersFindFirstArgs} args - Arguments to find a Partners
     * @example
     * // Get one Partners
     * const partners = await prisma.partners.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends partnersFindFirstArgs>(args?: SelectSubset<T, partnersFindFirstArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Partners that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partnersFindFirstOrThrowArgs} args - Arguments to find a Partners
     * @example
     * // Get one Partners
     * const partners = await prisma.partners.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends partnersFindFirstOrThrowArgs>(args?: SelectSubset<T, partnersFindFirstOrThrowArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Partners that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partnersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Partners
     * const partners = await prisma.partners.findMany()
     * 
     * // Get first 10 Partners
     * const partners = await prisma.partners.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const partnersWithIdOnly = await prisma.partners.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends partnersFindManyArgs>(args?: SelectSubset<T, partnersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Partners.
     * @param {partnersCreateArgs} args - Arguments to create a Partners.
     * @example
     * // Create one Partners
     * const Partners = await prisma.partners.create({
     *   data: {
     *     // ... data to create a Partners
     *   }
     * })
     * 
     */
    create<T extends partnersCreateArgs>(args: SelectSubset<T, partnersCreateArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Partners.
     * @param {partnersCreateManyArgs} args - Arguments to create many Partners.
     * @example
     * // Create many Partners
     * const partners = await prisma.partners.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends partnersCreateManyArgs>(args?: SelectSubset<T, partnersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Partners.
     * @param {partnersDeleteArgs} args - Arguments to delete one Partners.
     * @example
     * // Delete one Partners
     * const Partners = await prisma.partners.delete({
     *   where: {
     *     // ... filter to delete one Partners
     *   }
     * })
     * 
     */
    delete<T extends partnersDeleteArgs>(args: SelectSubset<T, partnersDeleteArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Partners.
     * @param {partnersUpdateArgs} args - Arguments to update one Partners.
     * @example
     * // Update one Partners
     * const partners = await prisma.partners.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends partnersUpdateArgs>(args: SelectSubset<T, partnersUpdateArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Partners.
     * @param {partnersDeleteManyArgs} args - Arguments to filter Partners to delete.
     * @example
     * // Delete a few Partners
     * const { count } = await prisma.partners.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends partnersDeleteManyArgs>(args?: SelectSubset<T, partnersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Partners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partnersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Partners
     * const partners = await prisma.partners.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends partnersUpdateManyArgs>(args: SelectSubset<T, partnersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Partners.
     * @param {partnersUpsertArgs} args - Arguments to update or create a Partners.
     * @example
     * // Update or create a Partners
     * const partners = await prisma.partners.upsert({
     *   create: {
     *     // ... data to create a Partners
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Partners we want to update
     *   }
     * })
     */
    upsert<T extends partnersUpsertArgs>(args: SelectSubset<T, partnersUpsertArgs<ExtArgs>>): Prisma__partnersClient<$Result.GetResult<Prisma.$partnersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Partners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partnersCountArgs} args - Arguments to filter Partners to count.
     * @example
     * // Count the number of Partners
     * const count = await prisma.partners.count({
     *   where: {
     *     // ... the filter for the Partners we want to count
     *   }
     * })
    **/
    count<T extends partnersCountArgs>(
      args?: Subset<T, partnersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PartnersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Partners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartnersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PartnersAggregateArgs>(args: Subset<T, PartnersAggregateArgs>): Prisma.PrismaPromise<GetPartnersAggregateType<T>>

    /**
     * Group by Partners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partnersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends partnersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: partnersGroupByArgs['orderBy'] }
        : { orderBy?: partnersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, partnersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPartnersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the partners model
   */
  readonly fields: partnersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for partners.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__partnersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the partners model
   */
  interface partnersFieldRefs {
    readonly id: FieldRef<"partners", 'BigInt'>
    readonly name: FieldRef<"partners", 'String'>
    readonly logo_url: FieldRef<"partners", 'String'>
    readonly type: FieldRef<"partners", 'partners_type'>
    readonly website: FieldRef<"partners", 'String'>
    readonly contact_email: FieldRef<"partners", 'String'>
    readonly quote: FieldRef<"partners", 'String'>
    readonly language: FieldRef<"partners", 'partners_language'>
    readonly translation_group_id: FieldRef<"partners", 'String'>
    readonly is_active: FieldRef<"partners", 'Boolean'>
    readonly partnership_start_date: FieldRef<"partners", 'DateTime'>
    readonly partnership_end_date: FieldRef<"partners", 'DateTime'>
    readonly created_at: FieldRef<"partners", 'DateTime'>
    readonly updated_at: FieldRef<"partners", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * partners findUnique
   */
  export type partnersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * Filter, which partners to fetch.
     */
    where: partnersWhereUniqueInput
  }

  /**
   * partners findUniqueOrThrow
   */
  export type partnersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * Filter, which partners to fetch.
     */
    where: partnersWhereUniqueInput
  }

  /**
   * partners findFirst
   */
  export type partnersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * Filter, which partners to fetch.
     */
    where?: partnersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partners to fetch.
     */
    orderBy?: partnersOrderByWithRelationInput | partnersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for partners.
     */
    cursor?: partnersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of partners.
     */
    distinct?: PartnersScalarFieldEnum | PartnersScalarFieldEnum[]
  }

  /**
   * partners findFirstOrThrow
   */
  export type partnersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * Filter, which partners to fetch.
     */
    where?: partnersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partners to fetch.
     */
    orderBy?: partnersOrderByWithRelationInput | partnersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for partners.
     */
    cursor?: partnersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of partners.
     */
    distinct?: PartnersScalarFieldEnum | PartnersScalarFieldEnum[]
  }

  /**
   * partners findMany
   */
  export type partnersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * Filter, which partners to fetch.
     */
    where?: partnersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partners to fetch.
     */
    orderBy?: partnersOrderByWithRelationInput | partnersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing partners.
     */
    cursor?: partnersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partners.
     */
    skip?: number
    distinct?: PartnersScalarFieldEnum | PartnersScalarFieldEnum[]
  }

  /**
   * partners create
   */
  export type partnersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * The data needed to create a partners.
     */
    data: XOR<partnersCreateInput, partnersUncheckedCreateInput>
  }

  /**
   * partners createMany
   */
  export type partnersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many partners.
     */
    data: partnersCreateManyInput | partnersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * partners update
   */
  export type partnersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * The data needed to update a partners.
     */
    data: XOR<partnersUpdateInput, partnersUncheckedUpdateInput>
    /**
     * Choose, which partners to update.
     */
    where: partnersWhereUniqueInput
  }

  /**
   * partners updateMany
   */
  export type partnersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update partners.
     */
    data: XOR<partnersUpdateManyMutationInput, partnersUncheckedUpdateManyInput>
    /**
     * Filter which partners to update
     */
    where?: partnersWhereInput
    /**
     * Limit how many partners to update.
     */
    limit?: number
  }

  /**
   * partners upsert
   */
  export type partnersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * The filter to search for the partners to update in case it exists.
     */
    where: partnersWhereUniqueInput
    /**
     * In case the partners found by the `where` argument doesn't exist, create a new partners with this data.
     */
    create: XOR<partnersCreateInput, partnersUncheckedCreateInput>
    /**
     * In case the partners was found with the provided `where` argument, update it with this data.
     */
    update: XOR<partnersUpdateInput, partnersUncheckedUpdateInput>
  }

  /**
   * partners delete
   */
  export type partnersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
    /**
     * Filter which partners to delete.
     */
    where: partnersWhereUniqueInput
  }

  /**
   * partners deleteMany
   */
  export type partnersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which partners to delete
     */
    where?: partnersWhereInput
    /**
     * Limit how many partners to delete.
     */
    limit?: number
  }

  /**
   * partners without action
   */
  export type partnersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partners
     */
    select?: partnersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partners
     */
    omit?: partnersOmit<ExtArgs> | null
  }


  /**
   * Model posts
   */

  export type AggregatePosts = {
    _count: PostsCountAggregateOutputType | null
    _avg: PostsAvgAggregateOutputType | null
    _sum: PostsSumAggregateOutputType | null
    _min: PostsMinAggregateOutputType | null
    _max: PostsMaxAggregateOutputType | null
  }

  export type PostsAvgAggregateOutputType = {
    id: number | null
    author_id: number | null
  }

  export type PostsSumAggregateOutputType = {
    id: bigint | null
    author_id: bigint | null
  }

  export type PostsMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    slug: string | null
    content: string | null
    post_type: $Enums.posts_post_type | null
    author_id: bigint | null
    feature_image: string | null
    language: $Enums.posts_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PostsMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    slug: string | null
    content: string | null
    post_type: $Enums.posts_post_type | null
    author_id: bigint | null
    feature_image: string | null
    language: $Enums.posts_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PostsCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    content: number
    post_type: number
    author_id: number
    feature_image: number
    language: number
    translation_group_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PostsAvgAggregateInputType = {
    id?: true
    author_id?: true
  }

  export type PostsSumAggregateInputType = {
    id?: true
    author_id?: true
  }

  export type PostsMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    content?: true
    post_type?: true
    author_id?: true
    feature_image?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
  }

  export type PostsMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    content?: true
    post_type?: true
    author_id?: true
    feature_image?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
  }

  export type PostsCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    content?: true
    post_type?: true
    author_id?: true
    feature_image?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PostsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to aggregate.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned posts
    **/
    _count?: true | PostsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostsMaxAggregateInputType
  }

  export type GetPostsAggregateType<T extends PostsAggregateArgs> = {
        [P in keyof T & keyof AggregatePosts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePosts[P]>
      : GetScalarType<T[P], AggregatePosts[P]>
  }




  export type postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postsWhereInput
    orderBy?: postsOrderByWithAggregationInput | postsOrderByWithAggregationInput[]
    by: PostsScalarFieldEnum[] | PostsScalarFieldEnum
    having?: postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostsCountAggregateInputType | true
    _avg?: PostsAvgAggregateInputType
    _sum?: PostsSumAggregateInputType
    _min?: PostsMinAggregateInputType
    _max?: PostsMaxAggregateInputType
  }

  export type PostsGroupByOutputType = {
    id: bigint
    title: string
    slug: string
    content: string | null
    post_type: $Enums.posts_post_type
    author_id: bigint | null
    feature_image: string | null
    language: $Enums.posts_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: PostsCountAggregateOutputType | null
    _avg: PostsAvgAggregateOutputType | null
    _sum: PostsSumAggregateOutputType | null
    _min: PostsMinAggregateOutputType | null
    _max: PostsMaxAggregateOutputType | null
  }

  type GetPostsGroupByPayload<T extends postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostsGroupByOutputType[P]>
            : GetScalarType<T[P], PostsGroupByOutputType[P]>
        }
      >
    >


  export type postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    content?: boolean
    post_type?: boolean
    author_id?: boolean
    feature_image?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | posts$usersArgs<ExtArgs>
  }, ExtArgs["result"]["posts"]>



  export type postsSelectScalar = {
    id?: boolean
    title?: boolean
    slug?: boolean
    content?: boolean
    post_type?: boolean
    author_id?: boolean
    feature_image?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "slug" | "content" | "post_type" | "author_id" | "feature_image" | "language" | "translation_group_id" | "created_at" | "updated_at", ExtArgs["result"]["posts"]>
  export type postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | posts$usersArgs<ExtArgs>
  }

  export type $postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "posts"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      slug: string
      content: string | null
      post_type: $Enums.posts_post_type
      author_id: bigint | null
      feature_image: string | null
      language: $Enums.posts_language | null
      translation_group_id: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["posts"]>
    composites: {}
  }

  type postsGetPayload<S extends boolean | null | undefined | postsDefaultArgs> = $Result.GetResult<Prisma.$postsPayload, S>

  type postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostsCountAggregateInputType | true
    }

  export interface postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['posts'], meta: { name: 'posts' } }
    /**
     * Find zero or one Posts that matches the filter.
     * @param {postsFindUniqueArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends postsFindUniqueArgs>(args: SelectSubset<T, postsFindUniqueArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Posts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {postsFindUniqueOrThrowArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends postsFindUniqueOrThrowArgs>(args: SelectSubset<T, postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindFirstArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends postsFindFirstArgs>(args?: SelectSubset<T, postsFindFirstArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindFirstOrThrowArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends postsFindFirstOrThrowArgs>(args?: SelectSubset<T, postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.posts.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.posts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postsWithIdOnly = await prisma.posts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends postsFindManyArgs>(args?: SelectSubset<T, postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Posts.
     * @param {postsCreateArgs} args - Arguments to create a Posts.
     * @example
     * // Create one Posts
     * const Posts = await prisma.posts.create({
     *   data: {
     *     // ... data to create a Posts
     *   }
     * })
     * 
     */
    create<T extends postsCreateArgs>(args: SelectSubset<T, postsCreateArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {postsCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const posts = await prisma.posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends postsCreateManyArgs>(args?: SelectSubset<T, postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Posts.
     * @param {postsDeleteArgs} args - Arguments to delete one Posts.
     * @example
     * // Delete one Posts
     * const Posts = await prisma.posts.delete({
     *   where: {
     *     // ... filter to delete one Posts
     *   }
     * })
     * 
     */
    delete<T extends postsDeleteArgs>(args: SelectSubset<T, postsDeleteArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Posts.
     * @param {postsUpdateArgs} args - Arguments to update one Posts.
     * @example
     * // Update one Posts
     * const posts = await prisma.posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends postsUpdateArgs>(args: SelectSubset<T, postsUpdateArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {postsDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends postsDeleteManyArgs>(args?: SelectSubset<T, postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const posts = await prisma.posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends postsUpdateManyArgs>(args: SelectSubset<T, postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Posts.
     * @param {postsUpsertArgs} args - Arguments to update or create a Posts.
     * @example
     * // Update or create a Posts
     * const posts = await prisma.posts.upsert({
     *   create: {
     *     // ... data to create a Posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Posts we want to update
     *   }
     * })
     */
    upsert<T extends postsUpsertArgs>(args: SelectSubset<T, postsUpsertArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.posts.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends postsCountArgs>(
      args?: Subset<T, postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostsAggregateArgs>(args: Subset<T, PostsAggregateArgs>): Prisma.PrismaPromise<GetPostsAggregateType<T>>

    /**
     * Group by Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: postsGroupByArgs['orderBy'] }
        : { orderBy?: postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the posts model
   */
  readonly fields: postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends posts$usersArgs<ExtArgs> = {}>(args?: Subset<T, posts$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the posts model
   */
  interface postsFieldRefs {
    readonly id: FieldRef<"posts", 'BigInt'>
    readonly title: FieldRef<"posts", 'String'>
    readonly slug: FieldRef<"posts", 'String'>
    readonly content: FieldRef<"posts", 'String'>
    readonly post_type: FieldRef<"posts", 'posts_post_type'>
    readonly author_id: FieldRef<"posts", 'BigInt'>
    readonly feature_image: FieldRef<"posts", 'String'>
    readonly language: FieldRef<"posts", 'posts_language'>
    readonly translation_group_id: FieldRef<"posts", 'String'>
    readonly created_at: FieldRef<"posts", 'DateTime'>
    readonly updated_at: FieldRef<"posts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * posts findUnique
   */
  export type postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts findUniqueOrThrow
   */
  export type postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts findFirst
   */
  export type postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts findFirstOrThrow
   */
  export type postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts findMany
   */
  export type postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts create
   */
  export type postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The data needed to create a posts.
     */
    data: XOR<postsCreateInput, postsUncheckedCreateInput>
  }

  /**
   * posts createMany
   */
  export type postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many posts.
     */
    data: postsCreateManyInput | postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * posts update
   */
  export type postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The data needed to update a posts.
     */
    data: XOR<postsUpdateInput, postsUncheckedUpdateInput>
    /**
     * Choose, which posts to update.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts updateMany
   */
  export type postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update posts.
     */
    data: XOR<postsUpdateManyMutationInput, postsUncheckedUpdateManyInput>
    /**
     * Filter which posts to update
     */
    where?: postsWhereInput
    /**
     * Limit how many posts to update.
     */
    limit?: number
  }

  /**
   * posts upsert
   */
  export type postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The filter to search for the posts to update in case it exists.
     */
    where: postsWhereUniqueInput
    /**
     * In case the posts found by the `where` argument doesn't exist, create a new posts with this data.
     */
    create: XOR<postsCreateInput, postsUncheckedCreateInput>
    /**
     * In case the posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<postsUpdateInput, postsUncheckedUpdateInput>
  }

  /**
   * posts delete
   */
  export type postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter which posts to delete.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts deleteMany
   */
  export type postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to delete
     */
    where?: postsWhereInput
    /**
     * Limit how many posts to delete.
     */
    limit?: number
  }

  /**
   * posts.users
   */
  export type posts$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * posts without action
   */
  export type postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
  }


  /**
   * Model programs
   */

  export type AggregatePrograms = {
    _count: ProgramsCountAggregateOutputType | null
    _avg: ProgramsAvgAggregateOutputType | null
    _sum: ProgramsSumAggregateOutputType | null
    _min: ProgramsMinAggregateOutputType | null
    _max: ProgramsMaxAggregateOutputType | null
  }

  export type ProgramsAvgAggregateOutputType = {
    id: number | null
    created_by: number | null
  }

  export type ProgramsSumAggregateOutputType = {
    id: bigint | null
    created_by: bigint | null
  }

  export type ProgramsMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    category: $Enums.programs_category | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    location: string | null
    impact_stats: string | null
    is_featured: boolean | null
    created_by: bigint | null
    language: $Enums.programs_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ProgramsMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    category: $Enums.programs_category | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    location: string | null
    impact_stats: string | null
    is_featured: boolean | null
    created_by: bigint | null
    language: $Enums.programs_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ProgramsCountAggregateOutputType = {
    id: number
    title: number
    category: number
    description: number
    start_date: number
    end_date: number
    location: number
    impact_stats: number
    is_featured: number
    created_by: number
    language: number
    translation_group_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type ProgramsAvgAggregateInputType = {
    id?: true
    created_by?: true
  }

  export type ProgramsSumAggregateInputType = {
    id?: true
    created_by?: true
  }

  export type ProgramsMinAggregateInputType = {
    id?: true
    title?: true
    category?: true
    description?: true
    start_date?: true
    end_date?: true
    location?: true
    impact_stats?: true
    is_featured?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ProgramsMaxAggregateInputType = {
    id?: true
    title?: true
    category?: true
    description?: true
    start_date?: true
    end_date?: true
    location?: true
    impact_stats?: true
    is_featured?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ProgramsCountAggregateInputType = {
    id?: true
    title?: true
    category?: true
    description?: true
    start_date?: true
    end_date?: true
    location?: true
    impact_stats?: true
    is_featured?: true
    created_by?: true
    language?: true
    translation_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type ProgramsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which programs to aggregate.
     */
    where?: programsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of programs to fetch.
     */
    orderBy?: programsOrderByWithRelationInput | programsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: programsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned programs
    **/
    _count?: true | ProgramsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProgramsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProgramsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgramsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgramsMaxAggregateInputType
  }

  export type GetProgramsAggregateType<T extends ProgramsAggregateArgs> = {
        [P in keyof T & keyof AggregatePrograms]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrograms[P]>
      : GetScalarType<T[P], AggregatePrograms[P]>
  }




  export type programsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: programsWhereInput
    orderBy?: programsOrderByWithAggregationInput | programsOrderByWithAggregationInput[]
    by: ProgramsScalarFieldEnum[] | ProgramsScalarFieldEnum
    having?: programsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgramsCountAggregateInputType | true
    _avg?: ProgramsAvgAggregateInputType
    _sum?: ProgramsSumAggregateInputType
    _min?: ProgramsMinAggregateInputType
    _max?: ProgramsMaxAggregateInputType
  }

  export type ProgramsGroupByOutputType = {
    id: bigint
    title: string
    category: $Enums.programs_category | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    location: string | null
    impact_stats: string | null
    is_featured: boolean | null
    created_by: bigint | null
    language: $Enums.programs_language | null
    translation_group_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: ProgramsCountAggregateOutputType | null
    _avg: ProgramsAvgAggregateOutputType | null
    _sum: ProgramsSumAggregateOutputType | null
    _min: ProgramsMinAggregateOutputType | null
    _max: ProgramsMaxAggregateOutputType | null
  }

  type GetProgramsGroupByPayload<T extends programsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProgramsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProgramsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProgramsGroupByOutputType[P]>
            : GetScalarType<T[P], ProgramsGroupByOutputType[P]>
        }
      >
    >


  export type programsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    category?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    location?: boolean
    impact_stats?: boolean
    is_featured?: boolean
    created_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    media?: boolean | programs$mediaArgs<ExtArgs>
    users?: boolean | programs$usersArgs<ExtArgs>
    _count?: boolean | ProgramsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programs"]>



  export type programsSelectScalar = {
    id?: boolean
    title?: boolean
    category?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    location?: boolean
    impact_stats?: boolean
    is_featured?: boolean
    created_by?: boolean
    language?: boolean
    translation_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type programsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "category" | "description" | "start_date" | "end_date" | "location" | "impact_stats" | "is_featured" | "created_by" | "language" | "translation_group_id" | "created_at" | "updated_at" | "deleted_at", ExtArgs["result"]["programs"]>
  export type programsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    media?: boolean | programs$mediaArgs<ExtArgs>
    users?: boolean | programs$usersArgs<ExtArgs>
    _count?: boolean | ProgramsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $programsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "programs"
    objects: {
      media: Prisma.$mediaPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      category: $Enums.programs_category | null
      description: string | null
      start_date: Date | null
      end_date: Date | null
      location: string | null
      impact_stats: string | null
      is_featured: boolean | null
      created_by: bigint | null
      language: $Enums.programs_language | null
      translation_group_id: string | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["programs"]>
    composites: {}
  }

  type programsGetPayload<S extends boolean | null | undefined | programsDefaultArgs> = $Result.GetResult<Prisma.$programsPayload, S>

  type programsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<programsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProgramsCountAggregateInputType | true
    }

  export interface programsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['programs'], meta: { name: 'programs' } }
    /**
     * Find zero or one Programs that matches the filter.
     * @param {programsFindUniqueArgs} args - Arguments to find a Programs
     * @example
     * // Get one Programs
     * const programs = await prisma.programs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends programsFindUniqueArgs>(args: SelectSubset<T, programsFindUniqueArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Programs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {programsFindUniqueOrThrowArgs} args - Arguments to find a Programs
     * @example
     * // Get one Programs
     * const programs = await prisma.programs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends programsFindUniqueOrThrowArgs>(args: SelectSubset<T, programsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Programs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {programsFindFirstArgs} args - Arguments to find a Programs
     * @example
     * // Get one Programs
     * const programs = await prisma.programs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends programsFindFirstArgs>(args?: SelectSubset<T, programsFindFirstArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Programs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {programsFindFirstOrThrowArgs} args - Arguments to find a Programs
     * @example
     * // Get one Programs
     * const programs = await prisma.programs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends programsFindFirstOrThrowArgs>(args?: SelectSubset<T, programsFindFirstOrThrowArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Programs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {programsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Programs
     * const programs = await prisma.programs.findMany()
     * 
     * // Get first 10 Programs
     * const programs = await prisma.programs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const programsWithIdOnly = await prisma.programs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends programsFindManyArgs>(args?: SelectSubset<T, programsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Programs.
     * @param {programsCreateArgs} args - Arguments to create a Programs.
     * @example
     * // Create one Programs
     * const Programs = await prisma.programs.create({
     *   data: {
     *     // ... data to create a Programs
     *   }
     * })
     * 
     */
    create<T extends programsCreateArgs>(args: SelectSubset<T, programsCreateArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Programs.
     * @param {programsCreateManyArgs} args - Arguments to create many Programs.
     * @example
     * // Create many Programs
     * const programs = await prisma.programs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends programsCreateManyArgs>(args?: SelectSubset<T, programsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Programs.
     * @param {programsDeleteArgs} args - Arguments to delete one Programs.
     * @example
     * // Delete one Programs
     * const Programs = await prisma.programs.delete({
     *   where: {
     *     // ... filter to delete one Programs
     *   }
     * })
     * 
     */
    delete<T extends programsDeleteArgs>(args: SelectSubset<T, programsDeleteArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Programs.
     * @param {programsUpdateArgs} args - Arguments to update one Programs.
     * @example
     * // Update one Programs
     * const programs = await prisma.programs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends programsUpdateArgs>(args: SelectSubset<T, programsUpdateArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Programs.
     * @param {programsDeleteManyArgs} args - Arguments to filter Programs to delete.
     * @example
     * // Delete a few Programs
     * const { count } = await prisma.programs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends programsDeleteManyArgs>(args?: SelectSubset<T, programsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {programsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Programs
     * const programs = await prisma.programs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends programsUpdateManyArgs>(args: SelectSubset<T, programsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Programs.
     * @param {programsUpsertArgs} args - Arguments to update or create a Programs.
     * @example
     * // Update or create a Programs
     * const programs = await prisma.programs.upsert({
     *   create: {
     *     // ... data to create a Programs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Programs we want to update
     *   }
     * })
     */
    upsert<T extends programsUpsertArgs>(args: SelectSubset<T, programsUpsertArgs<ExtArgs>>): Prisma__programsClient<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {programsCountArgs} args - Arguments to filter Programs to count.
     * @example
     * // Count the number of Programs
     * const count = await prisma.programs.count({
     *   where: {
     *     // ... the filter for the Programs we want to count
     *   }
     * })
    **/
    count<T extends programsCountArgs>(
      args?: Subset<T, programsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgramsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgramsAggregateArgs>(args: Subset<T, ProgramsAggregateArgs>): Prisma.PrismaPromise<GetProgramsAggregateType<T>>

    /**
     * Group by Programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {programsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends programsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: programsGroupByArgs['orderBy'] }
        : { orderBy?: programsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, programsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the programs model
   */
  readonly fields: programsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for programs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__programsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    media<T extends programs$mediaArgs<ExtArgs> = {}>(args?: Subset<T, programs$mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends programs$usersArgs<ExtArgs> = {}>(args?: Subset<T, programs$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the programs model
   */
  interface programsFieldRefs {
    readonly id: FieldRef<"programs", 'BigInt'>
    readonly title: FieldRef<"programs", 'String'>
    readonly category: FieldRef<"programs", 'programs_category'>
    readonly description: FieldRef<"programs", 'String'>
    readonly start_date: FieldRef<"programs", 'DateTime'>
    readonly end_date: FieldRef<"programs", 'DateTime'>
    readonly location: FieldRef<"programs", 'String'>
    readonly impact_stats: FieldRef<"programs", 'String'>
    readonly is_featured: FieldRef<"programs", 'Boolean'>
    readonly created_by: FieldRef<"programs", 'BigInt'>
    readonly language: FieldRef<"programs", 'programs_language'>
    readonly translation_group_id: FieldRef<"programs", 'String'>
    readonly created_at: FieldRef<"programs", 'DateTime'>
    readonly updated_at: FieldRef<"programs", 'DateTime'>
    readonly deleted_at: FieldRef<"programs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * programs findUnique
   */
  export type programsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * Filter, which programs to fetch.
     */
    where: programsWhereUniqueInput
  }

  /**
   * programs findUniqueOrThrow
   */
  export type programsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * Filter, which programs to fetch.
     */
    where: programsWhereUniqueInput
  }

  /**
   * programs findFirst
   */
  export type programsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * Filter, which programs to fetch.
     */
    where?: programsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of programs to fetch.
     */
    orderBy?: programsOrderByWithRelationInput | programsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for programs.
     */
    cursor?: programsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of programs.
     */
    distinct?: ProgramsScalarFieldEnum | ProgramsScalarFieldEnum[]
  }

  /**
   * programs findFirstOrThrow
   */
  export type programsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * Filter, which programs to fetch.
     */
    where?: programsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of programs to fetch.
     */
    orderBy?: programsOrderByWithRelationInput | programsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for programs.
     */
    cursor?: programsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of programs.
     */
    distinct?: ProgramsScalarFieldEnum | ProgramsScalarFieldEnum[]
  }

  /**
   * programs findMany
   */
  export type programsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * Filter, which programs to fetch.
     */
    where?: programsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of programs to fetch.
     */
    orderBy?: programsOrderByWithRelationInput | programsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing programs.
     */
    cursor?: programsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` programs.
     */
    skip?: number
    distinct?: ProgramsScalarFieldEnum | ProgramsScalarFieldEnum[]
  }

  /**
   * programs create
   */
  export type programsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * The data needed to create a programs.
     */
    data: XOR<programsCreateInput, programsUncheckedCreateInput>
  }

  /**
   * programs createMany
   */
  export type programsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many programs.
     */
    data: programsCreateManyInput | programsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * programs update
   */
  export type programsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * The data needed to update a programs.
     */
    data: XOR<programsUpdateInput, programsUncheckedUpdateInput>
    /**
     * Choose, which programs to update.
     */
    where: programsWhereUniqueInput
  }

  /**
   * programs updateMany
   */
  export type programsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update programs.
     */
    data: XOR<programsUpdateManyMutationInput, programsUncheckedUpdateManyInput>
    /**
     * Filter which programs to update
     */
    where?: programsWhereInput
    /**
     * Limit how many programs to update.
     */
    limit?: number
  }

  /**
   * programs upsert
   */
  export type programsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * The filter to search for the programs to update in case it exists.
     */
    where: programsWhereUniqueInput
    /**
     * In case the programs found by the `where` argument doesn't exist, create a new programs with this data.
     */
    create: XOR<programsCreateInput, programsUncheckedCreateInput>
    /**
     * In case the programs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<programsUpdateInput, programsUncheckedUpdateInput>
  }

  /**
   * programs delete
   */
  export type programsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    /**
     * Filter which programs to delete.
     */
    where: programsWhereUniqueInput
  }

  /**
   * programs deleteMany
   */
  export type programsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which programs to delete
     */
    where?: programsWhereInput
    /**
     * Limit how many programs to delete.
     */
    limit?: number
  }

  /**
   * programs.media
   */
  export type programs$mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    where?: mediaWhereInput
    orderBy?: mediaOrderByWithRelationInput | mediaOrderByWithRelationInput[]
    cursor?: mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * programs.users
   */
  export type programs$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * programs without action
   */
  export type programsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
  }


  /**
   * Model role_permissions
   */

  export type AggregateRole_permissions = {
    _count: Role_permissionsCountAggregateOutputType | null
    _min: Role_permissionsMinAggregateOutputType | null
    _max: Role_permissionsMaxAggregateOutputType | null
  }

  export type Role_permissionsMinAggregateOutputType = {
    role: $Enums.role_permissions_role | null
    permission: string | null
    created_at: Date | null
  }

  export type Role_permissionsMaxAggregateOutputType = {
    role: $Enums.role_permissions_role | null
    permission: string | null
    created_at: Date | null
  }

  export type Role_permissionsCountAggregateOutputType = {
    role: number
    permission: number
    created_at: number
    _all: number
  }


  export type Role_permissionsMinAggregateInputType = {
    role?: true
    permission?: true
    created_at?: true
  }

  export type Role_permissionsMaxAggregateInputType = {
    role?: true
    permission?: true
    created_at?: true
  }

  export type Role_permissionsCountAggregateInputType = {
    role?: true
    permission?: true
    created_at?: true
    _all?: true
  }

  export type Role_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_permissions to aggregate.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned role_permissions
    **/
    _count?: true | Role_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Role_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Role_permissionsMaxAggregateInputType
  }

  export type GetRole_permissionsAggregateType<T extends Role_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateRole_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole_permissions[P]>
      : GetScalarType<T[P], AggregateRole_permissions[P]>
  }




  export type role_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_permissionsWhereInput
    orderBy?: role_permissionsOrderByWithAggregationInput | role_permissionsOrderByWithAggregationInput[]
    by: Role_permissionsScalarFieldEnum[] | Role_permissionsScalarFieldEnum
    having?: role_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Role_permissionsCountAggregateInputType | true
    _min?: Role_permissionsMinAggregateInputType
    _max?: Role_permissionsMaxAggregateInputType
  }

  export type Role_permissionsGroupByOutputType = {
    role: $Enums.role_permissions_role
    permission: string
    created_at: Date | null
    _count: Role_permissionsCountAggregateOutputType | null
    _min: Role_permissionsMinAggregateOutputType | null
    _max: Role_permissionsMaxAggregateOutputType | null
  }

  type GetRole_permissionsGroupByPayload<T extends role_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Role_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Role_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Role_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Role_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type role_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    role?: boolean
    permission?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["role_permissions"]>



  export type role_permissionsSelectScalar = {
    role?: boolean
    permission?: boolean
    created_at?: boolean
  }

  export type role_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"role" | "permission" | "created_at", ExtArgs["result"]["role_permissions"]>

  export type $role_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "role_permissions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      role: $Enums.role_permissions_role
      permission: string
      created_at: Date | null
    }, ExtArgs["result"]["role_permissions"]>
    composites: {}
  }

  type role_permissionsGetPayload<S extends boolean | null | undefined | role_permissionsDefaultArgs> = $Result.GetResult<Prisma.$role_permissionsPayload, S>

  type role_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<role_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Role_permissionsCountAggregateInputType | true
    }

  export interface role_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['role_permissions'], meta: { name: 'role_permissions' } }
    /**
     * Find zero or one Role_permissions that matches the filter.
     * @param {role_permissionsFindUniqueArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends role_permissionsFindUniqueArgs>(args: SelectSubset<T, role_permissionsFindUniqueArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {role_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends role_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, role_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindFirstArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends role_permissionsFindFirstArgs>(args?: SelectSubset<T, role_permissionsFindFirstArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindFirstOrThrowArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends role_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, role_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Role_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Role_permissions
     * const role_permissions = await prisma.role_permissions.findMany()
     * 
     * // Get first 10 Role_permissions
     * const role_permissions = await prisma.role_permissions.findMany({ take: 10 })
     * 
     * // Only select the `permission`
     * const role_permissionsWithPermissionOnly = await prisma.role_permissions.findMany({ select: { permission: true } })
     * 
     */
    findMany<T extends role_permissionsFindManyArgs>(args?: SelectSubset<T, role_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role_permissions.
     * @param {role_permissionsCreateArgs} args - Arguments to create a Role_permissions.
     * @example
     * // Create one Role_permissions
     * const Role_permissions = await prisma.role_permissions.create({
     *   data: {
     *     // ... data to create a Role_permissions
     *   }
     * })
     * 
     */
    create<T extends role_permissionsCreateArgs>(args: SelectSubset<T, role_permissionsCreateArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Role_permissions.
     * @param {role_permissionsCreateManyArgs} args - Arguments to create many Role_permissions.
     * @example
     * // Create many Role_permissions
     * const role_permissions = await prisma.role_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends role_permissionsCreateManyArgs>(args?: SelectSubset<T, role_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role_permissions.
     * @param {role_permissionsDeleteArgs} args - Arguments to delete one Role_permissions.
     * @example
     * // Delete one Role_permissions
     * const Role_permissions = await prisma.role_permissions.delete({
     *   where: {
     *     // ... filter to delete one Role_permissions
     *   }
     * })
     * 
     */
    delete<T extends role_permissionsDeleteArgs>(args: SelectSubset<T, role_permissionsDeleteArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role_permissions.
     * @param {role_permissionsUpdateArgs} args - Arguments to update one Role_permissions.
     * @example
     * // Update one Role_permissions
     * const role_permissions = await prisma.role_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends role_permissionsUpdateArgs>(args: SelectSubset<T, role_permissionsUpdateArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Role_permissions.
     * @param {role_permissionsDeleteManyArgs} args - Arguments to filter Role_permissions to delete.
     * @example
     * // Delete a few Role_permissions
     * const { count } = await prisma.role_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends role_permissionsDeleteManyArgs>(args?: SelectSubset<T, role_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Role_permissions
     * const role_permissions = await prisma.role_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends role_permissionsUpdateManyArgs>(args: SelectSubset<T, role_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role_permissions.
     * @param {role_permissionsUpsertArgs} args - Arguments to update or create a Role_permissions.
     * @example
     * // Update or create a Role_permissions
     * const role_permissions = await prisma.role_permissions.upsert({
     *   create: {
     *     // ... data to create a Role_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role_permissions we want to update
     *   }
     * })
     */
    upsert<T extends role_permissionsUpsertArgs>(args: SelectSubset<T, role_permissionsUpsertArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsCountArgs} args - Arguments to filter Role_permissions to count.
     * @example
     * // Count the number of Role_permissions
     * const count = await prisma.role_permissions.count({
     *   where: {
     *     // ... the filter for the Role_permissions we want to count
     *   }
     * })
    **/
    count<T extends role_permissionsCountArgs>(
      args?: Subset<T, role_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Role_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Role_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Role_permissionsAggregateArgs>(args: Subset<T, Role_permissionsAggregateArgs>): Prisma.PrismaPromise<GetRole_permissionsAggregateType<T>>

    /**
     * Group by Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends role_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: role_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: role_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, role_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRole_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the role_permissions model
   */
  readonly fields: role_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for role_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__role_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the role_permissions model
   */
  interface role_permissionsFieldRefs {
    readonly role: FieldRef<"role_permissions", 'role_permissions_role'>
    readonly permission: FieldRef<"role_permissions", 'String'>
    readonly created_at: FieldRef<"role_permissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * role_permissions findUnique
   */
  export type role_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions findUniqueOrThrow
   */
  export type role_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions findFirst
   */
  export type role_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_permissions.
     */
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions findFirstOrThrow
   */
  export type role_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_permissions.
     */
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions findMany
   */
  export type role_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions create
   */
  export type role_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * The data needed to create a role_permissions.
     */
    data: XOR<role_permissionsCreateInput, role_permissionsUncheckedCreateInput>
  }

  /**
   * role_permissions createMany
   */
  export type role_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many role_permissions.
     */
    data: role_permissionsCreateManyInput | role_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * role_permissions update
   */
  export type role_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * The data needed to update a role_permissions.
     */
    data: XOR<role_permissionsUpdateInput, role_permissionsUncheckedUpdateInput>
    /**
     * Choose, which role_permissions to update.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions updateMany
   */
  export type role_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update role_permissions.
     */
    data: XOR<role_permissionsUpdateManyMutationInput, role_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which role_permissions to update
     */
    where?: role_permissionsWhereInput
    /**
     * Limit how many role_permissions to update.
     */
    limit?: number
  }

  /**
   * role_permissions upsert
   */
  export type role_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * The filter to search for the role_permissions to update in case it exists.
     */
    where: role_permissionsWhereUniqueInput
    /**
     * In case the role_permissions found by the `where` argument doesn't exist, create a new role_permissions with this data.
     */
    create: XOR<role_permissionsCreateInput, role_permissionsUncheckedCreateInput>
    /**
     * In case the role_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<role_permissionsUpdateInput, role_permissionsUncheckedUpdateInput>
  }

  /**
   * role_permissions delete
   */
  export type role_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Filter which role_permissions to delete.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions deleteMany
   */
  export type role_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_permissions to delete
     */
    where?: role_permissionsWhereInput
    /**
     * Limit how many role_permissions to delete.
     */
    limit?: number
  }

  /**
   * role_permissions without action
   */
  export type role_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
  }


  /**
   * Model site_interactions
   */

  export type AggregateSite_interactions = {
    _count: Site_interactionsCountAggregateOutputType | null
    _avg: Site_interactionsAvgAggregateOutputType | null
    _sum: Site_interactionsSumAggregateOutputType | null
    _min: Site_interactionsMinAggregateOutputType | null
    _max: Site_interactionsMaxAggregateOutputType | null
  }

  export type Site_interactionsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Site_interactionsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
  }

  export type Site_interactionsMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    session_id: string | null
    page: string | null
    action: string | null
    metadata: string | null
    ip_address: string | null
    user_agent: string | null
    occurred_at: Date | null
  }

  export type Site_interactionsMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    session_id: string | null
    page: string | null
    action: string | null
    metadata: string | null
    ip_address: string | null
    user_agent: string | null
    occurred_at: Date | null
  }

  export type Site_interactionsCountAggregateOutputType = {
    id: number
    user_id: number
    session_id: number
    page: number
    action: number
    metadata: number
    ip_address: number
    user_agent: number
    occurred_at: number
    _all: number
  }


  export type Site_interactionsAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Site_interactionsSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Site_interactionsMinAggregateInputType = {
    id?: true
    user_id?: true
    session_id?: true
    page?: true
    action?: true
    metadata?: true
    ip_address?: true
    user_agent?: true
    occurred_at?: true
  }

  export type Site_interactionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    session_id?: true
    page?: true
    action?: true
    metadata?: true
    ip_address?: true
    user_agent?: true
    occurred_at?: true
  }

  export type Site_interactionsCountAggregateInputType = {
    id?: true
    user_id?: true
    session_id?: true
    page?: true
    action?: true
    metadata?: true
    ip_address?: true
    user_agent?: true
    occurred_at?: true
    _all?: true
  }

  export type Site_interactionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which site_interactions to aggregate.
     */
    where?: site_interactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_interactions to fetch.
     */
    orderBy?: site_interactionsOrderByWithRelationInput | site_interactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: site_interactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_interactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned site_interactions
    **/
    _count?: true | Site_interactionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Site_interactionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Site_interactionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Site_interactionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Site_interactionsMaxAggregateInputType
  }

  export type GetSite_interactionsAggregateType<T extends Site_interactionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSite_interactions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSite_interactions[P]>
      : GetScalarType<T[P], AggregateSite_interactions[P]>
  }




  export type site_interactionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: site_interactionsWhereInput
    orderBy?: site_interactionsOrderByWithAggregationInput | site_interactionsOrderByWithAggregationInput[]
    by: Site_interactionsScalarFieldEnum[] | Site_interactionsScalarFieldEnum
    having?: site_interactionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Site_interactionsCountAggregateInputType | true
    _avg?: Site_interactionsAvgAggregateInputType
    _sum?: Site_interactionsSumAggregateInputType
    _min?: Site_interactionsMinAggregateInputType
    _max?: Site_interactionsMaxAggregateInputType
  }

  export type Site_interactionsGroupByOutputType = {
    id: bigint
    user_id: bigint | null
    session_id: string | null
    page: string | null
    action: string | null
    metadata: string | null
    ip_address: string | null
    user_agent: string | null
    occurred_at: Date | null
    _count: Site_interactionsCountAggregateOutputType | null
    _avg: Site_interactionsAvgAggregateOutputType | null
    _sum: Site_interactionsSumAggregateOutputType | null
    _min: Site_interactionsMinAggregateOutputType | null
    _max: Site_interactionsMaxAggregateOutputType | null
  }

  type GetSite_interactionsGroupByPayload<T extends site_interactionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Site_interactionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Site_interactionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Site_interactionsGroupByOutputType[P]>
            : GetScalarType<T[P], Site_interactionsGroupByOutputType[P]>
        }
      >
    >


  export type site_interactionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    session_id?: boolean
    page?: boolean
    action?: boolean
    metadata?: boolean
    ip_address?: boolean
    user_agent?: boolean
    occurred_at?: boolean
    users?: boolean | site_interactions$usersArgs<ExtArgs>
  }, ExtArgs["result"]["site_interactions"]>



  export type site_interactionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    session_id?: boolean
    page?: boolean
    action?: boolean
    metadata?: boolean
    ip_address?: boolean
    user_agent?: boolean
    occurred_at?: boolean
  }

  export type site_interactionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "session_id" | "page" | "action" | "metadata" | "ip_address" | "user_agent" | "occurred_at", ExtArgs["result"]["site_interactions"]>
  export type site_interactionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | site_interactions$usersArgs<ExtArgs>
  }

  export type $site_interactionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "site_interactions"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint | null
      session_id: string | null
      page: string | null
      action: string | null
      metadata: string | null
      ip_address: string | null
      user_agent: string | null
      occurred_at: Date | null
    }, ExtArgs["result"]["site_interactions"]>
    composites: {}
  }

  type site_interactionsGetPayload<S extends boolean | null | undefined | site_interactionsDefaultArgs> = $Result.GetResult<Prisma.$site_interactionsPayload, S>

  type site_interactionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<site_interactionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Site_interactionsCountAggregateInputType | true
    }

  export interface site_interactionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['site_interactions'], meta: { name: 'site_interactions' } }
    /**
     * Find zero or one Site_interactions that matches the filter.
     * @param {site_interactionsFindUniqueArgs} args - Arguments to find a Site_interactions
     * @example
     * // Get one Site_interactions
     * const site_interactions = await prisma.site_interactions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends site_interactionsFindUniqueArgs>(args: SelectSubset<T, site_interactionsFindUniqueArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Site_interactions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {site_interactionsFindUniqueOrThrowArgs} args - Arguments to find a Site_interactions
     * @example
     * // Get one Site_interactions
     * const site_interactions = await prisma.site_interactions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends site_interactionsFindUniqueOrThrowArgs>(args: SelectSubset<T, site_interactionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Site_interactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_interactionsFindFirstArgs} args - Arguments to find a Site_interactions
     * @example
     * // Get one Site_interactions
     * const site_interactions = await prisma.site_interactions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends site_interactionsFindFirstArgs>(args?: SelectSubset<T, site_interactionsFindFirstArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Site_interactions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_interactionsFindFirstOrThrowArgs} args - Arguments to find a Site_interactions
     * @example
     * // Get one Site_interactions
     * const site_interactions = await prisma.site_interactions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends site_interactionsFindFirstOrThrowArgs>(args?: SelectSubset<T, site_interactionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Site_interactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_interactionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Site_interactions
     * const site_interactions = await prisma.site_interactions.findMany()
     * 
     * // Get first 10 Site_interactions
     * const site_interactions = await prisma.site_interactions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const site_interactionsWithIdOnly = await prisma.site_interactions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends site_interactionsFindManyArgs>(args?: SelectSubset<T, site_interactionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Site_interactions.
     * @param {site_interactionsCreateArgs} args - Arguments to create a Site_interactions.
     * @example
     * // Create one Site_interactions
     * const Site_interactions = await prisma.site_interactions.create({
     *   data: {
     *     // ... data to create a Site_interactions
     *   }
     * })
     * 
     */
    create<T extends site_interactionsCreateArgs>(args: SelectSubset<T, site_interactionsCreateArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Site_interactions.
     * @param {site_interactionsCreateManyArgs} args - Arguments to create many Site_interactions.
     * @example
     * // Create many Site_interactions
     * const site_interactions = await prisma.site_interactions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends site_interactionsCreateManyArgs>(args?: SelectSubset<T, site_interactionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Site_interactions.
     * @param {site_interactionsDeleteArgs} args - Arguments to delete one Site_interactions.
     * @example
     * // Delete one Site_interactions
     * const Site_interactions = await prisma.site_interactions.delete({
     *   where: {
     *     // ... filter to delete one Site_interactions
     *   }
     * })
     * 
     */
    delete<T extends site_interactionsDeleteArgs>(args: SelectSubset<T, site_interactionsDeleteArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Site_interactions.
     * @param {site_interactionsUpdateArgs} args - Arguments to update one Site_interactions.
     * @example
     * // Update one Site_interactions
     * const site_interactions = await prisma.site_interactions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends site_interactionsUpdateArgs>(args: SelectSubset<T, site_interactionsUpdateArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Site_interactions.
     * @param {site_interactionsDeleteManyArgs} args - Arguments to filter Site_interactions to delete.
     * @example
     * // Delete a few Site_interactions
     * const { count } = await prisma.site_interactions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends site_interactionsDeleteManyArgs>(args?: SelectSubset<T, site_interactionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Site_interactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_interactionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Site_interactions
     * const site_interactions = await prisma.site_interactions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends site_interactionsUpdateManyArgs>(args: SelectSubset<T, site_interactionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Site_interactions.
     * @param {site_interactionsUpsertArgs} args - Arguments to update or create a Site_interactions.
     * @example
     * // Update or create a Site_interactions
     * const site_interactions = await prisma.site_interactions.upsert({
     *   create: {
     *     // ... data to create a Site_interactions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Site_interactions we want to update
     *   }
     * })
     */
    upsert<T extends site_interactionsUpsertArgs>(args: SelectSubset<T, site_interactionsUpsertArgs<ExtArgs>>): Prisma__site_interactionsClient<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Site_interactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_interactionsCountArgs} args - Arguments to filter Site_interactions to count.
     * @example
     * // Count the number of Site_interactions
     * const count = await prisma.site_interactions.count({
     *   where: {
     *     // ... the filter for the Site_interactions we want to count
     *   }
     * })
    **/
    count<T extends site_interactionsCountArgs>(
      args?: Subset<T, site_interactionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Site_interactionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Site_interactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Site_interactionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Site_interactionsAggregateArgs>(args: Subset<T, Site_interactionsAggregateArgs>): Prisma.PrismaPromise<GetSite_interactionsAggregateType<T>>

    /**
     * Group by Site_interactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_interactionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends site_interactionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: site_interactionsGroupByArgs['orderBy'] }
        : { orderBy?: site_interactionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, site_interactionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSite_interactionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the site_interactions model
   */
  readonly fields: site_interactionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for site_interactions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__site_interactionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends site_interactions$usersArgs<ExtArgs> = {}>(args?: Subset<T, site_interactions$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the site_interactions model
   */
  interface site_interactionsFieldRefs {
    readonly id: FieldRef<"site_interactions", 'BigInt'>
    readonly user_id: FieldRef<"site_interactions", 'BigInt'>
    readonly session_id: FieldRef<"site_interactions", 'String'>
    readonly page: FieldRef<"site_interactions", 'String'>
    readonly action: FieldRef<"site_interactions", 'String'>
    readonly metadata: FieldRef<"site_interactions", 'String'>
    readonly ip_address: FieldRef<"site_interactions", 'String'>
    readonly user_agent: FieldRef<"site_interactions", 'String'>
    readonly occurred_at: FieldRef<"site_interactions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * site_interactions findUnique
   */
  export type site_interactionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * Filter, which site_interactions to fetch.
     */
    where: site_interactionsWhereUniqueInput
  }

  /**
   * site_interactions findUniqueOrThrow
   */
  export type site_interactionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * Filter, which site_interactions to fetch.
     */
    where: site_interactionsWhereUniqueInput
  }

  /**
   * site_interactions findFirst
   */
  export type site_interactionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * Filter, which site_interactions to fetch.
     */
    where?: site_interactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_interactions to fetch.
     */
    orderBy?: site_interactionsOrderByWithRelationInput | site_interactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for site_interactions.
     */
    cursor?: site_interactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_interactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of site_interactions.
     */
    distinct?: Site_interactionsScalarFieldEnum | Site_interactionsScalarFieldEnum[]
  }

  /**
   * site_interactions findFirstOrThrow
   */
  export type site_interactionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * Filter, which site_interactions to fetch.
     */
    where?: site_interactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_interactions to fetch.
     */
    orderBy?: site_interactionsOrderByWithRelationInput | site_interactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for site_interactions.
     */
    cursor?: site_interactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_interactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of site_interactions.
     */
    distinct?: Site_interactionsScalarFieldEnum | Site_interactionsScalarFieldEnum[]
  }

  /**
   * site_interactions findMany
   */
  export type site_interactionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * Filter, which site_interactions to fetch.
     */
    where?: site_interactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_interactions to fetch.
     */
    orderBy?: site_interactionsOrderByWithRelationInput | site_interactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing site_interactions.
     */
    cursor?: site_interactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_interactions.
     */
    skip?: number
    distinct?: Site_interactionsScalarFieldEnum | Site_interactionsScalarFieldEnum[]
  }

  /**
   * site_interactions create
   */
  export type site_interactionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * The data needed to create a site_interactions.
     */
    data?: XOR<site_interactionsCreateInput, site_interactionsUncheckedCreateInput>
  }

  /**
   * site_interactions createMany
   */
  export type site_interactionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many site_interactions.
     */
    data: site_interactionsCreateManyInput | site_interactionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * site_interactions update
   */
  export type site_interactionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * The data needed to update a site_interactions.
     */
    data: XOR<site_interactionsUpdateInput, site_interactionsUncheckedUpdateInput>
    /**
     * Choose, which site_interactions to update.
     */
    where: site_interactionsWhereUniqueInput
  }

  /**
   * site_interactions updateMany
   */
  export type site_interactionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update site_interactions.
     */
    data: XOR<site_interactionsUpdateManyMutationInput, site_interactionsUncheckedUpdateManyInput>
    /**
     * Filter which site_interactions to update
     */
    where?: site_interactionsWhereInput
    /**
     * Limit how many site_interactions to update.
     */
    limit?: number
  }

  /**
   * site_interactions upsert
   */
  export type site_interactionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * The filter to search for the site_interactions to update in case it exists.
     */
    where: site_interactionsWhereUniqueInput
    /**
     * In case the site_interactions found by the `where` argument doesn't exist, create a new site_interactions with this data.
     */
    create: XOR<site_interactionsCreateInput, site_interactionsUncheckedCreateInput>
    /**
     * In case the site_interactions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<site_interactionsUpdateInput, site_interactionsUncheckedUpdateInput>
  }

  /**
   * site_interactions delete
   */
  export type site_interactionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    /**
     * Filter which site_interactions to delete.
     */
    where: site_interactionsWhereUniqueInput
  }

  /**
   * site_interactions deleteMany
   */
  export type site_interactionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which site_interactions to delete
     */
    where?: site_interactionsWhereInput
    /**
     * Limit how many site_interactions to delete.
     */
    limit?: number
  }

  /**
   * site_interactions.users
   */
  export type site_interactions$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * site_interactions without action
   */
  export type site_interactionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
  }


  /**
   * Model skills
   */

  export type AggregateSkills = {
    _count: SkillsCountAggregateOutputType | null
    _avg: SkillsAvgAggregateOutputType | null
    _sum: SkillsSumAggregateOutputType | null
    _min: SkillsMinAggregateOutputType | null
    _max: SkillsMaxAggregateOutputType | null
  }

  export type SkillsAvgAggregateOutputType = {
    id: number | null
  }

  export type SkillsSumAggregateOutputType = {
    id: bigint | null
  }

  export type SkillsMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    category: string | null
    description: string | null
    created_at: Date | null
  }

  export type SkillsMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    category: string | null
    description: string | null
    created_at: Date | null
  }

  export type SkillsCountAggregateOutputType = {
    id: number
    name: number
    category: number
    description: number
    created_at: number
    _all: number
  }


  export type SkillsAvgAggregateInputType = {
    id?: true
  }

  export type SkillsSumAggregateInputType = {
    id?: true
  }

  export type SkillsMinAggregateInputType = {
    id?: true
    name?: true
    category?: true
    description?: true
    created_at?: true
  }

  export type SkillsMaxAggregateInputType = {
    id?: true
    name?: true
    category?: true
    description?: true
    created_at?: true
  }

  export type SkillsCountAggregateInputType = {
    id?: true
    name?: true
    category?: true
    description?: true
    created_at?: true
    _all?: true
  }

  export type SkillsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which skills to aggregate.
     */
    where?: skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skills to fetch.
     */
    orderBy?: skillsOrderByWithRelationInput | skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned skills
    **/
    _count?: true | SkillsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SkillsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SkillsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkillsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkillsMaxAggregateInputType
  }

  export type GetSkillsAggregateType<T extends SkillsAggregateArgs> = {
        [P in keyof T & keyof AggregateSkills]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkills[P]>
      : GetScalarType<T[P], AggregateSkills[P]>
  }




  export type skillsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: skillsWhereInput
    orderBy?: skillsOrderByWithAggregationInput | skillsOrderByWithAggregationInput[]
    by: SkillsScalarFieldEnum[] | SkillsScalarFieldEnum
    having?: skillsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkillsCountAggregateInputType | true
    _avg?: SkillsAvgAggregateInputType
    _sum?: SkillsSumAggregateInputType
    _min?: SkillsMinAggregateInputType
    _max?: SkillsMaxAggregateInputType
  }

  export type SkillsGroupByOutputType = {
    id: bigint
    name: string
    category: string | null
    description: string | null
    created_at: Date | null
    _count: SkillsCountAggregateOutputType | null
    _avg: SkillsAvgAggregateOutputType | null
    _sum: SkillsSumAggregateOutputType | null
    _min: SkillsMinAggregateOutputType | null
    _max: SkillsMaxAggregateOutputType | null
  }

  type GetSkillsGroupByPayload<T extends skillsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkillsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkillsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkillsGroupByOutputType[P]>
            : GetScalarType<T[P], SkillsGroupByOutputType[P]>
        }
      >
    >


  export type skillsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    category?: boolean
    description?: boolean
    created_at?: boolean
    volunteer_skills?: boolean | skills$volunteer_skillsArgs<ExtArgs>
    _count?: boolean | SkillsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skills"]>



  export type skillsSelectScalar = {
    id?: boolean
    name?: boolean
    category?: boolean
    description?: boolean
    created_at?: boolean
  }

  export type skillsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "category" | "description" | "created_at", ExtArgs["result"]["skills"]>
  export type skillsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    volunteer_skills?: boolean | skills$volunteer_skillsArgs<ExtArgs>
    _count?: boolean | SkillsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $skillsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "skills"
    objects: {
      volunteer_skills: Prisma.$volunteer_skillsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      category: string | null
      description: string | null
      created_at: Date | null
    }, ExtArgs["result"]["skills"]>
    composites: {}
  }

  type skillsGetPayload<S extends boolean | null | undefined | skillsDefaultArgs> = $Result.GetResult<Prisma.$skillsPayload, S>

  type skillsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<skillsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkillsCountAggregateInputType | true
    }

  export interface skillsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['skills'], meta: { name: 'skills' } }
    /**
     * Find zero or one Skills that matches the filter.
     * @param {skillsFindUniqueArgs} args - Arguments to find a Skills
     * @example
     * // Get one Skills
     * const skills = await prisma.skills.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends skillsFindUniqueArgs>(args: SelectSubset<T, skillsFindUniqueArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Skills that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {skillsFindUniqueOrThrowArgs} args - Arguments to find a Skills
     * @example
     * // Get one Skills
     * const skills = await prisma.skills.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends skillsFindUniqueOrThrowArgs>(args: SelectSubset<T, skillsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Skills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skillsFindFirstArgs} args - Arguments to find a Skills
     * @example
     * // Get one Skills
     * const skills = await prisma.skills.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends skillsFindFirstArgs>(args?: SelectSubset<T, skillsFindFirstArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Skills that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skillsFindFirstOrThrowArgs} args - Arguments to find a Skills
     * @example
     * // Get one Skills
     * const skills = await prisma.skills.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends skillsFindFirstOrThrowArgs>(args?: SelectSubset<T, skillsFindFirstOrThrowArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Skills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skillsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Skills
     * const skills = await prisma.skills.findMany()
     * 
     * // Get first 10 Skills
     * const skills = await prisma.skills.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const skillsWithIdOnly = await prisma.skills.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends skillsFindManyArgs>(args?: SelectSubset<T, skillsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Skills.
     * @param {skillsCreateArgs} args - Arguments to create a Skills.
     * @example
     * // Create one Skills
     * const Skills = await prisma.skills.create({
     *   data: {
     *     // ... data to create a Skills
     *   }
     * })
     * 
     */
    create<T extends skillsCreateArgs>(args: SelectSubset<T, skillsCreateArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Skills.
     * @param {skillsCreateManyArgs} args - Arguments to create many Skills.
     * @example
     * // Create many Skills
     * const skills = await prisma.skills.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends skillsCreateManyArgs>(args?: SelectSubset<T, skillsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Skills.
     * @param {skillsDeleteArgs} args - Arguments to delete one Skills.
     * @example
     * // Delete one Skills
     * const Skills = await prisma.skills.delete({
     *   where: {
     *     // ... filter to delete one Skills
     *   }
     * })
     * 
     */
    delete<T extends skillsDeleteArgs>(args: SelectSubset<T, skillsDeleteArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Skills.
     * @param {skillsUpdateArgs} args - Arguments to update one Skills.
     * @example
     * // Update one Skills
     * const skills = await prisma.skills.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends skillsUpdateArgs>(args: SelectSubset<T, skillsUpdateArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Skills.
     * @param {skillsDeleteManyArgs} args - Arguments to filter Skills to delete.
     * @example
     * // Delete a few Skills
     * const { count } = await prisma.skills.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends skillsDeleteManyArgs>(args?: SelectSubset<T, skillsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skillsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Skills
     * const skills = await prisma.skills.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends skillsUpdateManyArgs>(args: SelectSubset<T, skillsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Skills.
     * @param {skillsUpsertArgs} args - Arguments to update or create a Skills.
     * @example
     * // Update or create a Skills
     * const skills = await prisma.skills.upsert({
     *   create: {
     *     // ... data to create a Skills
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Skills we want to update
     *   }
     * })
     */
    upsert<T extends skillsUpsertArgs>(args: SelectSubset<T, skillsUpsertArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skillsCountArgs} args - Arguments to filter Skills to count.
     * @example
     * // Count the number of Skills
     * const count = await prisma.skills.count({
     *   where: {
     *     // ... the filter for the Skills we want to count
     *   }
     * })
    **/
    count<T extends skillsCountArgs>(
      args?: Subset<T, skillsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkillsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkillsAggregateArgs>(args: Subset<T, SkillsAggregateArgs>): Prisma.PrismaPromise<GetSkillsAggregateType<T>>

    /**
     * Group by Skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skillsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends skillsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: skillsGroupByArgs['orderBy'] }
        : { orderBy?: skillsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, skillsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkillsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the skills model
   */
  readonly fields: skillsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for skills.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__skillsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    volunteer_skills<T extends skills$volunteer_skillsArgs<ExtArgs> = {}>(args?: Subset<T, skills$volunteer_skillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the skills model
   */
  interface skillsFieldRefs {
    readonly id: FieldRef<"skills", 'BigInt'>
    readonly name: FieldRef<"skills", 'String'>
    readonly category: FieldRef<"skills", 'String'>
    readonly description: FieldRef<"skills", 'String'>
    readonly created_at: FieldRef<"skills", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * skills findUnique
   */
  export type skillsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * Filter, which skills to fetch.
     */
    where: skillsWhereUniqueInput
  }

  /**
   * skills findUniqueOrThrow
   */
  export type skillsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * Filter, which skills to fetch.
     */
    where: skillsWhereUniqueInput
  }

  /**
   * skills findFirst
   */
  export type skillsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * Filter, which skills to fetch.
     */
    where?: skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skills to fetch.
     */
    orderBy?: skillsOrderByWithRelationInput | skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for skills.
     */
    cursor?: skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of skills.
     */
    distinct?: SkillsScalarFieldEnum | SkillsScalarFieldEnum[]
  }

  /**
   * skills findFirstOrThrow
   */
  export type skillsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * Filter, which skills to fetch.
     */
    where?: skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skills to fetch.
     */
    orderBy?: skillsOrderByWithRelationInput | skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for skills.
     */
    cursor?: skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of skills.
     */
    distinct?: SkillsScalarFieldEnum | SkillsScalarFieldEnum[]
  }

  /**
   * skills findMany
   */
  export type skillsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * Filter, which skills to fetch.
     */
    where?: skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skills to fetch.
     */
    orderBy?: skillsOrderByWithRelationInput | skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing skills.
     */
    cursor?: skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skills.
     */
    skip?: number
    distinct?: SkillsScalarFieldEnum | SkillsScalarFieldEnum[]
  }

  /**
   * skills create
   */
  export type skillsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * The data needed to create a skills.
     */
    data: XOR<skillsCreateInput, skillsUncheckedCreateInput>
  }

  /**
   * skills createMany
   */
  export type skillsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many skills.
     */
    data: skillsCreateManyInput | skillsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * skills update
   */
  export type skillsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * The data needed to update a skills.
     */
    data: XOR<skillsUpdateInput, skillsUncheckedUpdateInput>
    /**
     * Choose, which skills to update.
     */
    where: skillsWhereUniqueInput
  }

  /**
   * skills updateMany
   */
  export type skillsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update skills.
     */
    data: XOR<skillsUpdateManyMutationInput, skillsUncheckedUpdateManyInput>
    /**
     * Filter which skills to update
     */
    where?: skillsWhereInput
    /**
     * Limit how many skills to update.
     */
    limit?: number
  }

  /**
   * skills upsert
   */
  export type skillsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * The filter to search for the skills to update in case it exists.
     */
    where: skillsWhereUniqueInput
    /**
     * In case the skills found by the `where` argument doesn't exist, create a new skills with this data.
     */
    create: XOR<skillsCreateInput, skillsUncheckedCreateInput>
    /**
     * In case the skills was found with the provided `where` argument, update it with this data.
     */
    update: XOR<skillsUpdateInput, skillsUncheckedUpdateInput>
  }

  /**
   * skills delete
   */
  export type skillsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
    /**
     * Filter which skills to delete.
     */
    where: skillsWhereUniqueInput
  }

  /**
   * skills deleteMany
   */
  export type skillsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which skills to delete
     */
    where?: skillsWhereInput
    /**
     * Limit how many skills to delete.
     */
    limit?: number
  }

  /**
   * skills.volunteer_skills
   */
  export type skills$volunteer_skillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    where?: volunteer_skillsWhereInput
    orderBy?: volunteer_skillsOrderByWithRelationInput | volunteer_skillsOrderByWithRelationInput[]
    cursor?: volunteer_skillsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Volunteer_skillsScalarFieldEnum | Volunteer_skillsScalarFieldEnum[]
  }

  /**
   * skills without action
   */
  export type skillsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skills
     */
    select?: skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skills
     */
    omit?: skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skillsInclude<ExtArgs> | null
  }


  /**
   * Model testimonials
   */

  export type AggregateTestimonials = {
    _count: TestimonialsCountAggregateOutputType | null
    _avg: TestimonialsAvgAggregateOutputType | null
    _sum: TestimonialsSumAggregateOutputType | null
    _min: TestimonialsMinAggregateOutputType | null
    _max: TestimonialsMaxAggregateOutputType | null
  }

  export type TestimonialsAvgAggregateOutputType = {
    id: number | null
  }

  export type TestimonialsSumAggregateOutputType = {
    id: bigint | null
  }

  export type TestimonialsMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    role: string | null
    message: string | null
    image_url: string | null
    type: $Enums.testimonials_type | null
    language: $Enums.testimonials_language | null
    translation_group_id: string | null
    is_featured: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TestimonialsMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    role: string | null
    message: string | null
    image_url: string | null
    type: $Enums.testimonials_type | null
    language: $Enums.testimonials_language | null
    translation_group_id: string | null
    is_featured: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TestimonialsCountAggregateOutputType = {
    id: number
    name: number
    role: number
    message: number
    image_url: number
    type: number
    language: number
    translation_group_id: number
    is_featured: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TestimonialsAvgAggregateInputType = {
    id?: true
  }

  export type TestimonialsSumAggregateInputType = {
    id?: true
  }

  export type TestimonialsMinAggregateInputType = {
    id?: true
    name?: true
    role?: true
    message?: true
    image_url?: true
    type?: true
    language?: true
    translation_group_id?: true
    is_featured?: true
    created_at?: true
    updated_at?: true
  }

  export type TestimonialsMaxAggregateInputType = {
    id?: true
    name?: true
    role?: true
    message?: true
    image_url?: true
    type?: true
    language?: true
    translation_group_id?: true
    is_featured?: true
    created_at?: true
    updated_at?: true
  }

  export type TestimonialsCountAggregateInputType = {
    id?: true
    name?: true
    role?: true
    message?: true
    image_url?: true
    type?: true
    language?: true
    translation_group_id?: true
    is_featured?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TestimonialsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which testimonials to aggregate.
     */
    where?: testimonialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of testimonials to fetch.
     */
    orderBy?: testimonialsOrderByWithRelationInput | testimonialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: testimonialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` testimonials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` testimonials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned testimonials
    **/
    _count?: true | TestimonialsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TestimonialsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TestimonialsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TestimonialsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TestimonialsMaxAggregateInputType
  }

  export type GetTestimonialsAggregateType<T extends TestimonialsAggregateArgs> = {
        [P in keyof T & keyof AggregateTestimonials]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTestimonials[P]>
      : GetScalarType<T[P], AggregateTestimonials[P]>
  }




  export type testimonialsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: testimonialsWhereInput
    orderBy?: testimonialsOrderByWithAggregationInput | testimonialsOrderByWithAggregationInput[]
    by: TestimonialsScalarFieldEnum[] | TestimonialsScalarFieldEnum
    having?: testimonialsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TestimonialsCountAggregateInputType | true
    _avg?: TestimonialsAvgAggregateInputType
    _sum?: TestimonialsSumAggregateInputType
    _min?: TestimonialsMinAggregateInputType
    _max?: TestimonialsMaxAggregateInputType
  }

  export type TestimonialsGroupByOutputType = {
    id: bigint
    name: string
    role: string | null
    message: string
    image_url: string | null
    type: $Enums.testimonials_type
    language: $Enums.testimonials_language | null
    translation_group_id: string | null
    is_featured: boolean | null
    created_at: Date | null
    updated_at: Date | null
    _count: TestimonialsCountAggregateOutputType | null
    _avg: TestimonialsAvgAggregateOutputType | null
    _sum: TestimonialsSumAggregateOutputType | null
    _min: TestimonialsMinAggregateOutputType | null
    _max: TestimonialsMaxAggregateOutputType | null
  }

  type GetTestimonialsGroupByPayload<T extends testimonialsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TestimonialsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TestimonialsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TestimonialsGroupByOutputType[P]>
            : GetScalarType<T[P], TestimonialsGroupByOutputType[P]>
        }
      >
    >


  export type testimonialsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    role?: boolean
    message?: boolean
    image_url?: boolean
    type?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_featured?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["testimonials"]>



  export type testimonialsSelectScalar = {
    id?: boolean
    name?: boolean
    role?: boolean
    message?: boolean
    image_url?: boolean
    type?: boolean
    language?: boolean
    translation_group_id?: boolean
    is_featured?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type testimonialsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "role" | "message" | "image_url" | "type" | "language" | "translation_group_id" | "is_featured" | "created_at" | "updated_at", ExtArgs["result"]["testimonials"]>

  export type $testimonialsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "testimonials"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      role: string | null
      message: string
      image_url: string | null
      type: $Enums.testimonials_type
      language: $Enums.testimonials_language | null
      translation_group_id: string | null
      is_featured: boolean | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["testimonials"]>
    composites: {}
  }

  type testimonialsGetPayload<S extends boolean | null | undefined | testimonialsDefaultArgs> = $Result.GetResult<Prisma.$testimonialsPayload, S>

  type testimonialsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<testimonialsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TestimonialsCountAggregateInputType | true
    }

  export interface testimonialsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['testimonials'], meta: { name: 'testimonials' } }
    /**
     * Find zero or one Testimonials that matches the filter.
     * @param {testimonialsFindUniqueArgs} args - Arguments to find a Testimonials
     * @example
     * // Get one Testimonials
     * const testimonials = await prisma.testimonials.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends testimonialsFindUniqueArgs>(args: SelectSubset<T, testimonialsFindUniqueArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Testimonials that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {testimonialsFindUniqueOrThrowArgs} args - Arguments to find a Testimonials
     * @example
     * // Get one Testimonials
     * const testimonials = await prisma.testimonials.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends testimonialsFindUniqueOrThrowArgs>(args: SelectSubset<T, testimonialsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Testimonials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {testimonialsFindFirstArgs} args - Arguments to find a Testimonials
     * @example
     * // Get one Testimonials
     * const testimonials = await prisma.testimonials.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends testimonialsFindFirstArgs>(args?: SelectSubset<T, testimonialsFindFirstArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Testimonials that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {testimonialsFindFirstOrThrowArgs} args - Arguments to find a Testimonials
     * @example
     * // Get one Testimonials
     * const testimonials = await prisma.testimonials.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends testimonialsFindFirstOrThrowArgs>(args?: SelectSubset<T, testimonialsFindFirstOrThrowArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Testimonials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {testimonialsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Testimonials
     * const testimonials = await prisma.testimonials.findMany()
     * 
     * // Get first 10 Testimonials
     * const testimonials = await prisma.testimonials.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const testimonialsWithIdOnly = await prisma.testimonials.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends testimonialsFindManyArgs>(args?: SelectSubset<T, testimonialsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Testimonials.
     * @param {testimonialsCreateArgs} args - Arguments to create a Testimonials.
     * @example
     * // Create one Testimonials
     * const Testimonials = await prisma.testimonials.create({
     *   data: {
     *     // ... data to create a Testimonials
     *   }
     * })
     * 
     */
    create<T extends testimonialsCreateArgs>(args: SelectSubset<T, testimonialsCreateArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Testimonials.
     * @param {testimonialsCreateManyArgs} args - Arguments to create many Testimonials.
     * @example
     * // Create many Testimonials
     * const testimonials = await prisma.testimonials.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends testimonialsCreateManyArgs>(args?: SelectSubset<T, testimonialsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Testimonials.
     * @param {testimonialsDeleteArgs} args - Arguments to delete one Testimonials.
     * @example
     * // Delete one Testimonials
     * const Testimonials = await prisma.testimonials.delete({
     *   where: {
     *     // ... filter to delete one Testimonials
     *   }
     * })
     * 
     */
    delete<T extends testimonialsDeleteArgs>(args: SelectSubset<T, testimonialsDeleteArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Testimonials.
     * @param {testimonialsUpdateArgs} args - Arguments to update one Testimonials.
     * @example
     * // Update one Testimonials
     * const testimonials = await prisma.testimonials.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends testimonialsUpdateArgs>(args: SelectSubset<T, testimonialsUpdateArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Testimonials.
     * @param {testimonialsDeleteManyArgs} args - Arguments to filter Testimonials to delete.
     * @example
     * // Delete a few Testimonials
     * const { count } = await prisma.testimonials.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends testimonialsDeleteManyArgs>(args?: SelectSubset<T, testimonialsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Testimonials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {testimonialsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Testimonials
     * const testimonials = await prisma.testimonials.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends testimonialsUpdateManyArgs>(args: SelectSubset<T, testimonialsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Testimonials.
     * @param {testimonialsUpsertArgs} args - Arguments to update or create a Testimonials.
     * @example
     * // Update or create a Testimonials
     * const testimonials = await prisma.testimonials.upsert({
     *   create: {
     *     // ... data to create a Testimonials
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Testimonials we want to update
     *   }
     * })
     */
    upsert<T extends testimonialsUpsertArgs>(args: SelectSubset<T, testimonialsUpsertArgs<ExtArgs>>): Prisma__testimonialsClient<$Result.GetResult<Prisma.$testimonialsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Testimonials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {testimonialsCountArgs} args - Arguments to filter Testimonials to count.
     * @example
     * // Count the number of Testimonials
     * const count = await prisma.testimonials.count({
     *   where: {
     *     // ... the filter for the Testimonials we want to count
     *   }
     * })
    **/
    count<T extends testimonialsCountArgs>(
      args?: Subset<T, testimonialsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TestimonialsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Testimonials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestimonialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TestimonialsAggregateArgs>(args: Subset<T, TestimonialsAggregateArgs>): Prisma.PrismaPromise<GetTestimonialsAggregateType<T>>

    /**
     * Group by Testimonials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {testimonialsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends testimonialsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: testimonialsGroupByArgs['orderBy'] }
        : { orderBy?: testimonialsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, testimonialsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTestimonialsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the testimonials model
   */
  readonly fields: testimonialsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for testimonials.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__testimonialsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the testimonials model
   */
  interface testimonialsFieldRefs {
    readonly id: FieldRef<"testimonials", 'BigInt'>
    readonly name: FieldRef<"testimonials", 'String'>
    readonly role: FieldRef<"testimonials", 'String'>
    readonly message: FieldRef<"testimonials", 'String'>
    readonly image_url: FieldRef<"testimonials", 'String'>
    readonly type: FieldRef<"testimonials", 'testimonials_type'>
    readonly language: FieldRef<"testimonials", 'testimonials_language'>
    readonly translation_group_id: FieldRef<"testimonials", 'String'>
    readonly is_featured: FieldRef<"testimonials", 'Boolean'>
    readonly created_at: FieldRef<"testimonials", 'DateTime'>
    readonly updated_at: FieldRef<"testimonials", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * testimonials findUnique
   */
  export type testimonialsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * Filter, which testimonials to fetch.
     */
    where: testimonialsWhereUniqueInput
  }

  /**
   * testimonials findUniqueOrThrow
   */
  export type testimonialsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * Filter, which testimonials to fetch.
     */
    where: testimonialsWhereUniqueInput
  }

  /**
   * testimonials findFirst
   */
  export type testimonialsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * Filter, which testimonials to fetch.
     */
    where?: testimonialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of testimonials to fetch.
     */
    orderBy?: testimonialsOrderByWithRelationInput | testimonialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for testimonials.
     */
    cursor?: testimonialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` testimonials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` testimonials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of testimonials.
     */
    distinct?: TestimonialsScalarFieldEnum | TestimonialsScalarFieldEnum[]
  }

  /**
   * testimonials findFirstOrThrow
   */
  export type testimonialsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * Filter, which testimonials to fetch.
     */
    where?: testimonialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of testimonials to fetch.
     */
    orderBy?: testimonialsOrderByWithRelationInput | testimonialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for testimonials.
     */
    cursor?: testimonialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` testimonials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` testimonials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of testimonials.
     */
    distinct?: TestimonialsScalarFieldEnum | TestimonialsScalarFieldEnum[]
  }

  /**
   * testimonials findMany
   */
  export type testimonialsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * Filter, which testimonials to fetch.
     */
    where?: testimonialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of testimonials to fetch.
     */
    orderBy?: testimonialsOrderByWithRelationInput | testimonialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing testimonials.
     */
    cursor?: testimonialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` testimonials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` testimonials.
     */
    skip?: number
    distinct?: TestimonialsScalarFieldEnum | TestimonialsScalarFieldEnum[]
  }

  /**
   * testimonials create
   */
  export type testimonialsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * The data needed to create a testimonials.
     */
    data: XOR<testimonialsCreateInput, testimonialsUncheckedCreateInput>
  }

  /**
   * testimonials createMany
   */
  export type testimonialsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many testimonials.
     */
    data: testimonialsCreateManyInput | testimonialsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * testimonials update
   */
  export type testimonialsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * The data needed to update a testimonials.
     */
    data: XOR<testimonialsUpdateInput, testimonialsUncheckedUpdateInput>
    /**
     * Choose, which testimonials to update.
     */
    where: testimonialsWhereUniqueInput
  }

  /**
   * testimonials updateMany
   */
  export type testimonialsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update testimonials.
     */
    data: XOR<testimonialsUpdateManyMutationInput, testimonialsUncheckedUpdateManyInput>
    /**
     * Filter which testimonials to update
     */
    where?: testimonialsWhereInput
    /**
     * Limit how many testimonials to update.
     */
    limit?: number
  }

  /**
   * testimonials upsert
   */
  export type testimonialsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * The filter to search for the testimonials to update in case it exists.
     */
    where: testimonialsWhereUniqueInput
    /**
     * In case the testimonials found by the `where` argument doesn't exist, create a new testimonials with this data.
     */
    create: XOR<testimonialsCreateInput, testimonialsUncheckedCreateInput>
    /**
     * In case the testimonials was found with the provided `where` argument, update it with this data.
     */
    update: XOR<testimonialsUpdateInput, testimonialsUncheckedUpdateInput>
  }

  /**
   * testimonials delete
   */
  export type testimonialsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
    /**
     * Filter which testimonials to delete.
     */
    where: testimonialsWhereUniqueInput
  }

  /**
   * testimonials deleteMany
   */
  export type testimonialsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which testimonials to delete
     */
    where?: testimonialsWhereInput
    /**
     * Limit how many testimonials to delete.
     */
    limit?: number
  }

  /**
   * testimonials without action
   */
  export type testimonialsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the testimonials
     */
    select?: testimonialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the testimonials
     */
    omit?: testimonialsOmit<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: bigint | null
  }

  export type UsersMinAggregateOutputType = {
    id: bigint | null
    full_name: string | null
    email: string | null
    phone: string | null
    password_hash: string | null
    role: $Enums.users_role | null
    profile_image_url: string | null
    language_preference: $Enums.users_language_preference | null
    email_verified: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: bigint | null
    full_name: string | null
    email: string | null
    phone: string | null
    password_hash: string | null
    role: $Enums.users_role | null
    profile_image_url: string | null
    language_preference: $Enums.users_language_preference | null
    email_verified: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    full_name: number
    email: number
    phone: number
    password_hash: number
    role: number
    profile_image_url: number
    language_preference: number
    email_verified: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    full_name?: true
    email?: true
    phone?: true
    password_hash?: true
    role?: true
    profile_image_url?: true
    language_preference?: true
    email_verified?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    full_name?: true
    email?: true
    phone?: true
    password_hash?: true
    role?: true
    profile_image_url?: true
    language_preference?: true
    email_verified?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    full_name?: true
    email?: true
    phone?: true
    password_hash?: true
    role?: true
    profile_image_url?: true
    language_preference?: true
    email_verified?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: bigint
    full_name: string
    email: string
    phone: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url: string | null
    language_preference: $Enums.users_language_preference | null
    email_verified: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    full_name?: boolean
    email?: boolean
    phone?: boolean
    password_hash?: boolean
    role?: boolean
    profile_image_url?: boolean
    language_preference?: boolean
    email_verified?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    campaigns?: boolean | users$campaignsArgs<ExtArgs>
    documents?: boolean | users$documentsArgs<ExtArgs>
    donor_profiles?: boolean | users$donor_profilesArgs<ExtArgs>
    event_participants?: boolean | users$event_participantsArgs<ExtArgs>
    events?: boolean | users$eventsArgs<ExtArgs>
    media?: boolean | users$mediaArgs<ExtArgs>
    posts?: boolean | users$postsArgs<ExtArgs>
    programs?: boolean | users$programsArgs<ExtArgs>
    site_interactions?: boolean | users$site_interactionsArgs<ExtArgs>
    volunteer_profiles?: boolean | users$volunteer_profilesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>



  export type usersSelectScalar = {
    id?: boolean
    full_name?: boolean
    email?: boolean
    phone?: boolean
    password_hash?: boolean
    role?: boolean
    profile_image_url?: boolean
    language_preference?: boolean
    email_verified?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "full_name" | "email" | "phone" | "password_hash" | "role" | "profile_image_url" | "language_preference" | "email_verified" | "created_at" | "updated_at" | "deleted_at", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaigns?: boolean | users$campaignsArgs<ExtArgs>
    documents?: boolean | users$documentsArgs<ExtArgs>
    donor_profiles?: boolean | users$donor_profilesArgs<ExtArgs>
    event_participants?: boolean | users$event_participantsArgs<ExtArgs>
    events?: boolean | users$eventsArgs<ExtArgs>
    media?: boolean | users$mediaArgs<ExtArgs>
    posts?: boolean | users$postsArgs<ExtArgs>
    programs?: boolean | users$programsArgs<ExtArgs>
    site_interactions?: boolean | users$site_interactionsArgs<ExtArgs>
    volunteer_profiles?: boolean | users$volunteer_profilesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      campaigns: Prisma.$campaignsPayload<ExtArgs>[]
      documents: Prisma.$documentsPayload<ExtArgs>[]
      donor_profiles: Prisma.$donor_profilesPayload<ExtArgs> | null
      event_participants: Prisma.$event_participantsPayload<ExtArgs>[]
      events: Prisma.$eventsPayload<ExtArgs>[]
      media: Prisma.$mediaPayload<ExtArgs>[]
      posts: Prisma.$postsPayload<ExtArgs>[]
      programs: Prisma.$programsPayload<ExtArgs>[]
      site_interactions: Prisma.$site_interactionsPayload<ExtArgs>[]
      volunteer_profiles: Prisma.$volunteer_profilesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      full_name: string
      email: string
      phone: string | null
      password_hash: string
      role: $Enums.users_role
      profile_image_url: string | null
      language_preference: $Enums.users_language_preference | null
      email_verified: boolean | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    campaigns<T extends users$campaignsArgs<ExtArgs> = {}>(args?: Subset<T, users$campaignsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$campaignsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends users$documentsArgs<ExtArgs> = {}>(args?: Subset<T, users$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    donor_profiles<T extends users$donor_profilesArgs<ExtArgs> = {}>(args?: Subset<T, users$donor_profilesArgs<ExtArgs>>): Prisma__donor_profilesClient<$Result.GetResult<Prisma.$donor_profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    event_participants<T extends users$event_participantsArgs<ExtArgs> = {}>(args?: Subset<T, users$event_participantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$event_participantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends users$eventsArgs<ExtArgs> = {}>(args?: Subset<T, users$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    media<T extends users$mediaArgs<ExtArgs> = {}>(args?: Subset<T, users$mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    posts<T extends users$postsArgs<ExtArgs> = {}>(args?: Subset<T, users$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    programs<T extends users$programsArgs<ExtArgs> = {}>(args?: Subset<T, users$programsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$programsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    site_interactions<T extends users$site_interactionsArgs<ExtArgs> = {}>(args?: Subset<T, users$site_interactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_interactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    volunteer_profiles<T extends users$volunteer_profilesArgs<ExtArgs> = {}>(args?: Subset<T, users$volunteer_profilesArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'BigInt'>
    readonly full_name: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly phone: FieldRef<"users", 'String'>
    readonly password_hash: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'users_role'>
    readonly profile_image_url: FieldRef<"users", 'String'>
    readonly language_preference: FieldRef<"users", 'users_language_preference'>
    readonly email_verified: FieldRef<"users", 'Boolean'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly deleted_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.campaigns
   */
  export type users$campaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the campaigns
     */
    select?: campaignsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the campaigns
     */
    omit?: campaignsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: campaignsInclude<ExtArgs> | null
    where?: campaignsWhereInput
    orderBy?: campaignsOrderByWithRelationInput | campaignsOrderByWithRelationInput[]
    cursor?: campaignsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CampaignsScalarFieldEnum | CampaignsScalarFieldEnum[]
  }

  /**
   * users.documents
   */
  export type users$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    where?: documentsWhereInput
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    cursor?: documentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * users.donor_profiles
   */
  export type users$donor_profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the donor_profiles
     */
    select?: donor_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the donor_profiles
     */
    omit?: donor_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: donor_profilesInclude<ExtArgs> | null
    where?: donor_profilesWhereInput
  }

  /**
   * users.event_participants
   */
  export type users$event_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_participants
     */
    select?: event_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_participants
     */
    omit?: event_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_participantsInclude<ExtArgs> | null
    where?: event_participantsWhereInput
    orderBy?: event_participantsOrderByWithRelationInput | event_participantsOrderByWithRelationInput[]
    cursor?: event_participantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Event_participantsScalarFieldEnum | Event_participantsScalarFieldEnum[]
  }

  /**
   * users.events
   */
  export type users$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    where?: eventsWhereInput
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    cursor?: eventsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * users.media
   */
  export type users$mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the media
     */
    select?: mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the media
     */
    omit?: mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mediaInclude<ExtArgs> | null
    where?: mediaWhereInput
    orderBy?: mediaOrderByWithRelationInput | mediaOrderByWithRelationInput[]
    cursor?: mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * users.posts
   */
  export type users$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the posts
     */
    omit?: postsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    where?: postsWhereInput
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    cursor?: postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * users.programs
   */
  export type users$programsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the programs
     */
    select?: programsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the programs
     */
    omit?: programsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: programsInclude<ExtArgs> | null
    where?: programsWhereInput
    orderBy?: programsOrderByWithRelationInput | programsOrderByWithRelationInput[]
    cursor?: programsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProgramsScalarFieldEnum | ProgramsScalarFieldEnum[]
  }

  /**
   * users.site_interactions
   */
  export type users$site_interactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_interactions
     */
    select?: site_interactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_interactions
     */
    omit?: site_interactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_interactionsInclude<ExtArgs> | null
    where?: site_interactionsWhereInput
    orderBy?: site_interactionsOrderByWithRelationInput | site_interactionsOrderByWithRelationInput[]
    cursor?: site_interactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Site_interactionsScalarFieldEnum | Site_interactionsScalarFieldEnum[]
  }

  /**
   * users.volunteer_profiles
   */
  export type users$volunteer_profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    where?: volunteer_profilesWhereInput
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model volunteer_profiles
   */

  export type AggregateVolunteer_profiles = {
    _count: Volunteer_profilesCountAggregateOutputType | null
    _avg: Volunteer_profilesAvgAggregateOutputType | null
    _sum: Volunteer_profilesSumAggregateOutputType | null
    _min: Volunteer_profilesMinAggregateOutputType | null
    _max: Volunteer_profilesMaxAggregateOutputType | null
  }

  export type Volunteer_profilesAvgAggregateOutputType = {
    user_id: number | null
    total_hours: number | null
    registered_events_count: number | null
    rating: Decimal | null
  }

  export type Volunteer_profilesSumAggregateOutputType = {
    user_id: bigint | null
    total_hours: number | null
    registered_events_count: number | null
    rating: Decimal | null
  }

  export type Volunteer_profilesMinAggregateOutputType = {
    user_id: bigint | null
    area_of_expertise: string | null
    location: string | null
    availability: string | null
    motivation: string | null
    total_hours: number | null
    certificate_url: string | null
    registered_events_count: number | null
    training_completed: boolean | null
    background_check_status: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name: string | null
    emergency_contact_phone: string | null
    rating: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Volunteer_profilesMaxAggregateOutputType = {
    user_id: bigint | null
    area_of_expertise: string | null
    location: string | null
    availability: string | null
    motivation: string | null
    total_hours: number | null
    certificate_url: string | null
    registered_events_count: number | null
    training_completed: boolean | null
    background_check_status: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name: string | null
    emergency_contact_phone: string | null
    rating: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Volunteer_profilesCountAggregateOutputType = {
    user_id: number
    area_of_expertise: number
    location: number
    availability: number
    motivation: number
    total_hours: number
    certificate_url: number
    registered_events_count: number
    training_completed: number
    background_check_status: number
    emergency_contact_name: number
    emergency_contact_phone: number
    rating: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Volunteer_profilesAvgAggregateInputType = {
    user_id?: true
    total_hours?: true
    registered_events_count?: true
    rating?: true
  }

  export type Volunteer_profilesSumAggregateInputType = {
    user_id?: true
    total_hours?: true
    registered_events_count?: true
    rating?: true
  }

  export type Volunteer_profilesMinAggregateInputType = {
    user_id?: true
    area_of_expertise?: true
    location?: true
    availability?: true
    motivation?: true
    total_hours?: true
    certificate_url?: true
    registered_events_count?: true
    training_completed?: true
    background_check_status?: true
    emergency_contact_name?: true
    emergency_contact_phone?: true
    rating?: true
    created_at?: true
    updated_at?: true
  }

  export type Volunteer_profilesMaxAggregateInputType = {
    user_id?: true
    area_of_expertise?: true
    location?: true
    availability?: true
    motivation?: true
    total_hours?: true
    certificate_url?: true
    registered_events_count?: true
    training_completed?: true
    background_check_status?: true
    emergency_contact_name?: true
    emergency_contact_phone?: true
    rating?: true
    created_at?: true
    updated_at?: true
  }

  export type Volunteer_profilesCountAggregateInputType = {
    user_id?: true
    area_of_expertise?: true
    location?: true
    availability?: true
    motivation?: true
    total_hours?: true
    certificate_url?: true
    registered_events_count?: true
    training_completed?: true
    background_check_status?: true
    emergency_contact_name?: true
    emergency_contact_phone?: true
    rating?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Volunteer_profilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which volunteer_profiles to aggregate.
     */
    where?: volunteer_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_profiles to fetch.
     */
    orderBy?: volunteer_profilesOrderByWithRelationInput | volunteer_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: volunteer_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned volunteer_profiles
    **/
    _count?: true | Volunteer_profilesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Volunteer_profilesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Volunteer_profilesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Volunteer_profilesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Volunteer_profilesMaxAggregateInputType
  }

  export type GetVolunteer_profilesAggregateType<T extends Volunteer_profilesAggregateArgs> = {
        [P in keyof T & keyof AggregateVolunteer_profiles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVolunteer_profiles[P]>
      : GetScalarType<T[P], AggregateVolunteer_profiles[P]>
  }




  export type volunteer_profilesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: volunteer_profilesWhereInput
    orderBy?: volunteer_profilesOrderByWithAggregationInput | volunteer_profilesOrderByWithAggregationInput[]
    by: Volunteer_profilesScalarFieldEnum[] | Volunteer_profilesScalarFieldEnum
    having?: volunteer_profilesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Volunteer_profilesCountAggregateInputType | true
    _avg?: Volunteer_profilesAvgAggregateInputType
    _sum?: Volunteer_profilesSumAggregateInputType
    _min?: Volunteer_profilesMinAggregateInputType
    _max?: Volunteer_profilesMaxAggregateInputType
  }

  export type Volunteer_profilesGroupByOutputType = {
    user_id: bigint
    area_of_expertise: string | null
    location: string | null
    availability: string | null
    motivation: string | null
    total_hours: number | null
    certificate_url: string | null
    registered_events_count: number | null
    training_completed: boolean | null
    background_check_status: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name: string | null
    emergency_contact_phone: string | null
    rating: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    _count: Volunteer_profilesCountAggregateOutputType | null
    _avg: Volunteer_profilesAvgAggregateOutputType | null
    _sum: Volunteer_profilesSumAggregateOutputType | null
    _min: Volunteer_profilesMinAggregateOutputType | null
    _max: Volunteer_profilesMaxAggregateOutputType | null
  }

  type GetVolunteer_profilesGroupByPayload<T extends volunteer_profilesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Volunteer_profilesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Volunteer_profilesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Volunteer_profilesGroupByOutputType[P]>
            : GetScalarType<T[P], Volunteer_profilesGroupByOutputType[P]>
        }
      >
    >


  export type volunteer_profilesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    area_of_expertise?: boolean
    location?: boolean
    availability?: boolean
    motivation?: boolean
    total_hours?: boolean
    certificate_url?: boolean
    registered_events_count?: boolean
    training_completed?: boolean
    background_check_status?: boolean
    emergency_contact_name?: boolean
    emergency_contact_phone?: boolean
    rating?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    volunteer_skills?: boolean | volunteer_profiles$volunteer_skillsArgs<ExtArgs>
    _count?: boolean | Volunteer_profilesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["volunteer_profiles"]>



  export type volunteer_profilesSelectScalar = {
    user_id?: boolean
    area_of_expertise?: boolean
    location?: boolean
    availability?: boolean
    motivation?: boolean
    total_hours?: boolean
    certificate_url?: boolean
    registered_events_count?: boolean
    training_completed?: boolean
    background_check_status?: boolean
    emergency_contact_name?: boolean
    emergency_contact_phone?: boolean
    rating?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type volunteer_profilesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "area_of_expertise" | "location" | "availability" | "motivation" | "total_hours" | "certificate_url" | "registered_events_count" | "training_completed" | "background_check_status" | "emergency_contact_name" | "emergency_contact_phone" | "rating" | "created_at" | "updated_at", ExtArgs["result"]["volunteer_profiles"]>
  export type volunteer_profilesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    volunteer_skills?: boolean | volunteer_profiles$volunteer_skillsArgs<ExtArgs>
    _count?: boolean | Volunteer_profilesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $volunteer_profilesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "volunteer_profiles"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      volunteer_skills: Prisma.$volunteer_skillsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: bigint
      area_of_expertise: string | null
      location: string | null
      availability: string | null
      motivation: string | null
      total_hours: number | null
      certificate_url: string | null
      registered_events_count: number | null
      training_completed: boolean | null
      background_check_status: $Enums.volunteer_profiles_background_check_status | null
      emergency_contact_name: string | null
      emergency_contact_phone: string | null
      rating: Prisma.Decimal | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["volunteer_profiles"]>
    composites: {}
  }

  type volunteer_profilesGetPayload<S extends boolean | null | undefined | volunteer_profilesDefaultArgs> = $Result.GetResult<Prisma.$volunteer_profilesPayload, S>

  type volunteer_profilesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<volunteer_profilesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Volunteer_profilesCountAggregateInputType | true
    }

  export interface volunteer_profilesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['volunteer_profiles'], meta: { name: 'volunteer_profiles' } }
    /**
     * Find zero or one Volunteer_profiles that matches the filter.
     * @param {volunteer_profilesFindUniqueArgs} args - Arguments to find a Volunteer_profiles
     * @example
     * // Get one Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends volunteer_profilesFindUniqueArgs>(args: SelectSubset<T, volunteer_profilesFindUniqueArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Volunteer_profiles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {volunteer_profilesFindUniqueOrThrowArgs} args - Arguments to find a Volunteer_profiles
     * @example
     * // Get one Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends volunteer_profilesFindUniqueOrThrowArgs>(args: SelectSubset<T, volunteer_profilesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Volunteer_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_profilesFindFirstArgs} args - Arguments to find a Volunteer_profiles
     * @example
     * // Get one Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends volunteer_profilesFindFirstArgs>(args?: SelectSubset<T, volunteer_profilesFindFirstArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Volunteer_profiles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_profilesFindFirstOrThrowArgs} args - Arguments to find a Volunteer_profiles
     * @example
     * // Get one Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends volunteer_profilesFindFirstOrThrowArgs>(args?: SelectSubset<T, volunteer_profilesFindFirstOrThrowArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Volunteer_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_profilesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.findMany()
     * 
     * // Get first 10 Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const volunteer_profilesWithUser_idOnly = await prisma.volunteer_profiles.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends volunteer_profilesFindManyArgs>(args?: SelectSubset<T, volunteer_profilesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Volunteer_profiles.
     * @param {volunteer_profilesCreateArgs} args - Arguments to create a Volunteer_profiles.
     * @example
     * // Create one Volunteer_profiles
     * const Volunteer_profiles = await prisma.volunteer_profiles.create({
     *   data: {
     *     // ... data to create a Volunteer_profiles
     *   }
     * })
     * 
     */
    create<T extends volunteer_profilesCreateArgs>(args: SelectSubset<T, volunteer_profilesCreateArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Volunteer_profiles.
     * @param {volunteer_profilesCreateManyArgs} args - Arguments to create many Volunteer_profiles.
     * @example
     * // Create many Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends volunteer_profilesCreateManyArgs>(args?: SelectSubset<T, volunteer_profilesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Volunteer_profiles.
     * @param {volunteer_profilesDeleteArgs} args - Arguments to delete one Volunteer_profiles.
     * @example
     * // Delete one Volunteer_profiles
     * const Volunteer_profiles = await prisma.volunteer_profiles.delete({
     *   where: {
     *     // ... filter to delete one Volunteer_profiles
     *   }
     * })
     * 
     */
    delete<T extends volunteer_profilesDeleteArgs>(args: SelectSubset<T, volunteer_profilesDeleteArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Volunteer_profiles.
     * @param {volunteer_profilesUpdateArgs} args - Arguments to update one Volunteer_profiles.
     * @example
     * // Update one Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends volunteer_profilesUpdateArgs>(args: SelectSubset<T, volunteer_profilesUpdateArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Volunteer_profiles.
     * @param {volunteer_profilesDeleteManyArgs} args - Arguments to filter Volunteer_profiles to delete.
     * @example
     * // Delete a few Volunteer_profiles
     * const { count } = await prisma.volunteer_profiles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends volunteer_profilesDeleteManyArgs>(args?: SelectSubset<T, volunteer_profilesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Volunteer_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_profilesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends volunteer_profilesUpdateManyArgs>(args: SelectSubset<T, volunteer_profilesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Volunteer_profiles.
     * @param {volunteer_profilesUpsertArgs} args - Arguments to update or create a Volunteer_profiles.
     * @example
     * // Update or create a Volunteer_profiles
     * const volunteer_profiles = await prisma.volunteer_profiles.upsert({
     *   create: {
     *     // ... data to create a Volunteer_profiles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Volunteer_profiles we want to update
     *   }
     * })
     */
    upsert<T extends volunteer_profilesUpsertArgs>(args: SelectSubset<T, volunteer_profilesUpsertArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Volunteer_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_profilesCountArgs} args - Arguments to filter Volunteer_profiles to count.
     * @example
     * // Count the number of Volunteer_profiles
     * const count = await prisma.volunteer_profiles.count({
     *   where: {
     *     // ... the filter for the Volunteer_profiles we want to count
     *   }
     * })
    **/
    count<T extends volunteer_profilesCountArgs>(
      args?: Subset<T, volunteer_profilesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Volunteer_profilesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Volunteer_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Volunteer_profilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Volunteer_profilesAggregateArgs>(args: Subset<T, Volunteer_profilesAggregateArgs>): Prisma.PrismaPromise<GetVolunteer_profilesAggregateType<T>>

    /**
     * Group by Volunteer_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_profilesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends volunteer_profilesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: volunteer_profilesGroupByArgs['orderBy'] }
        : { orderBy?: volunteer_profilesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, volunteer_profilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVolunteer_profilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the volunteer_profiles model
   */
  readonly fields: volunteer_profilesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for volunteer_profiles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__volunteer_profilesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    volunteer_skills<T extends volunteer_profiles$volunteer_skillsArgs<ExtArgs> = {}>(args?: Subset<T, volunteer_profiles$volunteer_skillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the volunteer_profiles model
   */
  interface volunteer_profilesFieldRefs {
    readonly user_id: FieldRef<"volunteer_profiles", 'BigInt'>
    readonly area_of_expertise: FieldRef<"volunteer_profiles", 'String'>
    readonly location: FieldRef<"volunteer_profiles", 'String'>
    readonly availability: FieldRef<"volunteer_profiles", 'String'>
    readonly motivation: FieldRef<"volunteer_profiles", 'String'>
    readonly total_hours: FieldRef<"volunteer_profiles", 'Int'>
    readonly certificate_url: FieldRef<"volunteer_profiles", 'String'>
    readonly registered_events_count: FieldRef<"volunteer_profiles", 'Int'>
    readonly training_completed: FieldRef<"volunteer_profiles", 'Boolean'>
    readonly background_check_status: FieldRef<"volunteer_profiles", 'volunteer_profiles_background_check_status'>
    readonly emergency_contact_name: FieldRef<"volunteer_profiles", 'String'>
    readonly emergency_contact_phone: FieldRef<"volunteer_profiles", 'String'>
    readonly rating: FieldRef<"volunteer_profiles", 'Decimal'>
    readonly created_at: FieldRef<"volunteer_profiles", 'DateTime'>
    readonly updated_at: FieldRef<"volunteer_profiles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * volunteer_profiles findUnique
   */
  export type volunteer_profilesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_profiles to fetch.
     */
    where: volunteer_profilesWhereUniqueInput
  }

  /**
   * volunteer_profiles findUniqueOrThrow
   */
  export type volunteer_profilesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_profiles to fetch.
     */
    where: volunteer_profilesWhereUniqueInput
  }

  /**
   * volunteer_profiles findFirst
   */
  export type volunteer_profilesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_profiles to fetch.
     */
    where?: volunteer_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_profiles to fetch.
     */
    orderBy?: volunteer_profilesOrderByWithRelationInput | volunteer_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for volunteer_profiles.
     */
    cursor?: volunteer_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of volunteer_profiles.
     */
    distinct?: Volunteer_profilesScalarFieldEnum | Volunteer_profilesScalarFieldEnum[]
  }

  /**
   * volunteer_profiles findFirstOrThrow
   */
  export type volunteer_profilesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_profiles to fetch.
     */
    where?: volunteer_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_profiles to fetch.
     */
    orderBy?: volunteer_profilesOrderByWithRelationInput | volunteer_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for volunteer_profiles.
     */
    cursor?: volunteer_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of volunteer_profiles.
     */
    distinct?: Volunteer_profilesScalarFieldEnum | Volunteer_profilesScalarFieldEnum[]
  }

  /**
   * volunteer_profiles findMany
   */
  export type volunteer_profilesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_profiles to fetch.
     */
    where?: volunteer_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_profiles to fetch.
     */
    orderBy?: volunteer_profilesOrderByWithRelationInput | volunteer_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing volunteer_profiles.
     */
    cursor?: volunteer_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_profiles.
     */
    skip?: number
    distinct?: Volunteer_profilesScalarFieldEnum | Volunteer_profilesScalarFieldEnum[]
  }

  /**
   * volunteer_profiles create
   */
  export type volunteer_profilesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * The data needed to create a volunteer_profiles.
     */
    data: XOR<volunteer_profilesCreateInput, volunteer_profilesUncheckedCreateInput>
  }

  /**
   * volunteer_profiles createMany
   */
  export type volunteer_profilesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many volunteer_profiles.
     */
    data: volunteer_profilesCreateManyInput | volunteer_profilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * volunteer_profiles update
   */
  export type volunteer_profilesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * The data needed to update a volunteer_profiles.
     */
    data: XOR<volunteer_profilesUpdateInput, volunteer_profilesUncheckedUpdateInput>
    /**
     * Choose, which volunteer_profiles to update.
     */
    where: volunteer_profilesWhereUniqueInput
  }

  /**
   * volunteer_profiles updateMany
   */
  export type volunteer_profilesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update volunteer_profiles.
     */
    data: XOR<volunteer_profilesUpdateManyMutationInput, volunteer_profilesUncheckedUpdateManyInput>
    /**
     * Filter which volunteer_profiles to update
     */
    where?: volunteer_profilesWhereInput
    /**
     * Limit how many volunteer_profiles to update.
     */
    limit?: number
  }

  /**
   * volunteer_profiles upsert
   */
  export type volunteer_profilesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * The filter to search for the volunteer_profiles to update in case it exists.
     */
    where: volunteer_profilesWhereUniqueInput
    /**
     * In case the volunteer_profiles found by the `where` argument doesn't exist, create a new volunteer_profiles with this data.
     */
    create: XOR<volunteer_profilesCreateInput, volunteer_profilesUncheckedCreateInput>
    /**
     * In case the volunteer_profiles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<volunteer_profilesUpdateInput, volunteer_profilesUncheckedUpdateInput>
  }

  /**
   * volunteer_profiles delete
   */
  export type volunteer_profilesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
    /**
     * Filter which volunteer_profiles to delete.
     */
    where: volunteer_profilesWhereUniqueInput
  }

  /**
   * volunteer_profiles deleteMany
   */
  export type volunteer_profilesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which volunteer_profiles to delete
     */
    where?: volunteer_profilesWhereInput
    /**
     * Limit how many volunteer_profiles to delete.
     */
    limit?: number
  }

  /**
   * volunteer_profiles.volunteer_skills
   */
  export type volunteer_profiles$volunteer_skillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    where?: volunteer_skillsWhereInput
    orderBy?: volunteer_skillsOrderByWithRelationInput | volunteer_skillsOrderByWithRelationInput[]
    cursor?: volunteer_skillsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Volunteer_skillsScalarFieldEnum | Volunteer_skillsScalarFieldEnum[]
  }

  /**
   * volunteer_profiles without action
   */
  export type volunteer_profilesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_profiles
     */
    select?: volunteer_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_profiles
     */
    omit?: volunteer_profilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_profilesInclude<ExtArgs> | null
  }


  /**
   * Model volunteer_skills
   */

  export type AggregateVolunteer_skills = {
    _count: Volunteer_skillsCountAggregateOutputType | null
    _avg: Volunteer_skillsAvgAggregateOutputType | null
    _sum: Volunteer_skillsSumAggregateOutputType | null
    _min: Volunteer_skillsMinAggregateOutputType | null
    _max: Volunteer_skillsMaxAggregateOutputType | null
  }

  export type Volunteer_skillsAvgAggregateOutputType = {
    volunteer_id: number | null
    skill_id: number | null
  }

  export type Volunteer_skillsSumAggregateOutputType = {
    volunteer_id: bigint | null
    skill_id: bigint | null
  }

  export type Volunteer_skillsMinAggregateOutputType = {
    volunteer_id: bigint | null
    skill_id: bigint | null
    proficiency_level: $Enums.volunteer_skills_proficiency_level | null
    is_verified: boolean | null
    created_at: Date | null
  }

  export type Volunteer_skillsMaxAggregateOutputType = {
    volunteer_id: bigint | null
    skill_id: bigint | null
    proficiency_level: $Enums.volunteer_skills_proficiency_level | null
    is_verified: boolean | null
    created_at: Date | null
  }

  export type Volunteer_skillsCountAggregateOutputType = {
    volunteer_id: number
    skill_id: number
    proficiency_level: number
    is_verified: number
    created_at: number
    _all: number
  }


  export type Volunteer_skillsAvgAggregateInputType = {
    volunteer_id?: true
    skill_id?: true
  }

  export type Volunteer_skillsSumAggregateInputType = {
    volunteer_id?: true
    skill_id?: true
  }

  export type Volunteer_skillsMinAggregateInputType = {
    volunteer_id?: true
    skill_id?: true
    proficiency_level?: true
    is_verified?: true
    created_at?: true
  }

  export type Volunteer_skillsMaxAggregateInputType = {
    volunteer_id?: true
    skill_id?: true
    proficiency_level?: true
    is_verified?: true
    created_at?: true
  }

  export type Volunteer_skillsCountAggregateInputType = {
    volunteer_id?: true
    skill_id?: true
    proficiency_level?: true
    is_verified?: true
    created_at?: true
    _all?: true
  }

  export type Volunteer_skillsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which volunteer_skills to aggregate.
     */
    where?: volunteer_skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_skills to fetch.
     */
    orderBy?: volunteer_skillsOrderByWithRelationInput | volunteer_skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: volunteer_skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned volunteer_skills
    **/
    _count?: true | Volunteer_skillsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Volunteer_skillsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Volunteer_skillsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Volunteer_skillsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Volunteer_skillsMaxAggregateInputType
  }

  export type GetVolunteer_skillsAggregateType<T extends Volunteer_skillsAggregateArgs> = {
        [P in keyof T & keyof AggregateVolunteer_skills]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVolunteer_skills[P]>
      : GetScalarType<T[P], AggregateVolunteer_skills[P]>
  }




  export type volunteer_skillsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: volunteer_skillsWhereInput
    orderBy?: volunteer_skillsOrderByWithAggregationInput | volunteer_skillsOrderByWithAggregationInput[]
    by: Volunteer_skillsScalarFieldEnum[] | Volunteer_skillsScalarFieldEnum
    having?: volunteer_skillsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Volunteer_skillsCountAggregateInputType | true
    _avg?: Volunteer_skillsAvgAggregateInputType
    _sum?: Volunteer_skillsSumAggregateInputType
    _min?: Volunteer_skillsMinAggregateInputType
    _max?: Volunteer_skillsMaxAggregateInputType
  }

  export type Volunteer_skillsGroupByOutputType = {
    volunteer_id: bigint
    skill_id: bigint
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified: boolean | null
    created_at: Date | null
    _count: Volunteer_skillsCountAggregateOutputType | null
    _avg: Volunteer_skillsAvgAggregateOutputType | null
    _sum: Volunteer_skillsSumAggregateOutputType | null
    _min: Volunteer_skillsMinAggregateOutputType | null
    _max: Volunteer_skillsMaxAggregateOutputType | null
  }

  type GetVolunteer_skillsGroupByPayload<T extends volunteer_skillsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Volunteer_skillsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Volunteer_skillsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Volunteer_skillsGroupByOutputType[P]>
            : GetScalarType<T[P], Volunteer_skillsGroupByOutputType[P]>
        }
      >
    >


  export type volunteer_skillsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    volunteer_id?: boolean
    skill_id?: boolean
    proficiency_level?: boolean
    is_verified?: boolean
    created_at?: boolean
    volunteer_profiles?: boolean | volunteer_profilesDefaultArgs<ExtArgs>
    skills?: boolean | skillsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["volunteer_skills"]>



  export type volunteer_skillsSelectScalar = {
    volunteer_id?: boolean
    skill_id?: boolean
    proficiency_level?: boolean
    is_verified?: boolean
    created_at?: boolean
  }

  export type volunteer_skillsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"volunteer_id" | "skill_id" | "proficiency_level" | "is_verified" | "created_at", ExtArgs["result"]["volunteer_skills"]>
  export type volunteer_skillsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    volunteer_profiles?: boolean | volunteer_profilesDefaultArgs<ExtArgs>
    skills?: boolean | skillsDefaultArgs<ExtArgs>
  }

  export type $volunteer_skillsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "volunteer_skills"
    objects: {
      volunteer_profiles: Prisma.$volunteer_profilesPayload<ExtArgs>
      skills: Prisma.$skillsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      volunteer_id: bigint
      skill_id: bigint
      proficiency_level: $Enums.volunteer_skills_proficiency_level
      is_verified: boolean | null
      created_at: Date | null
    }, ExtArgs["result"]["volunteer_skills"]>
    composites: {}
  }

  type volunteer_skillsGetPayload<S extends boolean | null | undefined | volunteer_skillsDefaultArgs> = $Result.GetResult<Prisma.$volunteer_skillsPayload, S>

  type volunteer_skillsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<volunteer_skillsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Volunteer_skillsCountAggregateInputType | true
    }

  export interface volunteer_skillsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['volunteer_skills'], meta: { name: 'volunteer_skills' } }
    /**
     * Find zero or one Volunteer_skills that matches the filter.
     * @param {volunteer_skillsFindUniqueArgs} args - Arguments to find a Volunteer_skills
     * @example
     * // Get one Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends volunteer_skillsFindUniqueArgs>(args: SelectSubset<T, volunteer_skillsFindUniqueArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Volunteer_skills that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {volunteer_skillsFindUniqueOrThrowArgs} args - Arguments to find a Volunteer_skills
     * @example
     * // Get one Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends volunteer_skillsFindUniqueOrThrowArgs>(args: SelectSubset<T, volunteer_skillsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Volunteer_skills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_skillsFindFirstArgs} args - Arguments to find a Volunteer_skills
     * @example
     * // Get one Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends volunteer_skillsFindFirstArgs>(args?: SelectSubset<T, volunteer_skillsFindFirstArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Volunteer_skills that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_skillsFindFirstOrThrowArgs} args - Arguments to find a Volunteer_skills
     * @example
     * // Get one Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends volunteer_skillsFindFirstOrThrowArgs>(args?: SelectSubset<T, volunteer_skillsFindFirstOrThrowArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Volunteer_skills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_skillsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.findMany()
     * 
     * // Get first 10 Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.findMany({ take: 10 })
     * 
     * // Only select the `volunteer_id`
     * const volunteer_skillsWithVolunteer_idOnly = await prisma.volunteer_skills.findMany({ select: { volunteer_id: true } })
     * 
     */
    findMany<T extends volunteer_skillsFindManyArgs>(args?: SelectSubset<T, volunteer_skillsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Volunteer_skills.
     * @param {volunteer_skillsCreateArgs} args - Arguments to create a Volunteer_skills.
     * @example
     * // Create one Volunteer_skills
     * const Volunteer_skills = await prisma.volunteer_skills.create({
     *   data: {
     *     // ... data to create a Volunteer_skills
     *   }
     * })
     * 
     */
    create<T extends volunteer_skillsCreateArgs>(args: SelectSubset<T, volunteer_skillsCreateArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Volunteer_skills.
     * @param {volunteer_skillsCreateManyArgs} args - Arguments to create many Volunteer_skills.
     * @example
     * // Create many Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends volunteer_skillsCreateManyArgs>(args?: SelectSubset<T, volunteer_skillsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Volunteer_skills.
     * @param {volunteer_skillsDeleteArgs} args - Arguments to delete one Volunteer_skills.
     * @example
     * // Delete one Volunteer_skills
     * const Volunteer_skills = await prisma.volunteer_skills.delete({
     *   where: {
     *     // ... filter to delete one Volunteer_skills
     *   }
     * })
     * 
     */
    delete<T extends volunteer_skillsDeleteArgs>(args: SelectSubset<T, volunteer_skillsDeleteArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Volunteer_skills.
     * @param {volunteer_skillsUpdateArgs} args - Arguments to update one Volunteer_skills.
     * @example
     * // Update one Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends volunteer_skillsUpdateArgs>(args: SelectSubset<T, volunteer_skillsUpdateArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Volunteer_skills.
     * @param {volunteer_skillsDeleteManyArgs} args - Arguments to filter Volunteer_skills to delete.
     * @example
     * // Delete a few Volunteer_skills
     * const { count } = await prisma.volunteer_skills.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends volunteer_skillsDeleteManyArgs>(args?: SelectSubset<T, volunteer_skillsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Volunteer_skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_skillsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends volunteer_skillsUpdateManyArgs>(args: SelectSubset<T, volunteer_skillsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Volunteer_skills.
     * @param {volunteer_skillsUpsertArgs} args - Arguments to update or create a Volunteer_skills.
     * @example
     * // Update or create a Volunteer_skills
     * const volunteer_skills = await prisma.volunteer_skills.upsert({
     *   create: {
     *     // ... data to create a Volunteer_skills
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Volunteer_skills we want to update
     *   }
     * })
     */
    upsert<T extends volunteer_skillsUpsertArgs>(args: SelectSubset<T, volunteer_skillsUpsertArgs<ExtArgs>>): Prisma__volunteer_skillsClient<$Result.GetResult<Prisma.$volunteer_skillsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Volunteer_skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_skillsCountArgs} args - Arguments to filter Volunteer_skills to count.
     * @example
     * // Count the number of Volunteer_skills
     * const count = await prisma.volunteer_skills.count({
     *   where: {
     *     // ... the filter for the Volunteer_skills we want to count
     *   }
     * })
    **/
    count<T extends volunteer_skillsCountArgs>(
      args?: Subset<T, volunteer_skillsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Volunteer_skillsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Volunteer_skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Volunteer_skillsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Volunteer_skillsAggregateArgs>(args: Subset<T, Volunteer_skillsAggregateArgs>): Prisma.PrismaPromise<GetVolunteer_skillsAggregateType<T>>

    /**
     * Group by Volunteer_skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {volunteer_skillsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends volunteer_skillsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: volunteer_skillsGroupByArgs['orderBy'] }
        : { orderBy?: volunteer_skillsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, volunteer_skillsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVolunteer_skillsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the volunteer_skills model
   */
  readonly fields: volunteer_skillsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for volunteer_skills.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__volunteer_skillsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    volunteer_profiles<T extends volunteer_profilesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, volunteer_profilesDefaultArgs<ExtArgs>>): Prisma__volunteer_profilesClient<$Result.GetResult<Prisma.$volunteer_profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    skills<T extends skillsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, skillsDefaultArgs<ExtArgs>>): Prisma__skillsClient<$Result.GetResult<Prisma.$skillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the volunteer_skills model
   */
  interface volunteer_skillsFieldRefs {
    readonly volunteer_id: FieldRef<"volunteer_skills", 'BigInt'>
    readonly skill_id: FieldRef<"volunteer_skills", 'BigInt'>
    readonly proficiency_level: FieldRef<"volunteer_skills", 'volunteer_skills_proficiency_level'>
    readonly is_verified: FieldRef<"volunteer_skills", 'Boolean'>
    readonly created_at: FieldRef<"volunteer_skills", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * volunteer_skills findUnique
   */
  export type volunteer_skillsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_skills to fetch.
     */
    where: volunteer_skillsWhereUniqueInput
  }

  /**
   * volunteer_skills findUniqueOrThrow
   */
  export type volunteer_skillsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_skills to fetch.
     */
    where: volunteer_skillsWhereUniqueInput
  }

  /**
   * volunteer_skills findFirst
   */
  export type volunteer_skillsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_skills to fetch.
     */
    where?: volunteer_skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_skills to fetch.
     */
    orderBy?: volunteer_skillsOrderByWithRelationInput | volunteer_skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for volunteer_skills.
     */
    cursor?: volunteer_skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of volunteer_skills.
     */
    distinct?: Volunteer_skillsScalarFieldEnum | Volunteer_skillsScalarFieldEnum[]
  }

  /**
   * volunteer_skills findFirstOrThrow
   */
  export type volunteer_skillsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_skills to fetch.
     */
    where?: volunteer_skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_skills to fetch.
     */
    orderBy?: volunteer_skillsOrderByWithRelationInput | volunteer_skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for volunteer_skills.
     */
    cursor?: volunteer_skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of volunteer_skills.
     */
    distinct?: Volunteer_skillsScalarFieldEnum | Volunteer_skillsScalarFieldEnum[]
  }

  /**
   * volunteer_skills findMany
   */
  export type volunteer_skillsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * Filter, which volunteer_skills to fetch.
     */
    where?: volunteer_skillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of volunteer_skills to fetch.
     */
    orderBy?: volunteer_skillsOrderByWithRelationInput | volunteer_skillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing volunteer_skills.
     */
    cursor?: volunteer_skillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` volunteer_skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` volunteer_skills.
     */
    skip?: number
    distinct?: Volunteer_skillsScalarFieldEnum | Volunteer_skillsScalarFieldEnum[]
  }

  /**
   * volunteer_skills create
   */
  export type volunteer_skillsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * The data needed to create a volunteer_skills.
     */
    data: XOR<volunteer_skillsCreateInput, volunteer_skillsUncheckedCreateInput>
  }

  /**
   * volunteer_skills createMany
   */
  export type volunteer_skillsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many volunteer_skills.
     */
    data: volunteer_skillsCreateManyInput | volunteer_skillsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * volunteer_skills update
   */
  export type volunteer_skillsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * The data needed to update a volunteer_skills.
     */
    data: XOR<volunteer_skillsUpdateInput, volunteer_skillsUncheckedUpdateInput>
    /**
     * Choose, which volunteer_skills to update.
     */
    where: volunteer_skillsWhereUniqueInput
  }

  /**
   * volunteer_skills updateMany
   */
  export type volunteer_skillsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update volunteer_skills.
     */
    data: XOR<volunteer_skillsUpdateManyMutationInput, volunteer_skillsUncheckedUpdateManyInput>
    /**
     * Filter which volunteer_skills to update
     */
    where?: volunteer_skillsWhereInput
    /**
     * Limit how many volunteer_skills to update.
     */
    limit?: number
  }

  /**
   * volunteer_skills upsert
   */
  export type volunteer_skillsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * The filter to search for the volunteer_skills to update in case it exists.
     */
    where: volunteer_skillsWhereUniqueInput
    /**
     * In case the volunteer_skills found by the `where` argument doesn't exist, create a new volunteer_skills with this data.
     */
    create: XOR<volunteer_skillsCreateInput, volunteer_skillsUncheckedCreateInput>
    /**
     * In case the volunteer_skills was found with the provided `where` argument, update it with this data.
     */
    update: XOR<volunteer_skillsUpdateInput, volunteer_skillsUncheckedUpdateInput>
  }

  /**
   * volunteer_skills delete
   */
  export type volunteer_skillsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
    /**
     * Filter which volunteer_skills to delete.
     */
    where: volunteer_skillsWhereUniqueInput
  }

  /**
   * volunteer_skills deleteMany
   */
  export type volunteer_skillsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which volunteer_skills to delete
     */
    where?: volunteer_skillsWhereInput
    /**
     * Limit how many volunteer_skills to delete.
     */
    limit?: number
  }

  /**
   * volunteer_skills without action
   */
  export type volunteer_skillsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the volunteer_skills
     */
    select?: volunteer_skillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the volunteer_skills
     */
    omit?: volunteer_skillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: volunteer_skillsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CampaignsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    goal_amount: 'goal_amount',
    current_amount: 'current_amount',
    start_date: 'start_date',
    end_date: 'end_date',
    is_active: 'is_active',
    is_featured: 'is_featured',
    category: 'category',
    progress_bar_color: 'progress_bar_color',
    image_url: 'image_url',
    video_url: 'video_url',
    donor_count: 'donor_count',
    success_stories: 'success_stories',
    created_by: 'created_by',
    language: 'language',
    translation_group_id: 'translation_group_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type CampaignsScalarFieldEnum = (typeof CampaignsScalarFieldEnum)[keyof typeof CampaignsScalarFieldEnum]


  export const Contact_messagesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    subject: 'subject',
    message: 'message',
    reason: 'reason',
    status: 'status',
    ip_address: 'ip_address',
    user_agent: 'user_agent',
    submitted_at: 'submitted_at',
    replied_at: 'replied_at'
  };

  export type Contact_messagesScalarFieldEnum = (typeof Contact_messagesScalarFieldEnum)[keyof typeof Contact_messagesScalarFieldEnum]


  export const DocumentsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    category: 'category',
    file_url: 'file_url',
    file_size: 'file_size',
    file_type: 'file_type',
    uploaded_by: 'uploaded_by',
    language: 'language',
    translation_group_id: 'translation_group_id',
    is_public: 'is_public',
    download_count: 'download_count',
    uploaded_at: 'uploaded_at',
    updated_at: 'updated_at'
  };

  export type DocumentsScalarFieldEnum = (typeof DocumentsScalarFieldEnum)[keyof typeof DocumentsScalarFieldEnum]


  export const DonationsScalarFieldEnum: {
    id: 'id',
    donor_id: 'donor_id',
    campaign_id: 'campaign_id',
    amount: 'amount',
    currency: 'currency',
    donation_type: 'donation_type',
    payment_method: 'payment_method',
    payment_status: 'payment_status',
    transaction_id: 'transaction_id',
    receipt_url: 'receipt_url',
    is_acknowledged: 'is_acknowledged',
    is_tax_deductible: 'is_tax_deductible',
    is_anonymous: 'is_anonymous',
    notes: 'notes',
    donated_at: 'donated_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DonationsScalarFieldEnum = (typeof DonationsScalarFieldEnum)[keyof typeof DonationsScalarFieldEnum]


  export const Donor_profilesScalarFieldEnum: {
    user_id: 'user_id',
    is_recurring_donor: 'is_recurring_donor',
    preferred_payment_method: 'preferred_payment_method',
    total_donated: 'total_donated',
    donation_frequency: 'donation_frequency',
    tax_receipt_email: 'tax_receipt_email',
    is_anonymous: 'is_anonymous',
    last_donation_date: 'last_donation_date',
    donation_tier: 'donation_tier',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Donor_profilesScalarFieldEnum = (typeof Donor_profilesScalarFieldEnum)[keyof typeof Donor_profilesScalarFieldEnum]


  export const Email_logsScalarFieldEnum: {
    id: 'id',
    recipient: 'recipient',
    subject: 'subject',
    template_used: 'template_used',
    content: 'content',
    status: 'status',
    error_message: 'error_message',
    sent_at: 'sent_at',
    opened_at: 'opened_at',
    clicked_at: 'clicked_at'
  };

  export type Email_logsScalarFieldEnum = (typeof Email_logsScalarFieldEnum)[keyof typeof Email_logsScalarFieldEnum]


  export const Event_participantsScalarFieldEnum: {
    event_id: 'event_id',
    user_id: 'user_id',
    role: 'role',
    status: 'status',
    hours_contributed: 'hours_contributed',
    feedback: 'feedback',
    rating: 'rating',
    registered_at: 'registered_at',
    attended_at: 'attended_at'
  };

  export type Event_participantsScalarFieldEnum = (typeof Event_participantsScalarFieldEnum)[keyof typeof Event_participantsScalarFieldEnum]


  export const EventsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    event_date: 'event_date',
    event_time: 'event_time',
    timezone: 'timezone',
    location: 'location',
    latitude: 'latitude',
    longitude: 'longitude',
    category: 'category',
    capacity: 'capacity',
    registered_count: 'registered_count',
    status: 'status',
    registration_deadline: 'registration_deadline',
    registration_link: 'registration_link',
    map_embed_url: 'map_embed_url',
    agenda: 'agenda',
    speaker_info: 'speaker_info',
    requirements: 'requirements',
    ticket_price: 'ticket_price',
    ticket_link: 'ticket_link',
    is_featured: 'is_featured',
    created_by: 'created_by',
    language: 'language',
    translation_group_id: 'translation_group_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type EventsScalarFieldEnum = (typeof EventsScalarFieldEnum)[keyof typeof EventsScalarFieldEnum]


  export const FaqsScalarFieldEnum: {
    id: 'id',
    question: 'question',
    answer: 'answer',
    category: 'category',
    language: 'language',
    translation_group_id: 'translation_group_id',
    is_active: 'is_active',
    sort_order: 'sort_order',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type FaqsScalarFieldEnum = (typeof FaqsScalarFieldEnum)[keyof typeof FaqsScalarFieldEnum]


  export const MediaScalarFieldEnum: {
    id: 'id',
    media_type: 'media_type',
    title: 'title',
    description: 'description',
    file_url: 'file_url',
    related_event_id: 'related_event_id',
    related_program_id: 'related_program_id',
    uploaded_by: 'uploaded_by',
    language: 'language',
    translation_group_id: 'translation_group_id',
    uploaded_at: 'uploaded_at'
  };

  export type MediaScalarFieldEnum = (typeof MediaScalarFieldEnum)[keyof typeof MediaScalarFieldEnum]


  export const Newsletter_subscribersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    first_name: 'first_name',
    last_name: 'last_name',
    is_active: 'is_active',
    language_preference: 'language_preference',
    subscribed_at: 'subscribed_at',
    unsubscribed_at: 'unsubscribed_at'
  };

  export type Newsletter_subscribersScalarFieldEnum = (typeof Newsletter_subscribersScalarFieldEnum)[keyof typeof Newsletter_subscribersScalarFieldEnum]


  export const PartnersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    logo_url: 'logo_url',
    type: 'type',
    website: 'website',
    contact_email: 'contact_email',
    quote: 'quote',
    language: 'language',
    translation_group_id: 'translation_group_id',
    is_active: 'is_active',
    partnership_start_date: 'partnership_start_date',
    partnership_end_date: 'partnership_end_date',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PartnersScalarFieldEnum = (typeof PartnersScalarFieldEnum)[keyof typeof PartnersScalarFieldEnum]


  export const PostsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    content: 'content',
    post_type: 'post_type',
    author_id: 'author_id',
    feature_image: 'feature_image',
    language: 'language',
    translation_group_id: 'translation_group_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PostsScalarFieldEnum = (typeof PostsScalarFieldEnum)[keyof typeof PostsScalarFieldEnum]


  export const ProgramsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    category: 'category',
    description: 'description',
    start_date: 'start_date',
    end_date: 'end_date',
    location: 'location',
    impact_stats: 'impact_stats',
    is_featured: 'is_featured',
    created_by: 'created_by',
    language: 'language',
    translation_group_id: 'translation_group_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type ProgramsScalarFieldEnum = (typeof ProgramsScalarFieldEnum)[keyof typeof ProgramsScalarFieldEnum]


  export const Role_permissionsScalarFieldEnum: {
    role: 'role',
    permission: 'permission',
    created_at: 'created_at'
  };

  export type Role_permissionsScalarFieldEnum = (typeof Role_permissionsScalarFieldEnum)[keyof typeof Role_permissionsScalarFieldEnum]


  export const Site_interactionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    session_id: 'session_id',
    page: 'page',
    action: 'action',
    metadata: 'metadata',
    ip_address: 'ip_address',
    user_agent: 'user_agent',
    occurred_at: 'occurred_at'
  };

  export type Site_interactionsScalarFieldEnum = (typeof Site_interactionsScalarFieldEnum)[keyof typeof Site_interactionsScalarFieldEnum]


  export const SkillsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    category: 'category',
    description: 'description',
    created_at: 'created_at'
  };

  export type SkillsScalarFieldEnum = (typeof SkillsScalarFieldEnum)[keyof typeof SkillsScalarFieldEnum]


  export const TestimonialsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    role: 'role',
    message: 'message',
    image_url: 'image_url',
    type: 'type',
    language: 'language',
    translation_group_id: 'translation_group_id',
    is_featured: 'is_featured',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TestimonialsScalarFieldEnum = (typeof TestimonialsScalarFieldEnum)[keyof typeof TestimonialsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    full_name: 'full_name',
    email: 'email',
    phone: 'phone',
    password_hash: 'password_hash',
    role: 'role',
    profile_image_url: 'profile_image_url',
    language_preference: 'language_preference',
    email_verified: 'email_verified',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Volunteer_profilesScalarFieldEnum: {
    user_id: 'user_id',
    area_of_expertise: 'area_of_expertise',
    location: 'location',
    availability: 'availability',
    motivation: 'motivation',
    total_hours: 'total_hours',
    certificate_url: 'certificate_url',
    registered_events_count: 'registered_events_count',
    training_completed: 'training_completed',
    background_check_status: 'background_check_status',
    emergency_contact_name: 'emergency_contact_name',
    emergency_contact_phone: 'emergency_contact_phone',
    rating: 'rating',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Volunteer_profilesScalarFieldEnum = (typeof Volunteer_profilesScalarFieldEnum)[keyof typeof Volunteer_profilesScalarFieldEnum]


  export const Volunteer_skillsScalarFieldEnum: {
    volunteer_id: 'volunteer_id',
    skill_id: 'skill_id',
    proficiency_level: 'proficiency_level',
    is_verified: 'is_verified',
    created_at: 'created_at'
  };

  export type Volunteer_skillsScalarFieldEnum = (typeof Volunteer_skillsScalarFieldEnum)[keyof typeof Volunteer_skillsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const campaignsOrderByRelevanceFieldEnum: {
    title: 'title',
    slug: 'slug',
    description: 'description',
    category: 'category',
    progress_bar_color: 'progress_bar_color',
    image_url: 'image_url',
    video_url: 'video_url',
    success_stories: 'success_stories',
    translation_group_id: 'translation_group_id'
  };

  export type campaignsOrderByRelevanceFieldEnum = (typeof campaignsOrderByRelevanceFieldEnum)[keyof typeof campaignsOrderByRelevanceFieldEnum]


  export const contact_messagesOrderByRelevanceFieldEnum: {
    name: 'name',
    email: 'email',
    subject: 'subject',
    message: 'message',
    ip_address: 'ip_address',
    user_agent: 'user_agent'
  };

  export type contact_messagesOrderByRelevanceFieldEnum = (typeof contact_messagesOrderByRelevanceFieldEnum)[keyof typeof contact_messagesOrderByRelevanceFieldEnum]


  export const documentsOrderByRelevanceFieldEnum: {
    title: 'title',
    description: 'description',
    category: 'category',
    file_url: 'file_url',
    file_type: 'file_type',
    translation_group_id: 'translation_group_id'
  };

  export type documentsOrderByRelevanceFieldEnum = (typeof documentsOrderByRelevanceFieldEnum)[keyof typeof documentsOrderByRelevanceFieldEnum]


  export const donationsOrderByRelevanceFieldEnum: {
    currency: 'currency',
    payment_method: 'payment_method',
    transaction_id: 'transaction_id',
    receipt_url: 'receipt_url',
    notes: 'notes'
  };

  export type donationsOrderByRelevanceFieldEnum = (typeof donationsOrderByRelevanceFieldEnum)[keyof typeof donationsOrderByRelevanceFieldEnum]


  export const donor_profilesOrderByRelevanceFieldEnum: {
    preferred_payment_method: 'preferred_payment_method',
    tax_receipt_email: 'tax_receipt_email'
  };

  export type donor_profilesOrderByRelevanceFieldEnum = (typeof donor_profilesOrderByRelevanceFieldEnum)[keyof typeof donor_profilesOrderByRelevanceFieldEnum]


  export const email_logsOrderByRelevanceFieldEnum: {
    recipient: 'recipient',
    subject: 'subject',
    template_used: 'template_used',
    content: 'content',
    error_message: 'error_message'
  };

  export type email_logsOrderByRelevanceFieldEnum = (typeof email_logsOrderByRelevanceFieldEnum)[keyof typeof email_logsOrderByRelevanceFieldEnum]


  export const event_participantsOrderByRelevanceFieldEnum: {
    feedback: 'feedback'
  };

  export type event_participantsOrderByRelevanceFieldEnum = (typeof event_participantsOrderByRelevanceFieldEnum)[keyof typeof event_participantsOrderByRelevanceFieldEnum]


  export const eventsOrderByRelevanceFieldEnum: {
    title: 'title',
    slug: 'slug',
    description: 'description',
    timezone: 'timezone',
    location: 'location',
    category: 'category',
    registration_link: 'registration_link',
    map_embed_url: 'map_embed_url',
    agenda: 'agenda',
    speaker_info: 'speaker_info',
    requirements: 'requirements',
    ticket_link: 'ticket_link',
    translation_group_id: 'translation_group_id'
  };

  export type eventsOrderByRelevanceFieldEnum = (typeof eventsOrderByRelevanceFieldEnum)[keyof typeof eventsOrderByRelevanceFieldEnum]


  export const faqsOrderByRelevanceFieldEnum: {
    question: 'question',
    answer: 'answer',
    category: 'category',
    translation_group_id: 'translation_group_id'
  };

  export type faqsOrderByRelevanceFieldEnum = (typeof faqsOrderByRelevanceFieldEnum)[keyof typeof faqsOrderByRelevanceFieldEnum]


  export const mediaOrderByRelevanceFieldEnum: {
    title: 'title',
    description: 'description',
    file_url: 'file_url',
    translation_group_id: 'translation_group_id'
  };

  export type mediaOrderByRelevanceFieldEnum = (typeof mediaOrderByRelevanceFieldEnum)[keyof typeof mediaOrderByRelevanceFieldEnum]


  export const newsletter_subscribersOrderByRelevanceFieldEnum: {
    email: 'email',
    first_name: 'first_name',
    last_name: 'last_name'
  };

  export type newsletter_subscribersOrderByRelevanceFieldEnum = (typeof newsletter_subscribersOrderByRelevanceFieldEnum)[keyof typeof newsletter_subscribersOrderByRelevanceFieldEnum]


  export const partnersOrderByRelevanceFieldEnum: {
    name: 'name',
    logo_url: 'logo_url',
    website: 'website',
    contact_email: 'contact_email',
    quote: 'quote',
    translation_group_id: 'translation_group_id'
  };

  export type partnersOrderByRelevanceFieldEnum = (typeof partnersOrderByRelevanceFieldEnum)[keyof typeof partnersOrderByRelevanceFieldEnum]


  export const postsOrderByRelevanceFieldEnum: {
    title: 'title',
    slug: 'slug',
    content: 'content',
    feature_image: 'feature_image',
    translation_group_id: 'translation_group_id'
  };

  export type postsOrderByRelevanceFieldEnum = (typeof postsOrderByRelevanceFieldEnum)[keyof typeof postsOrderByRelevanceFieldEnum]


  export const programsOrderByRelevanceFieldEnum: {
    title: 'title',
    description: 'description',
    location: 'location',
    impact_stats: 'impact_stats',
    translation_group_id: 'translation_group_id'
  };

  export type programsOrderByRelevanceFieldEnum = (typeof programsOrderByRelevanceFieldEnum)[keyof typeof programsOrderByRelevanceFieldEnum]


  export const role_permissionsOrderByRelevanceFieldEnum: {
    permission: 'permission'
  };

  export type role_permissionsOrderByRelevanceFieldEnum = (typeof role_permissionsOrderByRelevanceFieldEnum)[keyof typeof role_permissionsOrderByRelevanceFieldEnum]


  export const site_interactionsOrderByRelevanceFieldEnum: {
    session_id: 'session_id',
    page: 'page',
    action: 'action',
    metadata: 'metadata',
    ip_address: 'ip_address',
    user_agent: 'user_agent'
  };

  export type site_interactionsOrderByRelevanceFieldEnum = (typeof site_interactionsOrderByRelevanceFieldEnum)[keyof typeof site_interactionsOrderByRelevanceFieldEnum]


  export const skillsOrderByRelevanceFieldEnum: {
    name: 'name',
    category: 'category',
    description: 'description'
  };

  export type skillsOrderByRelevanceFieldEnum = (typeof skillsOrderByRelevanceFieldEnum)[keyof typeof skillsOrderByRelevanceFieldEnum]


  export const testimonialsOrderByRelevanceFieldEnum: {
    name: 'name',
    role: 'role',
    message: 'message',
    image_url: 'image_url',
    translation_group_id: 'translation_group_id'
  };

  export type testimonialsOrderByRelevanceFieldEnum = (typeof testimonialsOrderByRelevanceFieldEnum)[keyof typeof testimonialsOrderByRelevanceFieldEnum]


  export const usersOrderByRelevanceFieldEnum: {
    full_name: 'full_name',
    email: 'email',
    phone: 'phone',
    password_hash: 'password_hash',
    profile_image_url: 'profile_image_url'
  };

  export type usersOrderByRelevanceFieldEnum = (typeof usersOrderByRelevanceFieldEnum)[keyof typeof usersOrderByRelevanceFieldEnum]


  export const volunteer_profilesOrderByRelevanceFieldEnum: {
    area_of_expertise: 'area_of_expertise',
    location: 'location',
    availability: 'availability',
    motivation: 'motivation',
    certificate_url: 'certificate_url',
    emergency_contact_name: 'emergency_contact_name',
    emergency_contact_phone: 'emergency_contact_phone'
  };

  export type volunteer_profilesOrderByRelevanceFieldEnum = (typeof volunteer_profilesOrderByRelevanceFieldEnum)[keyof typeof volunteer_profilesOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'campaigns_language'
   */
  export type Enumcampaigns_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'campaigns_language'>
    


  /**
   * Reference to a field of type 'contact_messages_reason'
   */
  export type Enumcontact_messages_reasonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'contact_messages_reason'>
    


  /**
   * Reference to a field of type 'contact_messages_status'
   */
  export type Enumcontact_messages_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'contact_messages_status'>
    


  /**
   * Reference to a field of type 'documents_language'
   */
  export type Enumdocuments_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'documents_language'>
    


  /**
   * Reference to a field of type 'donations_donation_type'
   */
  export type Enumdonations_donation_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'donations_donation_type'>
    


  /**
   * Reference to a field of type 'donations_payment_status'
   */
  export type Enumdonations_payment_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'donations_payment_status'>
    


  /**
   * Reference to a field of type 'donor_profiles_donation_frequency'
   */
  export type Enumdonor_profiles_donation_frequencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'donor_profiles_donation_frequency'>
    


  /**
   * Reference to a field of type 'donor_profiles_donation_tier'
   */
  export type Enumdonor_profiles_donation_tierFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'donor_profiles_donation_tier'>
    


  /**
   * Reference to a field of type 'email_logs_status'
   */
  export type Enumemail_logs_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'email_logs_status'>
    


  /**
   * Reference to a field of type 'event_participants_role'
   */
  export type Enumevent_participants_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'event_participants_role'>
    


  /**
   * Reference to a field of type 'event_participants_status'
   */
  export type Enumevent_participants_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'event_participants_status'>
    


  /**
   * Reference to a field of type 'events_status'
   */
  export type Enumevents_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'events_status'>
    


  /**
   * Reference to a field of type 'events_language'
   */
  export type Enumevents_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'events_language'>
    


  /**
   * Reference to a field of type 'faqs_language'
   */
  export type Enumfaqs_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'faqs_language'>
    


  /**
   * Reference to a field of type 'media_media_type'
   */
  export type Enummedia_media_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'media_media_type'>
    


  /**
   * Reference to a field of type 'media_language'
   */
  export type Enummedia_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'media_language'>
    


  /**
   * Reference to a field of type 'newsletter_subscribers_language_preference'
   */
  export type Enumnewsletter_subscribers_language_preferenceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'newsletter_subscribers_language_preference'>
    


  /**
   * Reference to a field of type 'partners_type'
   */
  export type Enumpartners_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'partners_type'>
    


  /**
   * Reference to a field of type 'partners_language'
   */
  export type Enumpartners_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'partners_language'>
    


  /**
   * Reference to a field of type 'posts_post_type'
   */
  export type Enumposts_post_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'posts_post_type'>
    


  /**
   * Reference to a field of type 'posts_language'
   */
  export type Enumposts_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'posts_language'>
    


  /**
   * Reference to a field of type 'programs_category'
   */
  export type Enumprograms_categoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'programs_category'>
    


  /**
   * Reference to a field of type 'programs_language'
   */
  export type Enumprograms_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'programs_language'>
    


  /**
   * Reference to a field of type 'role_permissions_role'
   */
  export type Enumrole_permissions_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'role_permissions_role'>
    


  /**
   * Reference to a field of type 'testimonials_type'
   */
  export type Enumtestimonials_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'testimonials_type'>
    


  /**
   * Reference to a field of type 'testimonials_language'
   */
  export type Enumtestimonials_languageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'testimonials_language'>
    


  /**
   * Reference to a field of type 'users_role'
   */
  export type Enumusers_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'users_role'>
    


  /**
   * Reference to a field of type 'users_language_preference'
   */
  export type Enumusers_language_preferenceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'users_language_preference'>
    


  /**
   * Reference to a field of type 'volunteer_profiles_background_check_status'
   */
  export type Enumvolunteer_profiles_background_check_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'volunteer_profiles_background_check_status'>
    


  /**
   * Reference to a field of type 'volunteer_skills_proficiency_level'
   */
  export type Enumvolunteer_skills_proficiency_levelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'volunteer_skills_proficiency_level'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type campaignsWhereInput = {
    AND?: campaignsWhereInput | campaignsWhereInput[]
    OR?: campaignsWhereInput[]
    NOT?: campaignsWhereInput | campaignsWhereInput[]
    id?: BigIntFilter<"campaigns"> | bigint | number
    title?: StringFilter<"campaigns"> | string
    slug?: StringFilter<"campaigns"> | string
    description?: StringNullableFilter<"campaigns"> | string | null
    goal_amount?: DecimalFilter<"campaigns"> | Decimal | DecimalJsLike | number | string
    current_amount?: DecimalNullableFilter<"campaigns"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFilter<"campaigns"> | Date | string
    end_date?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    is_active?: BoolNullableFilter<"campaigns"> | boolean | null
    is_featured?: BoolNullableFilter<"campaigns"> | boolean | null
    category?: StringNullableFilter<"campaigns"> | string | null
    progress_bar_color?: StringNullableFilter<"campaigns"> | string | null
    image_url?: StringNullableFilter<"campaigns"> | string | null
    video_url?: StringNullableFilter<"campaigns"> | string | null
    donor_count?: IntNullableFilter<"campaigns"> | number | null
    success_stories?: StringNullableFilter<"campaigns"> | string | null
    created_by?: BigIntNullableFilter<"campaigns"> | bigint | number | null
    language?: Enumcampaigns_languageNullableFilter<"campaigns"> | $Enums.campaigns_language | null
    translation_group_id?: StringNullableFilter<"campaigns"> | string | null
    created_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    donations?: DonationsListRelationFilter
  }

  export type campaignsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    goal_amount?: SortOrder
    current_amount?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    progress_bar_color?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    video_url?: SortOrderInput | SortOrder
    donor_count?: SortOrderInput | SortOrder
    success_stories?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    donations?: donationsOrderByRelationAggregateInput
    _relevance?: campaignsOrderByRelevanceInput
  }

  export type campaignsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    slug?: string
    AND?: campaignsWhereInput | campaignsWhereInput[]
    OR?: campaignsWhereInput[]
    NOT?: campaignsWhereInput | campaignsWhereInput[]
    title?: StringFilter<"campaigns"> | string
    description?: StringNullableFilter<"campaigns"> | string | null
    goal_amount?: DecimalFilter<"campaigns"> | Decimal | DecimalJsLike | number | string
    current_amount?: DecimalNullableFilter<"campaigns"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFilter<"campaigns"> | Date | string
    end_date?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    is_active?: BoolNullableFilter<"campaigns"> | boolean | null
    is_featured?: BoolNullableFilter<"campaigns"> | boolean | null
    category?: StringNullableFilter<"campaigns"> | string | null
    progress_bar_color?: StringNullableFilter<"campaigns"> | string | null
    image_url?: StringNullableFilter<"campaigns"> | string | null
    video_url?: StringNullableFilter<"campaigns"> | string | null
    donor_count?: IntNullableFilter<"campaigns"> | number | null
    success_stories?: StringNullableFilter<"campaigns"> | string | null
    created_by?: BigIntNullableFilter<"campaigns"> | bigint | number | null
    language?: Enumcampaigns_languageNullableFilter<"campaigns"> | $Enums.campaigns_language | null
    translation_group_id?: StringNullableFilter<"campaigns"> | string | null
    created_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    donations?: DonationsListRelationFilter
  }, "id" | "slug">

  export type campaignsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    goal_amount?: SortOrder
    current_amount?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    progress_bar_color?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    video_url?: SortOrderInput | SortOrder
    donor_count?: SortOrderInput | SortOrder
    success_stories?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: campaignsCountOrderByAggregateInput
    _avg?: campaignsAvgOrderByAggregateInput
    _max?: campaignsMaxOrderByAggregateInput
    _min?: campaignsMinOrderByAggregateInput
    _sum?: campaignsSumOrderByAggregateInput
  }

  export type campaignsScalarWhereWithAggregatesInput = {
    AND?: campaignsScalarWhereWithAggregatesInput | campaignsScalarWhereWithAggregatesInput[]
    OR?: campaignsScalarWhereWithAggregatesInput[]
    NOT?: campaignsScalarWhereWithAggregatesInput | campaignsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"campaigns"> | bigint | number
    title?: StringWithAggregatesFilter<"campaigns"> | string
    slug?: StringWithAggregatesFilter<"campaigns"> | string
    description?: StringNullableWithAggregatesFilter<"campaigns"> | string | null
    goal_amount?: DecimalWithAggregatesFilter<"campaigns"> | Decimal | DecimalJsLike | number | string
    current_amount?: DecimalNullableWithAggregatesFilter<"campaigns"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeWithAggregatesFilter<"campaigns"> | Date | string
    end_date?: DateTimeNullableWithAggregatesFilter<"campaigns"> | Date | string | null
    is_active?: BoolNullableWithAggregatesFilter<"campaigns"> | boolean | null
    is_featured?: BoolNullableWithAggregatesFilter<"campaigns"> | boolean | null
    category?: StringNullableWithAggregatesFilter<"campaigns"> | string | null
    progress_bar_color?: StringNullableWithAggregatesFilter<"campaigns"> | string | null
    image_url?: StringNullableWithAggregatesFilter<"campaigns"> | string | null
    video_url?: StringNullableWithAggregatesFilter<"campaigns"> | string | null
    donor_count?: IntNullableWithAggregatesFilter<"campaigns"> | number | null
    success_stories?: StringNullableWithAggregatesFilter<"campaigns"> | string | null
    created_by?: BigIntNullableWithAggregatesFilter<"campaigns"> | bigint | number | null
    language?: Enumcampaigns_languageNullableWithAggregatesFilter<"campaigns"> | $Enums.campaigns_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"campaigns"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"campaigns"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"campaigns"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"campaigns"> | Date | string | null
  }

  export type contact_messagesWhereInput = {
    AND?: contact_messagesWhereInput | contact_messagesWhereInput[]
    OR?: contact_messagesWhereInput[]
    NOT?: contact_messagesWhereInput | contact_messagesWhereInput[]
    id?: BigIntFilter<"contact_messages"> | bigint | number
    name?: StringFilter<"contact_messages"> | string
    email?: StringFilter<"contact_messages"> | string
    subject?: StringNullableFilter<"contact_messages"> | string | null
    message?: StringFilter<"contact_messages"> | string
    reason?: Enumcontact_messages_reasonFilter<"contact_messages"> | $Enums.contact_messages_reason
    status?: Enumcontact_messages_statusNullableFilter<"contact_messages"> | $Enums.contact_messages_status | null
    ip_address?: StringNullableFilter<"contact_messages"> | string | null
    user_agent?: StringNullableFilter<"contact_messages"> | string | null
    submitted_at?: DateTimeNullableFilter<"contact_messages"> | Date | string | null
    replied_at?: DateTimeNullableFilter<"contact_messages"> | Date | string | null
  }

  export type contact_messagesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    subject?: SortOrderInput | SortOrder
    message?: SortOrder
    reason?: SortOrder
    status?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    submitted_at?: SortOrderInput | SortOrder
    replied_at?: SortOrderInput | SortOrder
    _relevance?: contact_messagesOrderByRelevanceInput
  }

  export type contact_messagesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: contact_messagesWhereInput | contact_messagesWhereInput[]
    OR?: contact_messagesWhereInput[]
    NOT?: contact_messagesWhereInput | contact_messagesWhereInput[]
    name?: StringFilter<"contact_messages"> | string
    email?: StringFilter<"contact_messages"> | string
    subject?: StringNullableFilter<"contact_messages"> | string | null
    message?: StringFilter<"contact_messages"> | string
    reason?: Enumcontact_messages_reasonFilter<"contact_messages"> | $Enums.contact_messages_reason
    status?: Enumcontact_messages_statusNullableFilter<"contact_messages"> | $Enums.contact_messages_status | null
    ip_address?: StringNullableFilter<"contact_messages"> | string | null
    user_agent?: StringNullableFilter<"contact_messages"> | string | null
    submitted_at?: DateTimeNullableFilter<"contact_messages"> | Date | string | null
    replied_at?: DateTimeNullableFilter<"contact_messages"> | Date | string | null
  }, "id">

  export type contact_messagesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    subject?: SortOrderInput | SortOrder
    message?: SortOrder
    reason?: SortOrder
    status?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    submitted_at?: SortOrderInput | SortOrder
    replied_at?: SortOrderInput | SortOrder
    _count?: contact_messagesCountOrderByAggregateInput
    _avg?: contact_messagesAvgOrderByAggregateInput
    _max?: contact_messagesMaxOrderByAggregateInput
    _min?: contact_messagesMinOrderByAggregateInput
    _sum?: contact_messagesSumOrderByAggregateInput
  }

  export type contact_messagesScalarWhereWithAggregatesInput = {
    AND?: contact_messagesScalarWhereWithAggregatesInput | contact_messagesScalarWhereWithAggregatesInput[]
    OR?: contact_messagesScalarWhereWithAggregatesInput[]
    NOT?: contact_messagesScalarWhereWithAggregatesInput | contact_messagesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"contact_messages"> | bigint | number
    name?: StringWithAggregatesFilter<"contact_messages"> | string
    email?: StringWithAggregatesFilter<"contact_messages"> | string
    subject?: StringNullableWithAggregatesFilter<"contact_messages"> | string | null
    message?: StringWithAggregatesFilter<"contact_messages"> | string
    reason?: Enumcontact_messages_reasonWithAggregatesFilter<"contact_messages"> | $Enums.contact_messages_reason
    status?: Enumcontact_messages_statusNullableWithAggregatesFilter<"contact_messages"> | $Enums.contact_messages_status | null
    ip_address?: StringNullableWithAggregatesFilter<"contact_messages"> | string | null
    user_agent?: StringNullableWithAggregatesFilter<"contact_messages"> | string | null
    submitted_at?: DateTimeNullableWithAggregatesFilter<"contact_messages"> | Date | string | null
    replied_at?: DateTimeNullableWithAggregatesFilter<"contact_messages"> | Date | string | null
  }

  export type documentsWhereInput = {
    AND?: documentsWhereInput | documentsWhereInput[]
    OR?: documentsWhereInput[]
    NOT?: documentsWhereInput | documentsWhereInput[]
    id?: BigIntFilter<"documents"> | bigint | number
    title?: StringFilter<"documents"> | string
    description?: StringNullableFilter<"documents"> | string | null
    category?: StringNullableFilter<"documents"> | string | null
    file_url?: StringFilter<"documents"> | string
    file_size?: BigIntNullableFilter<"documents"> | bigint | number | null
    file_type?: StringNullableFilter<"documents"> | string | null
    uploaded_by?: BigIntNullableFilter<"documents"> | bigint | number | null
    language?: Enumdocuments_languageNullableFilter<"documents"> | $Enums.documents_language | null
    translation_group_id?: StringNullableFilter<"documents"> | string | null
    is_public?: BoolNullableFilter<"documents"> | boolean | null
    download_count?: IntNullableFilter<"documents"> | number | null
    uploaded_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type documentsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    file_url?: SortOrder
    file_size?: SortOrderInput | SortOrder
    file_type?: SortOrderInput | SortOrder
    uploaded_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_public?: SortOrderInput | SortOrder
    download_count?: SortOrderInput | SortOrder
    uploaded_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    _relevance?: documentsOrderByRelevanceInput
  }

  export type documentsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: documentsWhereInput | documentsWhereInput[]
    OR?: documentsWhereInput[]
    NOT?: documentsWhereInput | documentsWhereInput[]
    title?: StringFilter<"documents"> | string
    description?: StringNullableFilter<"documents"> | string | null
    category?: StringNullableFilter<"documents"> | string | null
    file_url?: StringFilter<"documents"> | string
    file_size?: BigIntNullableFilter<"documents"> | bigint | number | null
    file_type?: StringNullableFilter<"documents"> | string | null
    uploaded_by?: BigIntNullableFilter<"documents"> | bigint | number | null
    language?: Enumdocuments_languageNullableFilter<"documents"> | $Enums.documents_language | null
    translation_group_id?: StringNullableFilter<"documents"> | string | null
    is_public?: BoolNullableFilter<"documents"> | boolean | null
    download_count?: IntNullableFilter<"documents"> | number | null
    uploaded_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type documentsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    file_url?: SortOrder
    file_size?: SortOrderInput | SortOrder
    file_type?: SortOrderInput | SortOrder
    uploaded_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_public?: SortOrderInput | SortOrder
    download_count?: SortOrderInput | SortOrder
    uploaded_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: documentsCountOrderByAggregateInput
    _avg?: documentsAvgOrderByAggregateInput
    _max?: documentsMaxOrderByAggregateInput
    _min?: documentsMinOrderByAggregateInput
    _sum?: documentsSumOrderByAggregateInput
  }

  export type documentsScalarWhereWithAggregatesInput = {
    AND?: documentsScalarWhereWithAggregatesInput | documentsScalarWhereWithAggregatesInput[]
    OR?: documentsScalarWhereWithAggregatesInput[]
    NOT?: documentsScalarWhereWithAggregatesInput | documentsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"documents"> | bigint | number
    title?: StringWithAggregatesFilter<"documents"> | string
    description?: StringNullableWithAggregatesFilter<"documents"> | string | null
    category?: StringNullableWithAggregatesFilter<"documents"> | string | null
    file_url?: StringWithAggregatesFilter<"documents"> | string
    file_size?: BigIntNullableWithAggregatesFilter<"documents"> | bigint | number | null
    file_type?: StringNullableWithAggregatesFilter<"documents"> | string | null
    uploaded_by?: BigIntNullableWithAggregatesFilter<"documents"> | bigint | number | null
    language?: Enumdocuments_languageNullableWithAggregatesFilter<"documents"> | $Enums.documents_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"documents"> | string | null
    is_public?: BoolNullableWithAggregatesFilter<"documents"> | boolean | null
    download_count?: IntNullableWithAggregatesFilter<"documents"> | number | null
    uploaded_at?: DateTimeNullableWithAggregatesFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"documents"> | Date | string | null
  }

  export type donationsWhereInput = {
    AND?: donationsWhereInput | donationsWhereInput[]
    OR?: donationsWhereInput[]
    NOT?: donationsWhereInput | donationsWhereInput[]
    id?: BigIntFilter<"donations"> | bigint | number
    donor_id?: BigIntFilter<"donations"> | bigint | number
    campaign_id?: BigIntFilter<"donations"> | bigint | number
    amount?: DecimalFilter<"donations"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"donations"> | string
    donation_type?: Enumdonations_donation_typeFilter<"donations"> | $Enums.donations_donation_type
    payment_method?: StringNullableFilter<"donations"> | string | null
    payment_status?: Enumdonations_payment_statusFilter<"donations"> | $Enums.donations_payment_status
    transaction_id?: StringNullableFilter<"donations"> | string | null
    receipt_url?: StringNullableFilter<"donations"> | string | null
    is_acknowledged?: BoolNullableFilter<"donations"> | boolean | null
    is_tax_deductible?: BoolNullableFilter<"donations"> | boolean | null
    is_anonymous?: BoolNullableFilter<"donations"> | boolean | null
    notes?: StringNullableFilter<"donations"> | string | null
    donated_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    created_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    donor_profiles?: XOR<Donor_profilesScalarRelationFilter, donor_profilesWhereInput>
    campaigns?: XOR<CampaignsScalarRelationFilter, campaignsWhereInput>
  }

  export type donationsOrderByWithRelationInput = {
    id?: SortOrder
    donor_id?: SortOrder
    campaign_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrderInput | SortOrder
    payment_status?: SortOrder
    transaction_id?: SortOrderInput | SortOrder
    receipt_url?: SortOrderInput | SortOrder
    is_acknowledged?: SortOrderInput | SortOrder
    is_tax_deductible?: SortOrderInput | SortOrder
    is_anonymous?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    donated_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    donor_profiles?: donor_profilesOrderByWithRelationInput
    campaigns?: campaignsOrderByWithRelationInput
    _relevance?: donationsOrderByRelevanceInput
  }

  export type donationsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    transaction_id?: string
    AND?: donationsWhereInput | donationsWhereInput[]
    OR?: donationsWhereInput[]
    NOT?: donationsWhereInput | donationsWhereInput[]
    donor_id?: BigIntFilter<"donations"> | bigint | number
    campaign_id?: BigIntFilter<"donations"> | bigint | number
    amount?: DecimalFilter<"donations"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"donations"> | string
    donation_type?: Enumdonations_donation_typeFilter<"donations"> | $Enums.donations_donation_type
    payment_method?: StringNullableFilter<"donations"> | string | null
    payment_status?: Enumdonations_payment_statusFilter<"donations"> | $Enums.donations_payment_status
    receipt_url?: StringNullableFilter<"donations"> | string | null
    is_acknowledged?: BoolNullableFilter<"donations"> | boolean | null
    is_tax_deductible?: BoolNullableFilter<"donations"> | boolean | null
    is_anonymous?: BoolNullableFilter<"donations"> | boolean | null
    notes?: StringNullableFilter<"donations"> | string | null
    donated_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    created_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    donor_profiles?: XOR<Donor_profilesScalarRelationFilter, donor_profilesWhereInput>
    campaigns?: XOR<CampaignsScalarRelationFilter, campaignsWhereInput>
  }, "id" | "transaction_id">

  export type donationsOrderByWithAggregationInput = {
    id?: SortOrder
    donor_id?: SortOrder
    campaign_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrderInput | SortOrder
    payment_status?: SortOrder
    transaction_id?: SortOrderInput | SortOrder
    receipt_url?: SortOrderInput | SortOrder
    is_acknowledged?: SortOrderInput | SortOrder
    is_tax_deductible?: SortOrderInput | SortOrder
    is_anonymous?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    donated_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: donationsCountOrderByAggregateInput
    _avg?: donationsAvgOrderByAggregateInput
    _max?: donationsMaxOrderByAggregateInput
    _min?: donationsMinOrderByAggregateInput
    _sum?: donationsSumOrderByAggregateInput
  }

  export type donationsScalarWhereWithAggregatesInput = {
    AND?: donationsScalarWhereWithAggregatesInput | donationsScalarWhereWithAggregatesInput[]
    OR?: donationsScalarWhereWithAggregatesInput[]
    NOT?: donationsScalarWhereWithAggregatesInput | donationsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"donations"> | bigint | number
    donor_id?: BigIntWithAggregatesFilter<"donations"> | bigint | number
    campaign_id?: BigIntWithAggregatesFilter<"donations"> | bigint | number
    amount?: DecimalWithAggregatesFilter<"donations"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"donations"> | string
    donation_type?: Enumdonations_donation_typeWithAggregatesFilter<"donations"> | $Enums.donations_donation_type
    payment_method?: StringNullableWithAggregatesFilter<"donations"> | string | null
    payment_status?: Enumdonations_payment_statusWithAggregatesFilter<"donations"> | $Enums.donations_payment_status
    transaction_id?: StringNullableWithAggregatesFilter<"donations"> | string | null
    receipt_url?: StringNullableWithAggregatesFilter<"donations"> | string | null
    is_acknowledged?: BoolNullableWithAggregatesFilter<"donations"> | boolean | null
    is_tax_deductible?: BoolNullableWithAggregatesFilter<"donations"> | boolean | null
    is_anonymous?: BoolNullableWithAggregatesFilter<"donations"> | boolean | null
    notes?: StringNullableWithAggregatesFilter<"donations"> | string | null
    donated_at?: DateTimeNullableWithAggregatesFilter<"donations"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"donations"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"donations"> | Date | string | null
  }

  export type donor_profilesWhereInput = {
    AND?: donor_profilesWhereInput | donor_profilesWhereInput[]
    OR?: donor_profilesWhereInput[]
    NOT?: donor_profilesWhereInput | donor_profilesWhereInput[]
    user_id?: BigIntFilter<"donor_profiles"> | bigint | number
    is_recurring_donor?: BoolNullableFilter<"donor_profiles"> | boolean | null
    preferred_payment_method?: StringNullableFilter<"donor_profiles"> | string | null
    total_donated?: DecimalNullableFilter<"donor_profiles"> | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: Enumdonor_profiles_donation_frequencyNullableFilter<"donor_profiles"> | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: StringNullableFilter<"donor_profiles"> | string | null
    is_anonymous?: BoolNullableFilter<"donor_profiles"> | boolean | null
    last_donation_date?: DateTimeNullableFilter<"donor_profiles"> | Date | string | null
    donation_tier?: Enumdonor_profiles_donation_tierNullableFilter<"donor_profiles"> | $Enums.donor_profiles_donation_tier | null
    created_at?: DateTimeNullableFilter<"donor_profiles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"donor_profiles"> | Date | string | null
    donations?: DonationsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type donor_profilesOrderByWithRelationInput = {
    user_id?: SortOrder
    is_recurring_donor?: SortOrderInput | SortOrder
    preferred_payment_method?: SortOrderInput | SortOrder
    total_donated?: SortOrderInput | SortOrder
    donation_frequency?: SortOrderInput | SortOrder
    tax_receipt_email?: SortOrderInput | SortOrder
    is_anonymous?: SortOrderInput | SortOrder
    last_donation_date?: SortOrderInput | SortOrder
    donation_tier?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    donations?: donationsOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
    _relevance?: donor_profilesOrderByRelevanceInput
  }

  export type donor_profilesWhereUniqueInput = Prisma.AtLeast<{
    user_id?: bigint | number
    AND?: donor_profilesWhereInput | donor_profilesWhereInput[]
    OR?: donor_profilesWhereInput[]
    NOT?: donor_profilesWhereInput | donor_profilesWhereInput[]
    is_recurring_donor?: BoolNullableFilter<"donor_profiles"> | boolean | null
    preferred_payment_method?: StringNullableFilter<"donor_profiles"> | string | null
    total_donated?: DecimalNullableFilter<"donor_profiles"> | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: Enumdonor_profiles_donation_frequencyNullableFilter<"donor_profiles"> | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: StringNullableFilter<"donor_profiles"> | string | null
    is_anonymous?: BoolNullableFilter<"donor_profiles"> | boolean | null
    last_donation_date?: DateTimeNullableFilter<"donor_profiles"> | Date | string | null
    donation_tier?: Enumdonor_profiles_donation_tierNullableFilter<"donor_profiles"> | $Enums.donor_profiles_donation_tier | null
    created_at?: DateTimeNullableFilter<"donor_profiles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"donor_profiles"> | Date | string | null
    donations?: DonationsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "user_id">

  export type donor_profilesOrderByWithAggregationInput = {
    user_id?: SortOrder
    is_recurring_donor?: SortOrderInput | SortOrder
    preferred_payment_method?: SortOrderInput | SortOrder
    total_donated?: SortOrderInput | SortOrder
    donation_frequency?: SortOrderInput | SortOrder
    tax_receipt_email?: SortOrderInput | SortOrder
    is_anonymous?: SortOrderInput | SortOrder
    last_donation_date?: SortOrderInput | SortOrder
    donation_tier?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: donor_profilesCountOrderByAggregateInput
    _avg?: donor_profilesAvgOrderByAggregateInput
    _max?: donor_profilesMaxOrderByAggregateInput
    _min?: donor_profilesMinOrderByAggregateInput
    _sum?: donor_profilesSumOrderByAggregateInput
  }

  export type donor_profilesScalarWhereWithAggregatesInput = {
    AND?: donor_profilesScalarWhereWithAggregatesInput | donor_profilesScalarWhereWithAggregatesInput[]
    OR?: donor_profilesScalarWhereWithAggregatesInput[]
    NOT?: donor_profilesScalarWhereWithAggregatesInput | donor_profilesScalarWhereWithAggregatesInput[]
    user_id?: BigIntWithAggregatesFilter<"donor_profiles"> | bigint | number
    is_recurring_donor?: BoolNullableWithAggregatesFilter<"donor_profiles"> | boolean | null
    preferred_payment_method?: StringNullableWithAggregatesFilter<"donor_profiles"> | string | null
    total_donated?: DecimalNullableWithAggregatesFilter<"donor_profiles"> | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: Enumdonor_profiles_donation_frequencyNullableWithAggregatesFilter<"donor_profiles"> | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: StringNullableWithAggregatesFilter<"donor_profiles"> | string | null
    is_anonymous?: BoolNullableWithAggregatesFilter<"donor_profiles"> | boolean | null
    last_donation_date?: DateTimeNullableWithAggregatesFilter<"donor_profiles"> | Date | string | null
    donation_tier?: Enumdonor_profiles_donation_tierNullableWithAggregatesFilter<"donor_profiles"> | $Enums.donor_profiles_donation_tier | null
    created_at?: DateTimeNullableWithAggregatesFilter<"donor_profiles"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"donor_profiles"> | Date | string | null
  }

  export type email_logsWhereInput = {
    AND?: email_logsWhereInput | email_logsWhereInput[]
    OR?: email_logsWhereInput[]
    NOT?: email_logsWhereInput | email_logsWhereInput[]
    id?: BigIntFilter<"email_logs"> | bigint | number
    recipient?: StringFilter<"email_logs"> | string
    subject?: StringNullableFilter<"email_logs"> | string | null
    template_used?: StringNullableFilter<"email_logs"> | string | null
    content?: StringNullableFilter<"email_logs"> | string | null
    status?: Enumemail_logs_statusFilter<"email_logs"> | $Enums.email_logs_status
    error_message?: StringNullableFilter<"email_logs"> | string | null
    sent_at?: DateTimeNullableFilter<"email_logs"> | Date | string | null
    opened_at?: DateTimeNullableFilter<"email_logs"> | Date | string | null
    clicked_at?: DateTimeNullableFilter<"email_logs"> | Date | string | null
  }

  export type email_logsOrderByWithRelationInput = {
    id?: SortOrder
    recipient?: SortOrder
    subject?: SortOrderInput | SortOrder
    template_used?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    status?: SortOrder
    error_message?: SortOrderInput | SortOrder
    sent_at?: SortOrderInput | SortOrder
    opened_at?: SortOrderInput | SortOrder
    clicked_at?: SortOrderInput | SortOrder
    _relevance?: email_logsOrderByRelevanceInput
  }

  export type email_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: email_logsWhereInput | email_logsWhereInput[]
    OR?: email_logsWhereInput[]
    NOT?: email_logsWhereInput | email_logsWhereInput[]
    recipient?: StringFilter<"email_logs"> | string
    subject?: StringNullableFilter<"email_logs"> | string | null
    template_used?: StringNullableFilter<"email_logs"> | string | null
    content?: StringNullableFilter<"email_logs"> | string | null
    status?: Enumemail_logs_statusFilter<"email_logs"> | $Enums.email_logs_status
    error_message?: StringNullableFilter<"email_logs"> | string | null
    sent_at?: DateTimeNullableFilter<"email_logs"> | Date | string | null
    opened_at?: DateTimeNullableFilter<"email_logs"> | Date | string | null
    clicked_at?: DateTimeNullableFilter<"email_logs"> | Date | string | null
  }, "id">

  export type email_logsOrderByWithAggregationInput = {
    id?: SortOrder
    recipient?: SortOrder
    subject?: SortOrderInput | SortOrder
    template_used?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    status?: SortOrder
    error_message?: SortOrderInput | SortOrder
    sent_at?: SortOrderInput | SortOrder
    opened_at?: SortOrderInput | SortOrder
    clicked_at?: SortOrderInput | SortOrder
    _count?: email_logsCountOrderByAggregateInput
    _avg?: email_logsAvgOrderByAggregateInput
    _max?: email_logsMaxOrderByAggregateInput
    _min?: email_logsMinOrderByAggregateInput
    _sum?: email_logsSumOrderByAggregateInput
  }

  export type email_logsScalarWhereWithAggregatesInput = {
    AND?: email_logsScalarWhereWithAggregatesInput | email_logsScalarWhereWithAggregatesInput[]
    OR?: email_logsScalarWhereWithAggregatesInput[]
    NOT?: email_logsScalarWhereWithAggregatesInput | email_logsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"email_logs"> | bigint | number
    recipient?: StringWithAggregatesFilter<"email_logs"> | string
    subject?: StringNullableWithAggregatesFilter<"email_logs"> | string | null
    template_used?: StringNullableWithAggregatesFilter<"email_logs"> | string | null
    content?: StringNullableWithAggregatesFilter<"email_logs"> | string | null
    status?: Enumemail_logs_statusWithAggregatesFilter<"email_logs"> | $Enums.email_logs_status
    error_message?: StringNullableWithAggregatesFilter<"email_logs"> | string | null
    sent_at?: DateTimeNullableWithAggregatesFilter<"email_logs"> | Date | string | null
    opened_at?: DateTimeNullableWithAggregatesFilter<"email_logs"> | Date | string | null
    clicked_at?: DateTimeNullableWithAggregatesFilter<"email_logs"> | Date | string | null
  }

  export type event_participantsWhereInput = {
    AND?: event_participantsWhereInput | event_participantsWhereInput[]
    OR?: event_participantsWhereInput[]
    NOT?: event_participantsWhereInput | event_participantsWhereInput[]
    event_id?: BigIntFilter<"event_participants"> | bigint | number
    user_id?: BigIntFilter<"event_participants"> | bigint | number
    role?: Enumevent_participants_roleFilter<"event_participants"> | $Enums.event_participants_role
    status?: Enumevent_participants_statusNullableFilter<"event_participants"> | $Enums.event_participants_status | null
    hours_contributed?: DecimalNullableFilter<"event_participants"> | Decimal | DecimalJsLike | number | string | null
    feedback?: StringNullableFilter<"event_participants"> | string | null
    rating?: IntNullableFilter<"event_participants"> | number | null
    registered_at?: DateTimeNullableFilter<"event_participants"> | Date | string | null
    attended_at?: DateTimeNullableFilter<"event_participants"> | Date | string | null
    events?: XOR<EventsScalarRelationFilter, eventsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type event_participantsOrderByWithRelationInput = {
    event_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    status?: SortOrderInput | SortOrder
    hours_contributed?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    registered_at?: SortOrderInput | SortOrder
    attended_at?: SortOrderInput | SortOrder
    events?: eventsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    _relevance?: event_participantsOrderByRelevanceInput
  }

  export type event_participantsWhereUniqueInput = Prisma.AtLeast<{
    event_id_user_id?: event_participantsEvent_idUser_idCompoundUniqueInput
    AND?: event_participantsWhereInput | event_participantsWhereInput[]
    OR?: event_participantsWhereInput[]
    NOT?: event_participantsWhereInput | event_participantsWhereInput[]
    event_id?: BigIntFilter<"event_participants"> | bigint | number
    user_id?: BigIntFilter<"event_participants"> | bigint | number
    role?: Enumevent_participants_roleFilter<"event_participants"> | $Enums.event_participants_role
    status?: Enumevent_participants_statusNullableFilter<"event_participants"> | $Enums.event_participants_status | null
    hours_contributed?: DecimalNullableFilter<"event_participants"> | Decimal | DecimalJsLike | number | string | null
    feedback?: StringNullableFilter<"event_participants"> | string | null
    rating?: IntNullableFilter<"event_participants"> | number | null
    registered_at?: DateTimeNullableFilter<"event_participants"> | Date | string | null
    attended_at?: DateTimeNullableFilter<"event_participants"> | Date | string | null
    events?: XOR<EventsScalarRelationFilter, eventsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "event_id_user_id">

  export type event_participantsOrderByWithAggregationInput = {
    event_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    status?: SortOrderInput | SortOrder
    hours_contributed?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    registered_at?: SortOrderInput | SortOrder
    attended_at?: SortOrderInput | SortOrder
    _count?: event_participantsCountOrderByAggregateInput
    _avg?: event_participantsAvgOrderByAggregateInput
    _max?: event_participantsMaxOrderByAggregateInput
    _min?: event_participantsMinOrderByAggregateInput
    _sum?: event_participantsSumOrderByAggregateInput
  }

  export type event_participantsScalarWhereWithAggregatesInput = {
    AND?: event_participantsScalarWhereWithAggregatesInput | event_participantsScalarWhereWithAggregatesInput[]
    OR?: event_participantsScalarWhereWithAggregatesInput[]
    NOT?: event_participantsScalarWhereWithAggregatesInput | event_participantsScalarWhereWithAggregatesInput[]
    event_id?: BigIntWithAggregatesFilter<"event_participants"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"event_participants"> | bigint | number
    role?: Enumevent_participants_roleWithAggregatesFilter<"event_participants"> | $Enums.event_participants_role
    status?: Enumevent_participants_statusNullableWithAggregatesFilter<"event_participants"> | $Enums.event_participants_status | null
    hours_contributed?: DecimalNullableWithAggregatesFilter<"event_participants"> | Decimal | DecimalJsLike | number | string | null
    feedback?: StringNullableWithAggregatesFilter<"event_participants"> | string | null
    rating?: IntNullableWithAggregatesFilter<"event_participants"> | number | null
    registered_at?: DateTimeNullableWithAggregatesFilter<"event_participants"> | Date | string | null
    attended_at?: DateTimeNullableWithAggregatesFilter<"event_participants"> | Date | string | null
  }

  export type eventsWhereInput = {
    AND?: eventsWhereInput | eventsWhereInput[]
    OR?: eventsWhereInput[]
    NOT?: eventsWhereInput | eventsWhereInput[]
    id?: BigIntFilter<"events"> | bigint | number
    title?: StringFilter<"events"> | string
    slug?: StringFilter<"events"> | string
    description?: StringNullableFilter<"events"> | string | null
    event_date?: DateTimeFilter<"events"> | Date | string
    event_time?: DateTimeFilter<"events"> | Date | string
    timezone?: StringNullableFilter<"events"> | string | null
    location?: StringNullableFilter<"events"> | string | null
    latitude?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableFilter<"events"> | string | null
    capacity?: IntNullableFilter<"events"> | number | null
    registered_count?: IntNullableFilter<"events"> | number | null
    status?: Enumevents_statusNullableFilter<"events"> | $Enums.events_status | null
    registration_deadline?: DateTimeNullableFilter<"events"> | Date | string | null
    registration_link?: StringNullableFilter<"events"> | string | null
    map_embed_url?: StringNullableFilter<"events"> | string | null
    agenda?: StringNullableFilter<"events"> | string | null
    speaker_info?: StringNullableFilter<"events"> | string | null
    requirements?: StringNullableFilter<"events"> | string | null
    ticket_price?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    ticket_link?: StringNullableFilter<"events"> | string | null
    is_featured?: BoolNullableFilter<"events"> | boolean | null
    created_by?: BigIntNullableFilter<"events"> | bigint | number | null
    language?: Enumevents_languageNullableFilter<"events"> | $Enums.events_language | null
    translation_group_id?: StringNullableFilter<"events"> | string | null
    created_at?: DateTimeNullableFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"events"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"events"> | Date | string | null
    event_participants?: Event_participantsListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    media?: MediaListRelationFilter
  }

  export type eventsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    event_date?: SortOrder
    event_time?: SortOrder
    timezone?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    registered_count?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    registration_deadline?: SortOrderInput | SortOrder
    registration_link?: SortOrderInput | SortOrder
    map_embed_url?: SortOrderInput | SortOrder
    agenda?: SortOrderInput | SortOrder
    speaker_info?: SortOrderInput | SortOrder
    requirements?: SortOrderInput | SortOrder
    ticket_price?: SortOrderInput | SortOrder
    ticket_link?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    event_participants?: event_participantsOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
    media?: mediaOrderByRelationAggregateInput
    _relevance?: eventsOrderByRelevanceInput
  }

  export type eventsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    slug?: string
    AND?: eventsWhereInput | eventsWhereInput[]
    OR?: eventsWhereInput[]
    NOT?: eventsWhereInput | eventsWhereInput[]
    title?: StringFilter<"events"> | string
    description?: StringNullableFilter<"events"> | string | null
    event_date?: DateTimeFilter<"events"> | Date | string
    event_time?: DateTimeFilter<"events"> | Date | string
    timezone?: StringNullableFilter<"events"> | string | null
    location?: StringNullableFilter<"events"> | string | null
    latitude?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableFilter<"events"> | string | null
    capacity?: IntNullableFilter<"events"> | number | null
    registered_count?: IntNullableFilter<"events"> | number | null
    status?: Enumevents_statusNullableFilter<"events"> | $Enums.events_status | null
    registration_deadline?: DateTimeNullableFilter<"events"> | Date | string | null
    registration_link?: StringNullableFilter<"events"> | string | null
    map_embed_url?: StringNullableFilter<"events"> | string | null
    agenda?: StringNullableFilter<"events"> | string | null
    speaker_info?: StringNullableFilter<"events"> | string | null
    requirements?: StringNullableFilter<"events"> | string | null
    ticket_price?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    ticket_link?: StringNullableFilter<"events"> | string | null
    is_featured?: BoolNullableFilter<"events"> | boolean | null
    created_by?: BigIntNullableFilter<"events"> | bigint | number | null
    language?: Enumevents_languageNullableFilter<"events"> | $Enums.events_language | null
    translation_group_id?: StringNullableFilter<"events"> | string | null
    created_at?: DateTimeNullableFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"events"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"events"> | Date | string | null
    event_participants?: Event_participantsListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    media?: MediaListRelationFilter
  }, "id" | "slug">

  export type eventsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    event_date?: SortOrder
    event_time?: SortOrder
    timezone?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    registered_count?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    registration_deadline?: SortOrderInput | SortOrder
    registration_link?: SortOrderInput | SortOrder
    map_embed_url?: SortOrderInput | SortOrder
    agenda?: SortOrderInput | SortOrder
    speaker_info?: SortOrderInput | SortOrder
    requirements?: SortOrderInput | SortOrder
    ticket_price?: SortOrderInput | SortOrder
    ticket_link?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: eventsCountOrderByAggregateInput
    _avg?: eventsAvgOrderByAggregateInput
    _max?: eventsMaxOrderByAggregateInput
    _min?: eventsMinOrderByAggregateInput
    _sum?: eventsSumOrderByAggregateInput
  }

  export type eventsScalarWhereWithAggregatesInput = {
    AND?: eventsScalarWhereWithAggregatesInput | eventsScalarWhereWithAggregatesInput[]
    OR?: eventsScalarWhereWithAggregatesInput[]
    NOT?: eventsScalarWhereWithAggregatesInput | eventsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"events"> | bigint | number
    title?: StringWithAggregatesFilter<"events"> | string
    slug?: StringWithAggregatesFilter<"events"> | string
    description?: StringNullableWithAggregatesFilter<"events"> | string | null
    event_date?: DateTimeWithAggregatesFilter<"events"> | Date | string
    event_time?: DateTimeWithAggregatesFilter<"events"> | Date | string
    timezone?: StringNullableWithAggregatesFilter<"events"> | string | null
    location?: StringNullableWithAggregatesFilter<"events"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableWithAggregatesFilter<"events"> | string | null
    capacity?: IntNullableWithAggregatesFilter<"events"> | number | null
    registered_count?: IntNullableWithAggregatesFilter<"events"> | number | null
    status?: Enumevents_statusNullableWithAggregatesFilter<"events"> | $Enums.events_status | null
    registration_deadline?: DateTimeNullableWithAggregatesFilter<"events"> | Date | string | null
    registration_link?: StringNullableWithAggregatesFilter<"events"> | string | null
    map_embed_url?: StringNullableWithAggregatesFilter<"events"> | string | null
    agenda?: StringNullableWithAggregatesFilter<"events"> | string | null
    speaker_info?: StringNullableWithAggregatesFilter<"events"> | string | null
    requirements?: StringNullableWithAggregatesFilter<"events"> | string | null
    ticket_price?: DecimalNullableWithAggregatesFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    ticket_link?: StringNullableWithAggregatesFilter<"events"> | string | null
    is_featured?: BoolNullableWithAggregatesFilter<"events"> | boolean | null
    created_by?: BigIntNullableWithAggregatesFilter<"events"> | bigint | number | null
    language?: Enumevents_languageNullableWithAggregatesFilter<"events"> | $Enums.events_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"events"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"events"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"events"> | Date | string | null
  }

  export type faqsWhereInput = {
    AND?: faqsWhereInput | faqsWhereInput[]
    OR?: faqsWhereInput[]
    NOT?: faqsWhereInput | faqsWhereInput[]
    id?: BigIntFilter<"faqs"> | bigint | number
    question?: StringFilter<"faqs"> | string
    answer?: StringFilter<"faqs"> | string
    category?: StringNullableFilter<"faqs"> | string | null
    language?: Enumfaqs_languageNullableFilter<"faqs"> | $Enums.faqs_language | null
    translation_group_id?: StringNullableFilter<"faqs"> | string | null
    is_active?: BoolNullableFilter<"faqs"> | boolean | null
    sort_order?: IntNullableFilter<"faqs"> | number | null
    created_at?: DateTimeNullableFilter<"faqs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"faqs"> | Date | string | null
  }

  export type faqsOrderByWithRelationInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    sort_order?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _relevance?: faqsOrderByRelevanceInput
  }

  export type faqsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: faqsWhereInput | faqsWhereInput[]
    OR?: faqsWhereInput[]
    NOT?: faqsWhereInput | faqsWhereInput[]
    question?: StringFilter<"faqs"> | string
    answer?: StringFilter<"faqs"> | string
    category?: StringNullableFilter<"faqs"> | string | null
    language?: Enumfaqs_languageNullableFilter<"faqs"> | $Enums.faqs_language | null
    translation_group_id?: StringNullableFilter<"faqs"> | string | null
    is_active?: BoolNullableFilter<"faqs"> | boolean | null
    sort_order?: IntNullableFilter<"faqs"> | number | null
    created_at?: DateTimeNullableFilter<"faqs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"faqs"> | Date | string | null
  }, "id">

  export type faqsOrderByWithAggregationInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    sort_order?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: faqsCountOrderByAggregateInput
    _avg?: faqsAvgOrderByAggregateInput
    _max?: faqsMaxOrderByAggregateInput
    _min?: faqsMinOrderByAggregateInput
    _sum?: faqsSumOrderByAggregateInput
  }

  export type faqsScalarWhereWithAggregatesInput = {
    AND?: faqsScalarWhereWithAggregatesInput | faqsScalarWhereWithAggregatesInput[]
    OR?: faqsScalarWhereWithAggregatesInput[]
    NOT?: faqsScalarWhereWithAggregatesInput | faqsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"faqs"> | bigint | number
    question?: StringWithAggregatesFilter<"faqs"> | string
    answer?: StringWithAggregatesFilter<"faqs"> | string
    category?: StringNullableWithAggregatesFilter<"faqs"> | string | null
    language?: Enumfaqs_languageNullableWithAggregatesFilter<"faqs"> | $Enums.faqs_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"faqs"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"faqs"> | boolean | null
    sort_order?: IntNullableWithAggregatesFilter<"faqs"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"faqs"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"faqs"> | Date | string | null
  }

  export type mediaWhereInput = {
    AND?: mediaWhereInput | mediaWhereInput[]
    OR?: mediaWhereInput[]
    NOT?: mediaWhereInput | mediaWhereInput[]
    id?: BigIntFilter<"media"> | bigint | number
    media_type?: Enummedia_media_typeFilter<"media"> | $Enums.media_media_type
    title?: StringNullableFilter<"media"> | string | null
    description?: StringNullableFilter<"media"> | string | null
    file_url?: StringFilter<"media"> | string
    related_event_id?: BigIntNullableFilter<"media"> | bigint | number | null
    related_program_id?: BigIntNullableFilter<"media"> | bigint | number | null
    uploaded_by?: BigIntNullableFilter<"media"> | bigint | number | null
    language?: Enummedia_languageNullableFilter<"media"> | $Enums.media_language | null
    translation_group_id?: StringNullableFilter<"media"> | string | null
    uploaded_at?: DateTimeNullableFilter<"media"> | Date | string | null
    events?: XOR<EventsNullableScalarRelationFilter, eventsWhereInput> | null
    programs?: XOR<ProgramsNullableScalarRelationFilter, programsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type mediaOrderByWithRelationInput = {
    id?: SortOrder
    media_type?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    file_url?: SortOrder
    related_event_id?: SortOrderInput | SortOrder
    related_program_id?: SortOrderInput | SortOrder
    uploaded_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    uploaded_at?: SortOrderInput | SortOrder
    events?: eventsOrderByWithRelationInput
    programs?: programsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    _relevance?: mediaOrderByRelevanceInput
  }

  export type mediaWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: mediaWhereInput | mediaWhereInput[]
    OR?: mediaWhereInput[]
    NOT?: mediaWhereInput | mediaWhereInput[]
    media_type?: Enummedia_media_typeFilter<"media"> | $Enums.media_media_type
    title?: StringNullableFilter<"media"> | string | null
    description?: StringNullableFilter<"media"> | string | null
    file_url?: StringFilter<"media"> | string
    related_event_id?: BigIntNullableFilter<"media"> | bigint | number | null
    related_program_id?: BigIntNullableFilter<"media"> | bigint | number | null
    uploaded_by?: BigIntNullableFilter<"media"> | bigint | number | null
    language?: Enummedia_languageNullableFilter<"media"> | $Enums.media_language | null
    translation_group_id?: StringNullableFilter<"media"> | string | null
    uploaded_at?: DateTimeNullableFilter<"media"> | Date | string | null
    events?: XOR<EventsNullableScalarRelationFilter, eventsWhereInput> | null
    programs?: XOR<ProgramsNullableScalarRelationFilter, programsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type mediaOrderByWithAggregationInput = {
    id?: SortOrder
    media_type?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    file_url?: SortOrder
    related_event_id?: SortOrderInput | SortOrder
    related_program_id?: SortOrderInput | SortOrder
    uploaded_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    uploaded_at?: SortOrderInput | SortOrder
    _count?: mediaCountOrderByAggregateInput
    _avg?: mediaAvgOrderByAggregateInput
    _max?: mediaMaxOrderByAggregateInput
    _min?: mediaMinOrderByAggregateInput
    _sum?: mediaSumOrderByAggregateInput
  }

  export type mediaScalarWhereWithAggregatesInput = {
    AND?: mediaScalarWhereWithAggregatesInput | mediaScalarWhereWithAggregatesInput[]
    OR?: mediaScalarWhereWithAggregatesInput[]
    NOT?: mediaScalarWhereWithAggregatesInput | mediaScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"media"> | bigint | number
    media_type?: Enummedia_media_typeWithAggregatesFilter<"media"> | $Enums.media_media_type
    title?: StringNullableWithAggregatesFilter<"media"> | string | null
    description?: StringNullableWithAggregatesFilter<"media"> | string | null
    file_url?: StringWithAggregatesFilter<"media"> | string
    related_event_id?: BigIntNullableWithAggregatesFilter<"media"> | bigint | number | null
    related_program_id?: BigIntNullableWithAggregatesFilter<"media"> | bigint | number | null
    uploaded_by?: BigIntNullableWithAggregatesFilter<"media"> | bigint | number | null
    language?: Enummedia_languageNullableWithAggregatesFilter<"media"> | $Enums.media_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"media"> | string | null
    uploaded_at?: DateTimeNullableWithAggregatesFilter<"media"> | Date | string | null
  }

  export type newsletter_subscribersWhereInput = {
    AND?: newsletter_subscribersWhereInput | newsletter_subscribersWhereInput[]
    OR?: newsletter_subscribersWhereInput[]
    NOT?: newsletter_subscribersWhereInput | newsletter_subscribersWhereInput[]
    id?: BigIntFilter<"newsletter_subscribers"> | bigint | number
    email?: StringFilter<"newsletter_subscribers"> | string
    first_name?: StringNullableFilter<"newsletter_subscribers"> | string | null
    last_name?: StringNullableFilter<"newsletter_subscribers"> | string | null
    is_active?: BoolNullableFilter<"newsletter_subscribers"> | boolean | null
    language_preference?: Enumnewsletter_subscribers_language_preferenceNullableFilter<"newsletter_subscribers"> | $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: DateTimeNullableFilter<"newsletter_subscribers"> | Date | string | null
    unsubscribed_at?: DateTimeNullableFilter<"newsletter_subscribers"> | Date | string | null
  }

  export type newsletter_subscribersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    language_preference?: SortOrderInput | SortOrder
    subscribed_at?: SortOrderInput | SortOrder
    unsubscribed_at?: SortOrderInput | SortOrder
    _relevance?: newsletter_subscribersOrderByRelevanceInput
  }

  export type newsletter_subscribersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    email?: string
    AND?: newsletter_subscribersWhereInput | newsletter_subscribersWhereInput[]
    OR?: newsletter_subscribersWhereInput[]
    NOT?: newsletter_subscribersWhereInput | newsletter_subscribersWhereInput[]
    first_name?: StringNullableFilter<"newsletter_subscribers"> | string | null
    last_name?: StringNullableFilter<"newsletter_subscribers"> | string | null
    is_active?: BoolNullableFilter<"newsletter_subscribers"> | boolean | null
    language_preference?: Enumnewsletter_subscribers_language_preferenceNullableFilter<"newsletter_subscribers"> | $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: DateTimeNullableFilter<"newsletter_subscribers"> | Date | string | null
    unsubscribed_at?: DateTimeNullableFilter<"newsletter_subscribers"> | Date | string | null
  }, "id" | "email">

  export type newsletter_subscribersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    language_preference?: SortOrderInput | SortOrder
    subscribed_at?: SortOrderInput | SortOrder
    unsubscribed_at?: SortOrderInput | SortOrder
    _count?: newsletter_subscribersCountOrderByAggregateInput
    _avg?: newsletter_subscribersAvgOrderByAggregateInput
    _max?: newsletter_subscribersMaxOrderByAggregateInput
    _min?: newsletter_subscribersMinOrderByAggregateInput
    _sum?: newsletter_subscribersSumOrderByAggregateInput
  }

  export type newsletter_subscribersScalarWhereWithAggregatesInput = {
    AND?: newsletter_subscribersScalarWhereWithAggregatesInput | newsletter_subscribersScalarWhereWithAggregatesInput[]
    OR?: newsletter_subscribersScalarWhereWithAggregatesInput[]
    NOT?: newsletter_subscribersScalarWhereWithAggregatesInput | newsletter_subscribersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"newsletter_subscribers"> | bigint | number
    email?: StringWithAggregatesFilter<"newsletter_subscribers"> | string
    first_name?: StringNullableWithAggregatesFilter<"newsletter_subscribers"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"newsletter_subscribers"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"newsletter_subscribers"> | boolean | null
    language_preference?: Enumnewsletter_subscribers_language_preferenceNullableWithAggregatesFilter<"newsletter_subscribers"> | $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: DateTimeNullableWithAggregatesFilter<"newsletter_subscribers"> | Date | string | null
    unsubscribed_at?: DateTimeNullableWithAggregatesFilter<"newsletter_subscribers"> | Date | string | null
  }

  export type partnersWhereInput = {
    AND?: partnersWhereInput | partnersWhereInput[]
    OR?: partnersWhereInput[]
    NOT?: partnersWhereInput | partnersWhereInput[]
    id?: BigIntFilter<"partners"> | bigint | number
    name?: StringFilter<"partners"> | string
    logo_url?: StringNullableFilter<"partners"> | string | null
    type?: Enumpartners_typeFilter<"partners"> | $Enums.partners_type
    website?: StringNullableFilter<"partners"> | string | null
    contact_email?: StringNullableFilter<"partners"> | string | null
    quote?: StringNullableFilter<"partners"> | string | null
    language?: Enumpartners_languageNullableFilter<"partners"> | $Enums.partners_language | null
    translation_group_id?: StringNullableFilter<"partners"> | string | null
    is_active?: BoolNullableFilter<"partners"> | boolean | null
    partnership_start_date?: DateTimeNullableFilter<"partners"> | Date | string | null
    partnership_end_date?: DateTimeNullableFilter<"partners"> | Date | string | null
    created_at?: DateTimeNullableFilter<"partners"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"partners"> | Date | string | null
  }

  export type partnersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    logo_url?: SortOrderInput | SortOrder
    type?: SortOrder
    website?: SortOrderInput | SortOrder
    contact_email?: SortOrderInput | SortOrder
    quote?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    partnership_start_date?: SortOrderInput | SortOrder
    partnership_end_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _relevance?: partnersOrderByRelevanceInput
  }

  export type partnersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: partnersWhereInput | partnersWhereInput[]
    OR?: partnersWhereInput[]
    NOT?: partnersWhereInput | partnersWhereInput[]
    name?: StringFilter<"partners"> | string
    logo_url?: StringNullableFilter<"partners"> | string | null
    type?: Enumpartners_typeFilter<"partners"> | $Enums.partners_type
    website?: StringNullableFilter<"partners"> | string | null
    contact_email?: StringNullableFilter<"partners"> | string | null
    quote?: StringNullableFilter<"partners"> | string | null
    language?: Enumpartners_languageNullableFilter<"partners"> | $Enums.partners_language | null
    translation_group_id?: StringNullableFilter<"partners"> | string | null
    is_active?: BoolNullableFilter<"partners"> | boolean | null
    partnership_start_date?: DateTimeNullableFilter<"partners"> | Date | string | null
    partnership_end_date?: DateTimeNullableFilter<"partners"> | Date | string | null
    created_at?: DateTimeNullableFilter<"partners"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"partners"> | Date | string | null
  }, "id">

  export type partnersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    logo_url?: SortOrderInput | SortOrder
    type?: SortOrder
    website?: SortOrderInput | SortOrder
    contact_email?: SortOrderInput | SortOrder
    quote?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    partnership_start_date?: SortOrderInput | SortOrder
    partnership_end_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: partnersCountOrderByAggregateInput
    _avg?: partnersAvgOrderByAggregateInput
    _max?: partnersMaxOrderByAggregateInput
    _min?: partnersMinOrderByAggregateInput
    _sum?: partnersSumOrderByAggregateInput
  }

  export type partnersScalarWhereWithAggregatesInput = {
    AND?: partnersScalarWhereWithAggregatesInput | partnersScalarWhereWithAggregatesInput[]
    OR?: partnersScalarWhereWithAggregatesInput[]
    NOT?: partnersScalarWhereWithAggregatesInput | partnersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"partners"> | bigint | number
    name?: StringWithAggregatesFilter<"partners"> | string
    logo_url?: StringNullableWithAggregatesFilter<"partners"> | string | null
    type?: Enumpartners_typeWithAggregatesFilter<"partners"> | $Enums.partners_type
    website?: StringNullableWithAggregatesFilter<"partners"> | string | null
    contact_email?: StringNullableWithAggregatesFilter<"partners"> | string | null
    quote?: StringNullableWithAggregatesFilter<"partners"> | string | null
    language?: Enumpartners_languageNullableWithAggregatesFilter<"partners"> | $Enums.partners_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"partners"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"partners"> | boolean | null
    partnership_start_date?: DateTimeNullableWithAggregatesFilter<"partners"> | Date | string | null
    partnership_end_date?: DateTimeNullableWithAggregatesFilter<"partners"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"partners"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"partners"> | Date | string | null
  }

  export type postsWhereInput = {
    AND?: postsWhereInput | postsWhereInput[]
    OR?: postsWhereInput[]
    NOT?: postsWhereInput | postsWhereInput[]
    id?: BigIntFilter<"posts"> | bigint | number
    title?: StringFilter<"posts"> | string
    slug?: StringFilter<"posts"> | string
    content?: StringNullableFilter<"posts"> | string | null
    post_type?: Enumposts_post_typeFilter<"posts"> | $Enums.posts_post_type
    author_id?: BigIntNullableFilter<"posts"> | bigint | number | null
    feature_image?: StringNullableFilter<"posts"> | string | null
    language?: Enumposts_languageNullableFilter<"posts"> | $Enums.posts_language | null
    translation_group_id?: StringNullableFilter<"posts"> | string | null
    created_at?: DateTimeNullableFilter<"posts"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"posts"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type postsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrderInput | SortOrder
    post_type?: SortOrder
    author_id?: SortOrderInput | SortOrder
    feature_image?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    _relevance?: postsOrderByRelevanceInput
  }

  export type postsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    slug?: string
    AND?: postsWhereInput | postsWhereInput[]
    OR?: postsWhereInput[]
    NOT?: postsWhereInput | postsWhereInput[]
    title?: StringFilter<"posts"> | string
    content?: StringNullableFilter<"posts"> | string | null
    post_type?: Enumposts_post_typeFilter<"posts"> | $Enums.posts_post_type
    author_id?: BigIntNullableFilter<"posts"> | bigint | number | null
    feature_image?: StringNullableFilter<"posts"> | string | null
    language?: Enumposts_languageNullableFilter<"posts"> | $Enums.posts_language | null
    translation_group_id?: StringNullableFilter<"posts"> | string | null
    created_at?: DateTimeNullableFilter<"posts"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"posts"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id" | "slug">

  export type postsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrderInput | SortOrder
    post_type?: SortOrder
    author_id?: SortOrderInput | SortOrder
    feature_image?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: postsCountOrderByAggregateInput
    _avg?: postsAvgOrderByAggregateInput
    _max?: postsMaxOrderByAggregateInput
    _min?: postsMinOrderByAggregateInput
    _sum?: postsSumOrderByAggregateInput
  }

  export type postsScalarWhereWithAggregatesInput = {
    AND?: postsScalarWhereWithAggregatesInput | postsScalarWhereWithAggregatesInput[]
    OR?: postsScalarWhereWithAggregatesInput[]
    NOT?: postsScalarWhereWithAggregatesInput | postsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"posts"> | bigint | number
    title?: StringWithAggregatesFilter<"posts"> | string
    slug?: StringWithAggregatesFilter<"posts"> | string
    content?: StringNullableWithAggregatesFilter<"posts"> | string | null
    post_type?: Enumposts_post_typeWithAggregatesFilter<"posts"> | $Enums.posts_post_type
    author_id?: BigIntNullableWithAggregatesFilter<"posts"> | bigint | number | null
    feature_image?: StringNullableWithAggregatesFilter<"posts"> | string | null
    language?: Enumposts_languageNullableWithAggregatesFilter<"posts"> | $Enums.posts_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"posts"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"posts"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"posts"> | Date | string | null
  }

  export type programsWhereInput = {
    AND?: programsWhereInput | programsWhereInput[]
    OR?: programsWhereInput[]
    NOT?: programsWhereInput | programsWhereInput[]
    id?: BigIntFilter<"programs"> | bigint | number
    title?: StringFilter<"programs"> | string
    category?: Enumprograms_categoryNullableFilter<"programs"> | $Enums.programs_category | null
    description?: StringNullableFilter<"programs"> | string | null
    start_date?: DateTimeNullableFilter<"programs"> | Date | string | null
    end_date?: DateTimeNullableFilter<"programs"> | Date | string | null
    location?: StringNullableFilter<"programs"> | string | null
    impact_stats?: StringNullableFilter<"programs"> | string | null
    is_featured?: BoolNullableFilter<"programs"> | boolean | null
    created_by?: BigIntNullableFilter<"programs"> | bigint | number | null
    language?: Enumprograms_languageNullableFilter<"programs"> | $Enums.programs_language | null
    translation_group_id?: StringNullableFilter<"programs"> | string | null
    created_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    media?: MediaListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type programsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    impact_stats?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    media?: mediaOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
    _relevance?: programsOrderByRelevanceInput
  }

  export type programsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: programsWhereInput | programsWhereInput[]
    OR?: programsWhereInput[]
    NOT?: programsWhereInput | programsWhereInput[]
    title?: StringFilter<"programs"> | string
    category?: Enumprograms_categoryNullableFilter<"programs"> | $Enums.programs_category | null
    description?: StringNullableFilter<"programs"> | string | null
    start_date?: DateTimeNullableFilter<"programs"> | Date | string | null
    end_date?: DateTimeNullableFilter<"programs"> | Date | string | null
    location?: StringNullableFilter<"programs"> | string | null
    impact_stats?: StringNullableFilter<"programs"> | string | null
    is_featured?: BoolNullableFilter<"programs"> | boolean | null
    created_by?: BigIntNullableFilter<"programs"> | bigint | number | null
    language?: Enumprograms_languageNullableFilter<"programs"> | $Enums.programs_language | null
    translation_group_id?: StringNullableFilter<"programs"> | string | null
    created_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    media?: MediaListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type programsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    impact_stats?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: programsCountOrderByAggregateInput
    _avg?: programsAvgOrderByAggregateInput
    _max?: programsMaxOrderByAggregateInput
    _min?: programsMinOrderByAggregateInput
    _sum?: programsSumOrderByAggregateInput
  }

  export type programsScalarWhereWithAggregatesInput = {
    AND?: programsScalarWhereWithAggregatesInput | programsScalarWhereWithAggregatesInput[]
    OR?: programsScalarWhereWithAggregatesInput[]
    NOT?: programsScalarWhereWithAggregatesInput | programsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"programs"> | bigint | number
    title?: StringWithAggregatesFilter<"programs"> | string
    category?: Enumprograms_categoryNullableWithAggregatesFilter<"programs"> | $Enums.programs_category | null
    description?: StringNullableWithAggregatesFilter<"programs"> | string | null
    start_date?: DateTimeNullableWithAggregatesFilter<"programs"> | Date | string | null
    end_date?: DateTimeNullableWithAggregatesFilter<"programs"> | Date | string | null
    location?: StringNullableWithAggregatesFilter<"programs"> | string | null
    impact_stats?: StringNullableWithAggregatesFilter<"programs"> | string | null
    is_featured?: BoolNullableWithAggregatesFilter<"programs"> | boolean | null
    created_by?: BigIntNullableWithAggregatesFilter<"programs"> | bigint | number | null
    language?: Enumprograms_languageNullableWithAggregatesFilter<"programs"> | $Enums.programs_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"programs"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"programs"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"programs"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"programs"> | Date | string | null
  }

  export type role_permissionsWhereInput = {
    AND?: role_permissionsWhereInput | role_permissionsWhereInput[]
    OR?: role_permissionsWhereInput[]
    NOT?: role_permissionsWhereInput | role_permissionsWhereInput[]
    role?: Enumrole_permissions_roleFilter<"role_permissions"> | $Enums.role_permissions_role
    permission?: StringFilter<"role_permissions"> | string
    created_at?: DateTimeNullableFilter<"role_permissions"> | Date | string | null
  }

  export type role_permissionsOrderByWithRelationInput = {
    role?: SortOrder
    permission?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _relevance?: role_permissionsOrderByRelevanceInput
  }

  export type role_permissionsWhereUniqueInput = Prisma.AtLeast<{
    role_permission?: role_permissionsRolePermissionCompoundUniqueInput
    AND?: role_permissionsWhereInput | role_permissionsWhereInput[]
    OR?: role_permissionsWhereInput[]
    NOT?: role_permissionsWhereInput | role_permissionsWhereInput[]
    role?: Enumrole_permissions_roleFilter<"role_permissions"> | $Enums.role_permissions_role
    permission?: StringFilter<"role_permissions"> | string
    created_at?: DateTimeNullableFilter<"role_permissions"> | Date | string | null
  }, "role_permission">

  export type role_permissionsOrderByWithAggregationInput = {
    role?: SortOrder
    permission?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: role_permissionsCountOrderByAggregateInput
    _max?: role_permissionsMaxOrderByAggregateInput
    _min?: role_permissionsMinOrderByAggregateInput
  }

  export type role_permissionsScalarWhereWithAggregatesInput = {
    AND?: role_permissionsScalarWhereWithAggregatesInput | role_permissionsScalarWhereWithAggregatesInput[]
    OR?: role_permissionsScalarWhereWithAggregatesInput[]
    NOT?: role_permissionsScalarWhereWithAggregatesInput | role_permissionsScalarWhereWithAggregatesInput[]
    role?: Enumrole_permissions_roleWithAggregatesFilter<"role_permissions"> | $Enums.role_permissions_role
    permission?: StringWithAggregatesFilter<"role_permissions"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"role_permissions"> | Date | string | null
  }

  export type site_interactionsWhereInput = {
    AND?: site_interactionsWhereInput | site_interactionsWhereInput[]
    OR?: site_interactionsWhereInput[]
    NOT?: site_interactionsWhereInput | site_interactionsWhereInput[]
    id?: BigIntFilter<"site_interactions"> | bigint | number
    user_id?: BigIntNullableFilter<"site_interactions"> | bigint | number | null
    session_id?: StringNullableFilter<"site_interactions"> | string | null
    page?: StringNullableFilter<"site_interactions"> | string | null
    action?: StringNullableFilter<"site_interactions"> | string | null
    metadata?: StringNullableFilter<"site_interactions"> | string | null
    ip_address?: StringNullableFilter<"site_interactions"> | string | null
    user_agent?: StringNullableFilter<"site_interactions"> | string | null
    occurred_at?: DateTimeNullableFilter<"site_interactions"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type site_interactionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    page?: SortOrderInput | SortOrder
    action?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    occurred_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    _relevance?: site_interactionsOrderByRelevanceInput
  }

  export type site_interactionsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: site_interactionsWhereInput | site_interactionsWhereInput[]
    OR?: site_interactionsWhereInput[]
    NOT?: site_interactionsWhereInput | site_interactionsWhereInput[]
    user_id?: BigIntNullableFilter<"site_interactions"> | bigint | number | null
    session_id?: StringNullableFilter<"site_interactions"> | string | null
    page?: StringNullableFilter<"site_interactions"> | string | null
    action?: StringNullableFilter<"site_interactions"> | string | null
    metadata?: StringNullableFilter<"site_interactions"> | string | null
    ip_address?: StringNullableFilter<"site_interactions"> | string | null
    user_agent?: StringNullableFilter<"site_interactions"> | string | null
    occurred_at?: DateTimeNullableFilter<"site_interactions"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type site_interactionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    page?: SortOrderInput | SortOrder
    action?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    occurred_at?: SortOrderInput | SortOrder
    _count?: site_interactionsCountOrderByAggregateInput
    _avg?: site_interactionsAvgOrderByAggregateInput
    _max?: site_interactionsMaxOrderByAggregateInput
    _min?: site_interactionsMinOrderByAggregateInput
    _sum?: site_interactionsSumOrderByAggregateInput
  }

  export type site_interactionsScalarWhereWithAggregatesInput = {
    AND?: site_interactionsScalarWhereWithAggregatesInput | site_interactionsScalarWhereWithAggregatesInput[]
    OR?: site_interactionsScalarWhereWithAggregatesInput[]
    NOT?: site_interactionsScalarWhereWithAggregatesInput | site_interactionsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"site_interactions"> | bigint | number
    user_id?: BigIntNullableWithAggregatesFilter<"site_interactions"> | bigint | number | null
    session_id?: StringNullableWithAggregatesFilter<"site_interactions"> | string | null
    page?: StringNullableWithAggregatesFilter<"site_interactions"> | string | null
    action?: StringNullableWithAggregatesFilter<"site_interactions"> | string | null
    metadata?: StringNullableWithAggregatesFilter<"site_interactions"> | string | null
    ip_address?: StringNullableWithAggregatesFilter<"site_interactions"> | string | null
    user_agent?: StringNullableWithAggregatesFilter<"site_interactions"> | string | null
    occurred_at?: DateTimeNullableWithAggregatesFilter<"site_interactions"> | Date | string | null
  }

  export type skillsWhereInput = {
    AND?: skillsWhereInput | skillsWhereInput[]
    OR?: skillsWhereInput[]
    NOT?: skillsWhereInput | skillsWhereInput[]
    id?: BigIntFilter<"skills"> | bigint | number
    name?: StringFilter<"skills"> | string
    category?: StringNullableFilter<"skills"> | string | null
    description?: StringNullableFilter<"skills"> | string | null
    created_at?: DateTimeNullableFilter<"skills"> | Date | string | null
    volunteer_skills?: Volunteer_skillsListRelationFilter
  }

  export type skillsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    volunteer_skills?: volunteer_skillsOrderByRelationAggregateInput
    _relevance?: skillsOrderByRelevanceInput
  }

  export type skillsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: skillsWhereInput | skillsWhereInput[]
    OR?: skillsWhereInput[]
    NOT?: skillsWhereInput | skillsWhereInput[]
    category?: StringNullableFilter<"skills"> | string | null
    description?: StringNullableFilter<"skills"> | string | null
    created_at?: DateTimeNullableFilter<"skills"> | Date | string | null
    volunteer_skills?: Volunteer_skillsListRelationFilter
  }, "id" | "name">

  export type skillsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: skillsCountOrderByAggregateInput
    _avg?: skillsAvgOrderByAggregateInput
    _max?: skillsMaxOrderByAggregateInput
    _min?: skillsMinOrderByAggregateInput
    _sum?: skillsSumOrderByAggregateInput
  }

  export type skillsScalarWhereWithAggregatesInput = {
    AND?: skillsScalarWhereWithAggregatesInput | skillsScalarWhereWithAggregatesInput[]
    OR?: skillsScalarWhereWithAggregatesInput[]
    NOT?: skillsScalarWhereWithAggregatesInput | skillsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"skills"> | bigint | number
    name?: StringWithAggregatesFilter<"skills"> | string
    category?: StringNullableWithAggregatesFilter<"skills"> | string | null
    description?: StringNullableWithAggregatesFilter<"skills"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"skills"> | Date | string | null
  }

  export type testimonialsWhereInput = {
    AND?: testimonialsWhereInput | testimonialsWhereInput[]
    OR?: testimonialsWhereInput[]
    NOT?: testimonialsWhereInput | testimonialsWhereInput[]
    id?: BigIntFilter<"testimonials"> | bigint | number
    name?: StringFilter<"testimonials"> | string
    role?: StringNullableFilter<"testimonials"> | string | null
    message?: StringFilter<"testimonials"> | string
    image_url?: StringNullableFilter<"testimonials"> | string | null
    type?: Enumtestimonials_typeFilter<"testimonials"> | $Enums.testimonials_type
    language?: Enumtestimonials_languageNullableFilter<"testimonials"> | $Enums.testimonials_language | null
    translation_group_id?: StringNullableFilter<"testimonials"> | string | null
    is_featured?: BoolNullableFilter<"testimonials"> | boolean | null
    created_at?: DateTimeNullableFilter<"testimonials"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"testimonials"> | Date | string | null
  }

  export type testimonialsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    role?: SortOrderInput | SortOrder
    message?: SortOrder
    image_url?: SortOrderInput | SortOrder
    type?: SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _relevance?: testimonialsOrderByRelevanceInput
  }

  export type testimonialsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: testimonialsWhereInput | testimonialsWhereInput[]
    OR?: testimonialsWhereInput[]
    NOT?: testimonialsWhereInput | testimonialsWhereInput[]
    name?: StringFilter<"testimonials"> | string
    role?: StringNullableFilter<"testimonials"> | string | null
    message?: StringFilter<"testimonials"> | string
    image_url?: StringNullableFilter<"testimonials"> | string | null
    type?: Enumtestimonials_typeFilter<"testimonials"> | $Enums.testimonials_type
    language?: Enumtestimonials_languageNullableFilter<"testimonials"> | $Enums.testimonials_language | null
    translation_group_id?: StringNullableFilter<"testimonials"> | string | null
    is_featured?: BoolNullableFilter<"testimonials"> | boolean | null
    created_at?: DateTimeNullableFilter<"testimonials"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"testimonials"> | Date | string | null
  }, "id">

  export type testimonialsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    role?: SortOrderInput | SortOrder
    message?: SortOrder
    image_url?: SortOrderInput | SortOrder
    type?: SortOrder
    language?: SortOrderInput | SortOrder
    translation_group_id?: SortOrderInput | SortOrder
    is_featured?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: testimonialsCountOrderByAggregateInput
    _avg?: testimonialsAvgOrderByAggregateInput
    _max?: testimonialsMaxOrderByAggregateInput
    _min?: testimonialsMinOrderByAggregateInput
    _sum?: testimonialsSumOrderByAggregateInput
  }

  export type testimonialsScalarWhereWithAggregatesInput = {
    AND?: testimonialsScalarWhereWithAggregatesInput | testimonialsScalarWhereWithAggregatesInput[]
    OR?: testimonialsScalarWhereWithAggregatesInput[]
    NOT?: testimonialsScalarWhereWithAggregatesInput | testimonialsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"testimonials"> | bigint | number
    name?: StringWithAggregatesFilter<"testimonials"> | string
    role?: StringNullableWithAggregatesFilter<"testimonials"> | string | null
    message?: StringWithAggregatesFilter<"testimonials"> | string
    image_url?: StringNullableWithAggregatesFilter<"testimonials"> | string | null
    type?: Enumtestimonials_typeWithAggregatesFilter<"testimonials"> | $Enums.testimonials_type
    language?: Enumtestimonials_languageNullableWithAggregatesFilter<"testimonials"> | $Enums.testimonials_language | null
    translation_group_id?: StringNullableWithAggregatesFilter<"testimonials"> | string | null
    is_featured?: BoolNullableWithAggregatesFilter<"testimonials"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"testimonials"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"testimonials"> | Date | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: BigIntFilter<"users"> | bigint | number
    full_name?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    phone?: StringNullableFilter<"users"> | string | null
    password_hash?: StringFilter<"users"> | string
    role?: Enumusers_roleFilter<"users"> | $Enums.users_role
    profile_image_url?: StringNullableFilter<"users"> | string | null
    language_preference?: Enumusers_language_preferenceNullableFilter<"users"> | $Enums.users_language_preference | null
    email_verified?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    campaigns?: CampaignsListRelationFilter
    documents?: DocumentsListRelationFilter
    donor_profiles?: XOR<Donor_profilesNullableScalarRelationFilter, donor_profilesWhereInput> | null
    event_participants?: Event_participantsListRelationFilter
    events?: EventsListRelationFilter
    media?: MediaListRelationFilter
    posts?: PostsListRelationFilter
    programs?: ProgramsListRelationFilter
    site_interactions?: Site_interactionsListRelationFilter
    volunteer_profiles?: XOR<Volunteer_profilesNullableScalarRelationFilter, volunteer_profilesWhereInput> | null
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    profile_image_url?: SortOrderInput | SortOrder
    language_preference?: SortOrderInput | SortOrder
    email_verified?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    campaigns?: campaignsOrderByRelationAggregateInput
    documents?: documentsOrderByRelationAggregateInput
    donor_profiles?: donor_profilesOrderByWithRelationInput
    event_participants?: event_participantsOrderByRelationAggregateInput
    events?: eventsOrderByRelationAggregateInput
    media?: mediaOrderByRelationAggregateInput
    posts?: postsOrderByRelationAggregateInput
    programs?: programsOrderByRelationAggregateInput
    site_interactions?: site_interactionsOrderByRelationAggregateInput
    volunteer_profiles?: volunteer_profilesOrderByWithRelationInput
    _relevance?: usersOrderByRelevanceInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    full_name?: StringFilter<"users"> | string
    phone?: StringNullableFilter<"users"> | string | null
    password_hash?: StringFilter<"users"> | string
    role?: Enumusers_roleFilter<"users"> | $Enums.users_role
    profile_image_url?: StringNullableFilter<"users"> | string | null
    language_preference?: Enumusers_language_preferenceNullableFilter<"users"> | $Enums.users_language_preference | null
    email_verified?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    campaigns?: CampaignsListRelationFilter
    documents?: DocumentsListRelationFilter
    donor_profiles?: XOR<Donor_profilesNullableScalarRelationFilter, donor_profilesWhereInput> | null
    event_participants?: Event_participantsListRelationFilter
    events?: EventsListRelationFilter
    media?: MediaListRelationFilter
    posts?: PostsListRelationFilter
    programs?: ProgramsListRelationFilter
    site_interactions?: Site_interactionsListRelationFilter
    volunteer_profiles?: XOR<Volunteer_profilesNullableScalarRelationFilter, volunteer_profilesWhereInput> | null
  }, "id" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    profile_image_url?: SortOrderInput | SortOrder
    language_preference?: SortOrderInput | SortOrder
    email_verified?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"users"> | bigint | number
    full_name?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    password_hash?: StringWithAggregatesFilter<"users"> | string
    role?: Enumusers_roleWithAggregatesFilter<"users"> | $Enums.users_role
    profile_image_url?: StringNullableWithAggregatesFilter<"users"> | string | null
    language_preference?: Enumusers_language_preferenceNullableWithAggregatesFilter<"users"> | $Enums.users_language_preference | null
    email_verified?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type volunteer_profilesWhereInput = {
    AND?: volunteer_profilesWhereInput | volunteer_profilesWhereInput[]
    OR?: volunteer_profilesWhereInput[]
    NOT?: volunteer_profilesWhereInput | volunteer_profilesWhereInput[]
    user_id?: BigIntFilter<"volunteer_profiles"> | bigint | number
    area_of_expertise?: StringNullableFilter<"volunteer_profiles"> | string | null
    location?: StringNullableFilter<"volunteer_profiles"> | string | null
    availability?: StringNullableFilter<"volunteer_profiles"> | string | null
    motivation?: StringNullableFilter<"volunteer_profiles"> | string | null
    total_hours?: IntNullableFilter<"volunteer_profiles"> | number | null
    certificate_url?: StringNullableFilter<"volunteer_profiles"> | string | null
    registered_events_count?: IntNullableFilter<"volunteer_profiles"> | number | null
    training_completed?: BoolNullableFilter<"volunteer_profiles"> | boolean | null
    background_check_status?: Enumvolunteer_profiles_background_check_statusNullableFilter<"volunteer_profiles"> | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: StringNullableFilter<"volunteer_profiles"> | string | null
    emergency_contact_phone?: StringNullableFilter<"volunteer_profiles"> | string | null
    rating?: DecimalNullableFilter<"volunteer_profiles"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"volunteer_profiles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"volunteer_profiles"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    volunteer_skills?: Volunteer_skillsListRelationFilter
  }

  export type volunteer_profilesOrderByWithRelationInput = {
    user_id?: SortOrder
    area_of_expertise?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    motivation?: SortOrderInput | SortOrder
    total_hours?: SortOrderInput | SortOrder
    certificate_url?: SortOrderInput | SortOrder
    registered_events_count?: SortOrderInput | SortOrder
    training_completed?: SortOrderInput | SortOrder
    background_check_status?: SortOrderInput | SortOrder
    emergency_contact_name?: SortOrderInput | SortOrder
    emergency_contact_phone?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    volunteer_skills?: volunteer_skillsOrderByRelationAggregateInput
    _relevance?: volunteer_profilesOrderByRelevanceInput
  }

  export type volunteer_profilesWhereUniqueInput = Prisma.AtLeast<{
    user_id?: bigint | number
    AND?: volunteer_profilesWhereInput | volunteer_profilesWhereInput[]
    OR?: volunteer_profilesWhereInput[]
    NOT?: volunteer_profilesWhereInput | volunteer_profilesWhereInput[]
    area_of_expertise?: StringNullableFilter<"volunteer_profiles"> | string | null
    location?: StringNullableFilter<"volunteer_profiles"> | string | null
    availability?: StringNullableFilter<"volunteer_profiles"> | string | null
    motivation?: StringNullableFilter<"volunteer_profiles"> | string | null
    total_hours?: IntNullableFilter<"volunteer_profiles"> | number | null
    certificate_url?: StringNullableFilter<"volunteer_profiles"> | string | null
    registered_events_count?: IntNullableFilter<"volunteer_profiles"> | number | null
    training_completed?: BoolNullableFilter<"volunteer_profiles"> | boolean | null
    background_check_status?: Enumvolunteer_profiles_background_check_statusNullableFilter<"volunteer_profiles"> | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: StringNullableFilter<"volunteer_profiles"> | string | null
    emergency_contact_phone?: StringNullableFilter<"volunteer_profiles"> | string | null
    rating?: DecimalNullableFilter<"volunteer_profiles"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"volunteer_profiles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"volunteer_profiles"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    volunteer_skills?: Volunteer_skillsListRelationFilter
  }, "user_id">

  export type volunteer_profilesOrderByWithAggregationInput = {
    user_id?: SortOrder
    area_of_expertise?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    motivation?: SortOrderInput | SortOrder
    total_hours?: SortOrderInput | SortOrder
    certificate_url?: SortOrderInput | SortOrder
    registered_events_count?: SortOrderInput | SortOrder
    training_completed?: SortOrderInput | SortOrder
    background_check_status?: SortOrderInput | SortOrder
    emergency_contact_name?: SortOrderInput | SortOrder
    emergency_contact_phone?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: volunteer_profilesCountOrderByAggregateInput
    _avg?: volunteer_profilesAvgOrderByAggregateInput
    _max?: volunteer_profilesMaxOrderByAggregateInput
    _min?: volunteer_profilesMinOrderByAggregateInput
    _sum?: volunteer_profilesSumOrderByAggregateInput
  }

  export type volunteer_profilesScalarWhereWithAggregatesInput = {
    AND?: volunteer_profilesScalarWhereWithAggregatesInput | volunteer_profilesScalarWhereWithAggregatesInput[]
    OR?: volunteer_profilesScalarWhereWithAggregatesInput[]
    NOT?: volunteer_profilesScalarWhereWithAggregatesInput | volunteer_profilesScalarWhereWithAggregatesInput[]
    user_id?: BigIntWithAggregatesFilter<"volunteer_profiles"> | bigint | number
    area_of_expertise?: StringNullableWithAggregatesFilter<"volunteer_profiles"> | string | null
    location?: StringNullableWithAggregatesFilter<"volunteer_profiles"> | string | null
    availability?: StringNullableWithAggregatesFilter<"volunteer_profiles"> | string | null
    motivation?: StringNullableWithAggregatesFilter<"volunteer_profiles"> | string | null
    total_hours?: IntNullableWithAggregatesFilter<"volunteer_profiles"> | number | null
    certificate_url?: StringNullableWithAggregatesFilter<"volunteer_profiles"> | string | null
    registered_events_count?: IntNullableWithAggregatesFilter<"volunteer_profiles"> | number | null
    training_completed?: BoolNullableWithAggregatesFilter<"volunteer_profiles"> | boolean | null
    background_check_status?: Enumvolunteer_profiles_background_check_statusNullableWithAggregatesFilter<"volunteer_profiles"> | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: StringNullableWithAggregatesFilter<"volunteer_profiles"> | string | null
    emergency_contact_phone?: StringNullableWithAggregatesFilter<"volunteer_profiles"> | string | null
    rating?: DecimalNullableWithAggregatesFilter<"volunteer_profiles"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"volunteer_profiles"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"volunteer_profiles"> | Date | string | null
  }

  export type volunteer_skillsWhereInput = {
    AND?: volunteer_skillsWhereInput | volunteer_skillsWhereInput[]
    OR?: volunteer_skillsWhereInput[]
    NOT?: volunteer_skillsWhereInput | volunteer_skillsWhereInput[]
    volunteer_id?: BigIntFilter<"volunteer_skills"> | bigint | number
    skill_id?: BigIntFilter<"volunteer_skills"> | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFilter<"volunteer_skills"> | $Enums.volunteer_skills_proficiency_level
    is_verified?: BoolNullableFilter<"volunteer_skills"> | boolean | null
    created_at?: DateTimeNullableFilter<"volunteer_skills"> | Date | string | null
    volunteer_profiles?: XOR<Volunteer_profilesScalarRelationFilter, volunteer_profilesWhereInput>
    skills?: XOR<SkillsScalarRelationFilter, skillsWhereInput>
  }

  export type volunteer_skillsOrderByWithRelationInput = {
    volunteer_id?: SortOrder
    skill_id?: SortOrder
    proficiency_level?: SortOrder
    is_verified?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    volunteer_profiles?: volunteer_profilesOrderByWithRelationInput
    skills?: skillsOrderByWithRelationInput
  }

  export type volunteer_skillsWhereUniqueInput = Prisma.AtLeast<{
    volunteer_id_skill_id?: volunteer_skillsVolunteer_idSkill_idCompoundUniqueInput
    AND?: volunteer_skillsWhereInput | volunteer_skillsWhereInput[]
    OR?: volunteer_skillsWhereInput[]
    NOT?: volunteer_skillsWhereInput | volunteer_skillsWhereInput[]
    volunteer_id?: BigIntFilter<"volunteer_skills"> | bigint | number
    skill_id?: BigIntFilter<"volunteer_skills"> | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFilter<"volunteer_skills"> | $Enums.volunteer_skills_proficiency_level
    is_verified?: BoolNullableFilter<"volunteer_skills"> | boolean | null
    created_at?: DateTimeNullableFilter<"volunteer_skills"> | Date | string | null
    volunteer_profiles?: XOR<Volunteer_profilesScalarRelationFilter, volunteer_profilesWhereInput>
    skills?: XOR<SkillsScalarRelationFilter, skillsWhereInput>
  }, "volunteer_id_skill_id">

  export type volunteer_skillsOrderByWithAggregationInput = {
    volunteer_id?: SortOrder
    skill_id?: SortOrder
    proficiency_level?: SortOrder
    is_verified?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: volunteer_skillsCountOrderByAggregateInput
    _avg?: volunteer_skillsAvgOrderByAggregateInput
    _max?: volunteer_skillsMaxOrderByAggregateInput
    _min?: volunteer_skillsMinOrderByAggregateInput
    _sum?: volunteer_skillsSumOrderByAggregateInput
  }

  export type volunteer_skillsScalarWhereWithAggregatesInput = {
    AND?: volunteer_skillsScalarWhereWithAggregatesInput | volunteer_skillsScalarWhereWithAggregatesInput[]
    OR?: volunteer_skillsScalarWhereWithAggregatesInput[]
    NOT?: volunteer_skillsScalarWhereWithAggregatesInput | volunteer_skillsScalarWhereWithAggregatesInput[]
    volunteer_id?: BigIntWithAggregatesFilter<"volunteer_skills"> | bigint | number
    skill_id?: BigIntWithAggregatesFilter<"volunteer_skills"> | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelWithAggregatesFilter<"volunteer_skills"> | $Enums.volunteer_skills_proficiency_level
    is_verified?: BoolNullableWithAggregatesFilter<"volunteer_skills"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"volunteer_skills"> | Date | string | null
  }

  export type campaignsCreateInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    users?: usersCreateNestedOneWithoutCampaignsInput
    donations?: donationsCreateNestedManyWithoutCampaignsInput
  }

  export type campaignsUncheckedCreateInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    created_by?: bigint | number | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    donations?: donationsUncheckedCreateNestedManyWithoutCampaignsInput
  }

  export type campaignsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutCampaignsNestedInput
    donations?: donationsUpdateManyWithoutCampaignsNestedInput
  }

  export type campaignsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donations?: donationsUncheckedUpdateManyWithoutCampaignsNestedInput
  }

  export type campaignsCreateManyInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    created_by?: bigint | number | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type campaignsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type campaignsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type contact_messagesCreateInput = {
    id?: bigint | number
    name: string
    email: string
    subject?: string | null
    message: string
    reason: $Enums.contact_messages_reason
    status?: $Enums.contact_messages_status | null
    ip_address?: string | null
    user_agent?: string | null
    submitted_at?: Date | string | null
    replied_at?: Date | string | null
  }

  export type contact_messagesUncheckedCreateInput = {
    id?: bigint | number
    name: string
    email: string
    subject?: string | null
    message: string
    reason: $Enums.contact_messages_reason
    status?: $Enums.contact_messages_status | null
    ip_address?: string | null
    user_agent?: string | null
    submitted_at?: Date | string | null
    replied_at?: Date | string | null
  }

  export type contact_messagesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    reason?: Enumcontact_messages_reasonFieldUpdateOperationsInput | $Enums.contact_messages_reason
    status?: NullableEnumcontact_messages_statusFieldUpdateOperationsInput | $Enums.contact_messages_status | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    replied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type contact_messagesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    reason?: Enumcontact_messages_reasonFieldUpdateOperationsInput | $Enums.contact_messages_reason
    status?: NullableEnumcontact_messages_statusFieldUpdateOperationsInput | $Enums.contact_messages_status | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    replied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type contact_messagesCreateManyInput = {
    id?: bigint | number
    name: string
    email: string
    subject?: string | null
    message: string
    reason: $Enums.contact_messages_reason
    status?: $Enums.contact_messages_status | null
    ip_address?: string | null
    user_agent?: string | null
    submitted_at?: Date | string | null
    replied_at?: Date | string | null
  }

  export type contact_messagesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    reason?: Enumcontact_messages_reasonFieldUpdateOperationsInput | $Enums.contact_messages_reason
    status?: NullableEnumcontact_messages_statusFieldUpdateOperationsInput | $Enums.contact_messages_status | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    replied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type contact_messagesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    reason?: Enumcontact_messages_reasonFieldUpdateOperationsInput | $Enums.contact_messages_reason
    status?: NullableEnumcontact_messages_statusFieldUpdateOperationsInput | $Enums.contact_messages_status | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    replied_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsCreateInput = {
    id?: bigint | number
    title: string
    description?: string | null
    category?: string | null
    file_url: string
    file_size?: bigint | number | null
    file_type?: string | null
    language?: $Enums.documents_language | null
    translation_group_id?: string | null
    is_public?: boolean | null
    download_count?: number | null
    uploaded_at?: Date | string | null
    updated_at?: Date | string | null
    users?: usersCreateNestedOneWithoutDocumentsInput
  }

  export type documentsUncheckedCreateInput = {
    id?: bigint | number
    title: string
    description?: string | null
    category?: string | null
    file_url: string
    file_size?: bigint | number | null
    file_type?: string | null
    uploaded_by?: bigint | number | null
    language?: $Enums.documents_language | null
    translation_group_id?: string | null
    is_public?: boolean | null
    download_count?: number | null
    uploaded_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type documentsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    file_size?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumdocuments_languageFieldUpdateOperationsInput | $Enums.documents_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    download_count?: NullableIntFieldUpdateOperationsInput | number | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutDocumentsNestedInput
  }

  export type documentsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    file_size?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumdocuments_languageFieldUpdateOperationsInput | $Enums.documents_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    download_count?: NullableIntFieldUpdateOperationsInput | number | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsCreateManyInput = {
    id?: bigint | number
    title: string
    description?: string | null
    category?: string | null
    file_url: string
    file_size?: bigint | number | null
    file_type?: string | null
    uploaded_by?: bigint | number | null
    language?: $Enums.documents_language | null
    translation_group_id?: string | null
    is_public?: boolean | null
    download_count?: number | null
    uploaded_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type documentsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    file_size?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumdocuments_languageFieldUpdateOperationsInput | $Enums.documents_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    download_count?: NullableIntFieldUpdateOperationsInput | number | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    file_size?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumdocuments_languageFieldUpdateOperationsInput | $Enums.documents_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    download_count?: NullableIntFieldUpdateOperationsInput | number | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsCreateInput = {
    id?: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    donor_profiles: donor_profilesCreateNestedOneWithoutDonationsInput
    campaigns: campaignsCreateNestedOneWithoutDonationsInput
  }

  export type donationsUncheckedCreateInput = {
    id?: bigint | number
    donor_id: bigint | number
    campaign_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donationsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donor_profiles?: donor_profilesUpdateOneRequiredWithoutDonationsNestedInput
    campaigns?: campaignsUpdateOneRequiredWithoutDonationsNestedInput
  }

  export type donationsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    donor_id?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsCreateManyInput = {
    id?: bigint | number
    donor_id: bigint | number
    campaign_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donationsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    donor_id?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donor_profilesCreateInput = {
    is_recurring_donor?: boolean | null
    preferred_payment_method?: string | null
    total_donated?: Decimal | DecimalJsLike | number | string | null
    donation_frequency?: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: string | null
    is_anonymous?: boolean | null
    last_donation_date?: Date | string | null
    donation_tier?: $Enums.donor_profiles_donation_tier | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    donations?: donationsCreateNestedManyWithoutDonor_profilesInput
    users: usersCreateNestedOneWithoutDonor_profilesInput
  }

  export type donor_profilesUncheckedCreateInput = {
    user_id: bigint | number
    is_recurring_donor?: boolean | null
    preferred_payment_method?: string | null
    total_donated?: Decimal | DecimalJsLike | number | string | null
    donation_frequency?: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: string | null
    is_anonymous?: boolean | null
    last_donation_date?: Date | string | null
    donation_tier?: $Enums.donor_profiles_donation_tier | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    donations?: donationsUncheckedCreateNestedManyWithoutDonor_profilesInput
  }

  export type donor_profilesUpdateInput = {
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donations?: donationsUpdateManyWithoutDonor_profilesNestedInput
    users?: usersUpdateOneRequiredWithoutDonor_profilesNestedInput
  }

  export type donor_profilesUncheckedUpdateInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donations?: donationsUncheckedUpdateManyWithoutDonor_profilesNestedInput
  }

  export type donor_profilesCreateManyInput = {
    user_id: bigint | number
    is_recurring_donor?: boolean | null
    preferred_payment_method?: string | null
    total_donated?: Decimal | DecimalJsLike | number | string | null
    donation_frequency?: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: string | null
    is_anonymous?: boolean | null
    last_donation_date?: Date | string | null
    donation_tier?: $Enums.donor_profiles_donation_tier | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donor_profilesUpdateManyMutationInput = {
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donor_profilesUncheckedUpdateManyInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_logsCreateInput = {
    id?: bigint | number
    recipient: string
    subject?: string | null
    template_used?: string | null
    content?: string | null
    status: $Enums.email_logs_status
    error_message?: string | null
    sent_at?: Date | string | null
    opened_at?: Date | string | null
    clicked_at?: Date | string | null
  }

  export type email_logsUncheckedCreateInput = {
    id?: bigint | number
    recipient: string
    subject?: string | null
    template_used?: string | null
    content?: string | null
    status: $Enums.email_logs_status
    error_message?: string | null
    sent_at?: Date | string | null
    opened_at?: Date | string | null
    clicked_at?: Date | string | null
  }

  export type email_logsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    recipient?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    template_used?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumemail_logs_statusFieldUpdateOperationsInput | $Enums.email_logs_status
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opened_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clicked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_logsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    recipient?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    template_used?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumemail_logs_statusFieldUpdateOperationsInput | $Enums.email_logs_status
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opened_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clicked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_logsCreateManyInput = {
    id?: bigint | number
    recipient: string
    subject?: string | null
    template_used?: string | null
    content?: string | null
    status: $Enums.email_logs_status
    error_message?: string | null
    sent_at?: Date | string | null
    opened_at?: Date | string | null
    clicked_at?: Date | string | null
  }

  export type email_logsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    recipient?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    template_used?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumemail_logs_statusFieldUpdateOperationsInput | $Enums.email_logs_status
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opened_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clicked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_logsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    recipient?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    template_used?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumemail_logs_statusFieldUpdateOperationsInput | $Enums.email_logs_status
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opened_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clicked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type event_participantsCreateInput = {
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
    events: eventsCreateNestedOneWithoutEvent_participantsInput
    users: usersCreateNestedOneWithoutEvent_participantsInput
  }

  export type event_participantsUncheckedCreateInput = {
    event_id: bigint | number
    user_id: bigint | number
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
  }

  export type event_participantsUpdateInput = {
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateOneRequiredWithoutEvent_participantsNestedInput
    users?: usersUpdateOneRequiredWithoutEvent_participantsNestedInput
  }

  export type event_participantsUncheckedUpdateInput = {
    event_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type event_participantsCreateManyInput = {
    event_id: bigint | number
    user_id: bigint | number
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
  }

  export type event_participantsUpdateManyMutationInput = {
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type event_participantsUncheckedUpdateManyInput = {
    event_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsCreateInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    event_participants?: event_participantsCreateNestedManyWithoutEventsInput
    users?: usersCreateNestedOneWithoutEventsInput
    media?: mediaCreateNestedManyWithoutEventsInput
  }

  export type eventsUncheckedCreateInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    created_by?: bigint | number | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutEventsInput
    media?: mediaUncheckedCreateNestedManyWithoutEventsInput
  }

  export type eventsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_participants?: event_participantsUpdateManyWithoutEventsNestedInput
    users?: usersUpdateOneWithoutEventsNestedInput
    media?: mediaUpdateManyWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_participants?: event_participantsUncheckedUpdateManyWithoutEventsNestedInput
    media?: mediaUncheckedUpdateManyWithoutEventsNestedInput
  }

  export type eventsCreateManyInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    created_by?: bigint | number | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type eventsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type faqsCreateInput = {
    id?: bigint | number
    question: string
    answer: string
    category?: string | null
    language?: $Enums.faqs_language | null
    translation_group_id?: string | null
    is_active?: boolean | null
    sort_order?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type faqsUncheckedCreateInput = {
    id?: bigint | number
    question: string
    answer: string
    category?: string | null
    language?: $Enums.faqs_language | null
    translation_group_id?: string | null
    is_active?: boolean | null
    sort_order?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type faqsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumfaqs_languageFieldUpdateOperationsInput | $Enums.faqs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort_order?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type faqsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumfaqs_languageFieldUpdateOperationsInput | $Enums.faqs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort_order?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type faqsCreateManyInput = {
    id?: bigint | number
    question: string
    answer: string
    category?: string | null
    language?: $Enums.faqs_language | null
    translation_group_id?: string | null
    is_active?: boolean | null
    sort_order?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type faqsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumfaqs_languageFieldUpdateOperationsInput | $Enums.faqs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort_order?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type faqsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumfaqs_languageFieldUpdateOperationsInput | $Enums.faqs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort_order?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaCreateInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
    events?: eventsCreateNestedOneWithoutMediaInput
    programs?: programsCreateNestedOneWithoutMediaInput
    users?: usersCreateNestedOneWithoutMediaInput
  }

  export type mediaUncheckedCreateInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_event_id?: bigint | number | null
    related_program_id?: bigint | number | null
    uploaded_by?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type mediaUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateOneWithoutMediaNestedInput
    programs?: programsUpdateOneWithoutMediaNestedInput
    users?: usersUpdateOneWithoutMediaNestedInput
  }

  export type mediaUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_event_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    related_program_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaCreateManyInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_event_id?: bigint | number | null
    related_program_id?: bigint | number | null
    uploaded_by?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type mediaUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_event_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    related_program_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type newsletter_subscribersCreateInput = {
    id?: bigint | number
    email: string
    first_name?: string | null
    last_name?: string | null
    is_active?: boolean | null
    language_preference?: $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: Date | string | null
    unsubscribed_at?: Date | string | null
  }

  export type newsletter_subscribersUncheckedCreateInput = {
    id?: bigint | number
    email: string
    first_name?: string | null
    last_name?: string | null
    is_active?: boolean | null
    language_preference?: $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: Date | string | null
    unsubscribed_at?: Date | string | null
  }

  export type newsletter_subscribersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language_preference?: NullableEnumnewsletter_subscribers_language_preferenceFieldUpdateOperationsInput | $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type newsletter_subscribersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language_preference?: NullableEnumnewsletter_subscribers_language_preferenceFieldUpdateOperationsInput | $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type newsletter_subscribersCreateManyInput = {
    id?: bigint | number
    email: string
    first_name?: string | null
    last_name?: string | null
    is_active?: boolean | null
    language_preference?: $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: Date | string | null
    unsubscribed_at?: Date | string | null
  }

  export type newsletter_subscribersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language_preference?: NullableEnumnewsletter_subscribers_language_preferenceFieldUpdateOperationsInput | $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type newsletter_subscribersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language_preference?: NullableEnumnewsletter_subscribers_language_preferenceFieldUpdateOperationsInput | $Enums.newsletter_subscribers_language_preference | null
    subscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unsubscribed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type partnersCreateInput = {
    id?: bigint | number
    name: string
    logo_url?: string | null
    type: $Enums.partners_type
    website?: string | null
    contact_email?: string | null
    quote?: string | null
    language?: $Enums.partners_language | null
    translation_group_id?: string | null
    is_active?: boolean | null
    partnership_start_date?: Date | string | null
    partnership_end_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type partnersUncheckedCreateInput = {
    id?: bigint | number
    name: string
    logo_url?: string | null
    type: $Enums.partners_type
    website?: string | null
    contact_email?: string | null
    quote?: string | null
    language?: $Enums.partners_language | null
    translation_group_id?: string | null
    is_active?: boolean | null
    partnership_start_date?: Date | string | null
    partnership_end_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type partnersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumpartners_typeFieldUpdateOperationsInput | $Enums.partners_type
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contact_email?: NullableStringFieldUpdateOperationsInput | string | null
    quote?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumpartners_languageFieldUpdateOperationsInput | $Enums.partners_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    partnership_start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partnership_end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type partnersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumpartners_typeFieldUpdateOperationsInput | $Enums.partners_type
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contact_email?: NullableStringFieldUpdateOperationsInput | string | null
    quote?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumpartners_languageFieldUpdateOperationsInput | $Enums.partners_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    partnership_start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partnership_end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type partnersCreateManyInput = {
    id?: bigint | number
    name: string
    logo_url?: string | null
    type: $Enums.partners_type
    website?: string | null
    contact_email?: string | null
    quote?: string | null
    language?: $Enums.partners_language | null
    translation_group_id?: string | null
    is_active?: boolean | null
    partnership_start_date?: Date | string | null
    partnership_end_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type partnersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumpartners_typeFieldUpdateOperationsInput | $Enums.partners_type
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contact_email?: NullableStringFieldUpdateOperationsInput | string | null
    quote?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumpartners_languageFieldUpdateOperationsInput | $Enums.partners_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    partnership_start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partnership_end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type partnersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumpartners_typeFieldUpdateOperationsInput | $Enums.partners_type
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contact_email?: NullableStringFieldUpdateOperationsInput | string | null
    quote?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumpartners_languageFieldUpdateOperationsInput | $Enums.partners_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    partnership_start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partnership_end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type postsCreateInput = {
    id?: bigint | number
    title: string
    slug: string
    content?: string | null
    post_type: $Enums.posts_post_type
    feature_image?: string | null
    language?: $Enums.posts_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    users?: usersCreateNestedOneWithoutPostsInput
  }

  export type postsUncheckedCreateInput = {
    id?: bigint | number
    title: string
    slug: string
    content?: string | null
    post_type: $Enums.posts_post_type
    author_id?: bigint | number | null
    feature_image?: string | null
    language?: $Enums.posts_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type postsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    post_type?: Enumposts_post_typeFieldUpdateOperationsInput | $Enums.posts_post_type
    feature_image?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumposts_languageFieldUpdateOperationsInput | $Enums.posts_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutPostsNestedInput
  }

  export type postsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    post_type?: Enumposts_post_typeFieldUpdateOperationsInput | $Enums.posts_post_type
    author_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    feature_image?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumposts_languageFieldUpdateOperationsInput | $Enums.posts_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type postsCreateManyInput = {
    id?: bigint | number
    title: string
    slug: string
    content?: string | null
    post_type: $Enums.posts_post_type
    author_id?: bigint | number | null
    feature_image?: string | null
    language?: $Enums.posts_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type postsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    post_type?: Enumposts_post_typeFieldUpdateOperationsInput | $Enums.posts_post_type
    feature_image?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumposts_languageFieldUpdateOperationsInput | $Enums.posts_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type postsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    post_type?: Enumposts_post_typeFieldUpdateOperationsInput | $Enums.posts_post_type
    author_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    feature_image?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumposts_languageFieldUpdateOperationsInput | $Enums.posts_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type programsCreateInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    media?: mediaCreateNestedManyWithoutProgramsInput
    users?: usersCreateNestedOneWithoutProgramsInput
  }

  export type programsUncheckedCreateInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    created_by?: bigint | number | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    media?: mediaUncheckedCreateNestedManyWithoutProgramsInput
  }

  export type programsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: mediaUpdateManyWithoutProgramsNestedInput
    users?: usersUpdateOneWithoutProgramsNestedInput
  }

  export type programsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: mediaUncheckedUpdateManyWithoutProgramsNestedInput
  }

  export type programsCreateManyInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    created_by?: bigint | number | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type programsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type programsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type role_permissionsCreateInput = {
    role: $Enums.role_permissions_role
    permission: string
    created_at?: Date | string | null
  }

  export type role_permissionsUncheckedCreateInput = {
    role: $Enums.role_permissions_role
    permission: string
    created_at?: Date | string | null
  }

  export type role_permissionsUpdateInput = {
    role?: Enumrole_permissions_roleFieldUpdateOperationsInput | $Enums.role_permissions_role
    permission?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type role_permissionsUncheckedUpdateInput = {
    role?: Enumrole_permissions_roleFieldUpdateOperationsInput | $Enums.role_permissions_role
    permission?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type role_permissionsCreateManyInput = {
    role: $Enums.role_permissions_role
    permission: string
    created_at?: Date | string | null
  }

  export type role_permissionsUpdateManyMutationInput = {
    role?: Enumrole_permissions_roleFieldUpdateOperationsInput | $Enums.role_permissions_role
    permission?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type role_permissionsUncheckedUpdateManyInput = {
    role?: Enumrole_permissions_roleFieldUpdateOperationsInput | $Enums.role_permissions_role
    permission?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_interactionsCreateInput = {
    id?: bigint | number
    session_id?: string | null
    page?: string | null
    action?: string | null
    metadata?: string | null
    ip_address?: string | null
    user_agent?: string | null
    occurred_at?: Date | string | null
    users?: usersCreateNestedOneWithoutSite_interactionsInput
  }

  export type site_interactionsUncheckedCreateInput = {
    id?: bigint | number
    user_id?: bigint | number | null
    session_id?: string | null
    page?: string | null
    action?: string | null
    metadata?: string | null
    ip_address?: string | null
    user_agent?: string | null
    occurred_at?: Date | string | null
  }

  export type site_interactionsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
    page?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    occurred_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutSite_interactionsNestedInput
  }

  export type site_interactionsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
    page?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    occurred_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_interactionsCreateManyInput = {
    id?: bigint | number
    user_id?: bigint | number | null
    session_id?: string | null
    page?: string | null
    action?: string | null
    metadata?: string | null
    ip_address?: string | null
    user_agent?: string | null
    occurred_at?: Date | string | null
  }

  export type site_interactionsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
    page?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    occurred_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_interactionsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
    page?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    occurred_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type skillsCreateInput = {
    id?: bigint | number
    name: string
    category?: string | null
    description?: string | null
    created_at?: Date | string | null
    volunteer_skills?: volunteer_skillsCreateNestedManyWithoutSkillsInput
  }

  export type skillsUncheckedCreateInput = {
    id?: bigint | number
    name: string
    category?: string | null
    description?: string | null
    created_at?: Date | string | null
    volunteer_skills?: volunteer_skillsUncheckedCreateNestedManyWithoutSkillsInput
  }

  export type skillsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    volunteer_skills?: volunteer_skillsUpdateManyWithoutSkillsNestedInput
  }

  export type skillsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    volunteer_skills?: volunteer_skillsUncheckedUpdateManyWithoutSkillsNestedInput
  }

  export type skillsCreateManyInput = {
    id?: bigint | number
    name: string
    category?: string | null
    description?: string | null
    created_at?: Date | string | null
  }

  export type skillsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type skillsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type testimonialsCreateInput = {
    id?: bigint | number
    name: string
    role?: string | null
    message: string
    image_url?: string | null
    type: $Enums.testimonials_type
    language?: $Enums.testimonials_language | null
    translation_group_id?: string | null
    is_featured?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type testimonialsUncheckedCreateInput = {
    id?: bigint | number
    name: string
    role?: string | null
    message: string
    image_url?: string | null
    type: $Enums.testimonials_type
    language?: $Enums.testimonials_language | null
    translation_group_id?: string | null
    is_featured?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type testimonialsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumtestimonials_typeFieldUpdateOperationsInput | $Enums.testimonials_type
    language?: NullableEnumtestimonials_languageFieldUpdateOperationsInput | $Enums.testimonials_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type testimonialsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumtestimonials_typeFieldUpdateOperationsInput | $Enums.testimonials_type
    language?: NullableEnumtestimonials_languageFieldUpdateOperationsInput | $Enums.testimonials_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type testimonialsCreateManyInput = {
    id?: bigint | number
    name: string
    role?: string | null
    message: string
    image_url?: string | null
    type: $Enums.testimonials_type
    language?: $Enums.testimonials_language | null
    translation_group_id?: string | null
    is_featured?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type testimonialsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumtestimonials_typeFieldUpdateOperationsInput | $Enums.testimonials_type
    language?: NullableEnumtestimonials_languageFieldUpdateOperationsInput | $Enums.testimonials_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type testimonialsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    message?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: Enumtestimonials_typeFieldUpdateOperationsInput | $Enums.testimonials_type
    language?: NullableEnumtestimonials_languageFieldUpdateOperationsInput | $Enums.testimonials_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_profilesCreateInput = {
    area_of_expertise?: string | null
    location?: string | null
    availability?: string | null
    motivation?: string | null
    total_hours?: number | null
    certificate_url?: string | null
    registered_events_count?: number | null
    training_completed?: boolean | null
    background_check_status?: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    users: usersCreateNestedOneWithoutVolunteer_profilesInput
    volunteer_skills?: volunteer_skillsCreateNestedManyWithoutVolunteer_profilesInput
  }

  export type volunteer_profilesUncheckedCreateInput = {
    user_id: bigint | number
    area_of_expertise?: string | null
    location?: string | null
    availability?: string | null
    motivation?: string | null
    total_hours?: number | null
    certificate_url?: string | null
    registered_events_count?: number | null
    training_completed?: boolean | null
    background_check_status?: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    volunteer_skills?: volunteer_skillsUncheckedCreateNestedManyWithoutVolunteer_profilesInput
  }

  export type volunteer_profilesUpdateInput = {
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutVolunteer_profilesNestedInput
    volunteer_skills?: volunteer_skillsUpdateManyWithoutVolunteer_profilesNestedInput
  }

  export type volunteer_profilesUncheckedUpdateInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    volunteer_skills?: volunteer_skillsUncheckedUpdateManyWithoutVolunteer_profilesNestedInput
  }

  export type volunteer_profilesCreateManyInput = {
    user_id: bigint | number
    area_of_expertise?: string | null
    location?: string | null
    availability?: string | null
    motivation?: string | null
    total_hours?: number | null
    certificate_url?: string | null
    registered_events_count?: number | null
    training_completed?: boolean | null
    background_check_status?: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type volunteer_profilesUpdateManyMutationInput = {
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_profilesUncheckedUpdateManyInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_skillsCreateInput = {
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
    volunteer_profiles: volunteer_profilesCreateNestedOneWithoutVolunteer_skillsInput
    skills: skillsCreateNestedOneWithoutVolunteer_skillsInput
  }

  export type volunteer_skillsUncheckedCreateInput = {
    volunteer_id: bigint | number
    skill_id: bigint | number
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
  }

  export type volunteer_skillsUpdateInput = {
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    volunteer_profiles?: volunteer_profilesUpdateOneRequiredWithoutVolunteer_skillsNestedInput
    skills?: skillsUpdateOneRequiredWithoutVolunteer_skillsNestedInput
  }

  export type volunteer_skillsUncheckedUpdateInput = {
    volunteer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    skill_id?: BigIntFieldUpdateOperationsInput | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_skillsCreateManyInput = {
    volunteer_id: bigint | number
    skill_id: bigint | number
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
  }

  export type volunteer_skillsUpdateManyMutationInput = {
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_skillsUncheckedUpdateManyInput = {
    volunteer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    skill_id?: BigIntFieldUpdateOperationsInput | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type Enumcampaigns_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.campaigns_language | Enumcampaigns_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.campaigns_language[] | null
    notIn?: $Enums.campaigns_language[] | null
    not?: NestedEnumcampaigns_languageNullableFilter<$PrismaModel> | $Enums.campaigns_language | null
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type DonationsListRelationFilter = {
    every?: donationsWhereInput
    some?: donationsWhereInput
    none?: donationsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type donationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type campaignsOrderByRelevanceInput = {
    fields: campaignsOrderByRelevanceFieldEnum | campaignsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type campaignsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    goal_amount?: SortOrder
    current_amount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    is_featured?: SortOrder
    category?: SortOrder
    progress_bar_color?: SortOrder
    image_url?: SortOrder
    video_url?: SortOrder
    donor_count?: SortOrder
    success_stories?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type campaignsAvgOrderByAggregateInput = {
    id?: SortOrder
    goal_amount?: SortOrder
    current_amount?: SortOrder
    donor_count?: SortOrder
    created_by?: SortOrder
  }

  export type campaignsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    goal_amount?: SortOrder
    current_amount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    is_featured?: SortOrder
    category?: SortOrder
    progress_bar_color?: SortOrder
    image_url?: SortOrder
    video_url?: SortOrder
    donor_count?: SortOrder
    success_stories?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type campaignsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    goal_amount?: SortOrder
    current_amount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    is_featured?: SortOrder
    category?: SortOrder
    progress_bar_color?: SortOrder
    image_url?: SortOrder
    video_url?: SortOrder
    donor_count?: SortOrder
    success_stories?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type campaignsSumOrderByAggregateInput = {
    id?: SortOrder
    goal_amount?: SortOrder
    current_amount?: SortOrder
    donor_count?: SortOrder
    created_by?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type Enumcampaigns_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.campaigns_language | Enumcampaigns_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.campaigns_language[] | null
    notIn?: $Enums.campaigns_language[] | null
    not?: NestedEnumcampaigns_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.campaigns_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcampaigns_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumcampaigns_languageNullableFilter<$PrismaModel>
  }

  export type Enumcontact_messages_reasonFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_reason | Enumcontact_messages_reasonFieldRefInput<$PrismaModel>
    in?: $Enums.contact_messages_reason[]
    notIn?: $Enums.contact_messages_reason[]
    not?: NestedEnumcontact_messages_reasonFilter<$PrismaModel> | $Enums.contact_messages_reason
  }

  export type Enumcontact_messages_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_status | Enumcontact_messages_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.contact_messages_status[] | null
    notIn?: $Enums.contact_messages_status[] | null
    not?: NestedEnumcontact_messages_statusNullableFilter<$PrismaModel> | $Enums.contact_messages_status | null
  }

  export type contact_messagesOrderByRelevanceInput = {
    fields: contact_messagesOrderByRelevanceFieldEnum | contact_messagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type contact_messagesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
    submitted_at?: SortOrder
    replied_at?: SortOrder
  }

  export type contact_messagesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type contact_messagesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
    submitted_at?: SortOrder
    replied_at?: SortOrder
  }

  export type contact_messagesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
    submitted_at?: SortOrder
    replied_at?: SortOrder
  }

  export type contact_messagesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumcontact_messages_reasonWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_reason | Enumcontact_messages_reasonFieldRefInput<$PrismaModel>
    in?: $Enums.contact_messages_reason[]
    notIn?: $Enums.contact_messages_reason[]
    not?: NestedEnumcontact_messages_reasonWithAggregatesFilter<$PrismaModel> | $Enums.contact_messages_reason
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcontact_messages_reasonFilter<$PrismaModel>
    _max?: NestedEnumcontact_messages_reasonFilter<$PrismaModel>
  }

  export type Enumcontact_messages_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_status | Enumcontact_messages_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.contact_messages_status[] | null
    notIn?: $Enums.contact_messages_status[] | null
    not?: NestedEnumcontact_messages_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.contact_messages_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcontact_messages_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcontact_messages_statusNullableFilter<$PrismaModel>
  }

  export type Enumdocuments_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.documents_language | Enumdocuments_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.documents_language[] | null
    notIn?: $Enums.documents_language[] | null
    not?: NestedEnumdocuments_languageNullableFilter<$PrismaModel> | $Enums.documents_language | null
  }

  export type documentsOrderByRelevanceInput = {
    fields: documentsOrderByRelevanceFieldEnum | documentsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type documentsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    category?: SortOrder
    file_url?: SortOrder
    file_size?: SortOrder
    file_type?: SortOrder
    uploaded_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_public?: SortOrder
    download_count?: SortOrder
    uploaded_at?: SortOrder
    updated_at?: SortOrder
  }

  export type documentsAvgOrderByAggregateInput = {
    id?: SortOrder
    file_size?: SortOrder
    uploaded_by?: SortOrder
    download_count?: SortOrder
  }

  export type documentsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    category?: SortOrder
    file_url?: SortOrder
    file_size?: SortOrder
    file_type?: SortOrder
    uploaded_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_public?: SortOrder
    download_count?: SortOrder
    uploaded_at?: SortOrder
    updated_at?: SortOrder
  }

  export type documentsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    category?: SortOrder
    file_url?: SortOrder
    file_size?: SortOrder
    file_type?: SortOrder
    uploaded_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_public?: SortOrder
    download_count?: SortOrder
    uploaded_at?: SortOrder
    updated_at?: SortOrder
  }

  export type documentsSumOrderByAggregateInput = {
    id?: SortOrder
    file_size?: SortOrder
    uploaded_by?: SortOrder
    download_count?: SortOrder
  }

  export type Enumdocuments_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.documents_language | Enumdocuments_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.documents_language[] | null
    notIn?: $Enums.documents_language[] | null
    not?: NestedEnumdocuments_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.documents_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdocuments_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumdocuments_languageNullableFilter<$PrismaModel>
  }

  export type Enumdonations_donation_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_donation_type | Enumdonations_donation_typeFieldRefInput<$PrismaModel>
    in?: $Enums.donations_donation_type[]
    notIn?: $Enums.donations_donation_type[]
    not?: NestedEnumdonations_donation_typeFilter<$PrismaModel> | $Enums.donations_donation_type
  }

  export type Enumdonations_payment_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_payment_status | Enumdonations_payment_statusFieldRefInput<$PrismaModel>
    in?: $Enums.donations_payment_status[]
    notIn?: $Enums.donations_payment_status[]
    not?: NestedEnumdonations_payment_statusFilter<$PrismaModel> | $Enums.donations_payment_status
  }

  export type Donor_profilesScalarRelationFilter = {
    is?: donor_profilesWhereInput
    isNot?: donor_profilesWhereInput
  }

  export type CampaignsScalarRelationFilter = {
    is?: campaignsWhereInput
    isNot?: campaignsWhereInput
  }

  export type donationsOrderByRelevanceInput = {
    fields: donationsOrderByRelevanceFieldEnum | donationsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type donationsCountOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    campaign_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrder
    payment_status?: SortOrder
    transaction_id?: SortOrder
    receipt_url?: SortOrder
    is_acknowledged?: SortOrder
    is_tax_deductible?: SortOrder
    is_anonymous?: SortOrder
    notes?: SortOrder
    donated_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type donationsAvgOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    campaign_id?: SortOrder
    amount?: SortOrder
  }

  export type donationsMaxOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    campaign_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrder
    payment_status?: SortOrder
    transaction_id?: SortOrder
    receipt_url?: SortOrder
    is_acknowledged?: SortOrder
    is_tax_deductible?: SortOrder
    is_anonymous?: SortOrder
    notes?: SortOrder
    donated_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type donationsMinOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    campaign_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrder
    payment_status?: SortOrder
    transaction_id?: SortOrder
    receipt_url?: SortOrder
    is_acknowledged?: SortOrder
    is_tax_deductible?: SortOrder
    is_anonymous?: SortOrder
    notes?: SortOrder
    donated_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type donationsSumOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    campaign_id?: SortOrder
    amount?: SortOrder
  }

  export type Enumdonations_donation_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_donation_type | Enumdonations_donation_typeFieldRefInput<$PrismaModel>
    in?: $Enums.donations_donation_type[]
    notIn?: $Enums.donations_donation_type[]
    not?: NestedEnumdonations_donation_typeWithAggregatesFilter<$PrismaModel> | $Enums.donations_donation_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdonations_donation_typeFilter<$PrismaModel>
    _max?: NestedEnumdonations_donation_typeFilter<$PrismaModel>
  }

  export type Enumdonations_payment_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_payment_status | Enumdonations_payment_statusFieldRefInput<$PrismaModel>
    in?: $Enums.donations_payment_status[]
    notIn?: $Enums.donations_payment_status[]
    not?: NestedEnumdonations_payment_statusWithAggregatesFilter<$PrismaModel> | $Enums.donations_payment_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdonations_payment_statusFilter<$PrismaModel>
    _max?: NestedEnumdonations_payment_statusFilter<$PrismaModel>
  }

  export type Enumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_frequency | Enumdonor_profiles_donation_frequencyFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_frequency[] | null
    notIn?: $Enums.donor_profiles_donation_frequency[] | null
    not?: NestedEnumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel> | $Enums.donor_profiles_donation_frequency | null
  }

  export type Enumdonor_profiles_donation_tierNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_tier | Enumdonor_profiles_donation_tierFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_tier[] | null
    notIn?: $Enums.donor_profiles_donation_tier[] | null
    not?: NestedEnumdonor_profiles_donation_tierNullableFilter<$PrismaModel> | $Enums.donor_profiles_donation_tier | null
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type donor_profilesOrderByRelevanceInput = {
    fields: donor_profilesOrderByRelevanceFieldEnum | donor_profilesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type donor_profilesCountOrderByAggregateInput = {
    user_id?: SortOrder
    is_recurring_donor?: SortOrder
    preferred_payment_method?: SortOrder
    total_donated?: SortOrder
    donation_frequency?: SortOrder
    tax_receipt_email?: SortOrder
    is_anonymous?: SortOrder
    last_donation_date?: SortOrder
    donation_tier?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type donor_profilesAvgOrderByAggregateInput = {
    user_id?: SortOrder
    total_donated?: SortOrder
  }

  export type donor_profilesMaxOrderByAggregateInput = {
    user_id?: SortOrder
    is_recurring_donor?: SortOrder
    preferred_payment_method?: SortOrder
    total_donated?: SortOrder
    donation_frequency?: SortOrder
    tax_receipt_email?: SortOrder
    is_anonymous?: SortOrder
    last_donation_date?: SortOrder
    donation_tier?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type donor_profilesMinOrderByAggregateInput = {
    user_id?: SortOrder
    is_recurring_donor?: SortOrder
    preferred_payment_method?: SortOrder
    total_donated?: SortOrder
    donation_frequency?: SortOrder
    tax_receipt_email?: SortOrder
    is_anonymous?: SortOrder
    last_donation_date?: SortOrder
    donation_tier?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type donor_profilesSumOrderByAggregateInput = {
    user_id?: SortOrder
    total_donated?: SortOrder
  }

  export type Enumdonor_profiles_donation_frequencyNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_frequency | Enumdonor_profiles_donation_frequencyFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_frequency[] | null
    notIn?: $Enums.donor_profiles_donation_frequency[] | null
    not?: NestedEnumdonor_profiles_donation_frequencyNullableWithAggregatesFilter<$PrismaModel> | $Enums.donor_profiles_donation_frequency | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel>
    _max?: NestedEnumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel>
  }

  export type Enumdonor_profiles_donation_tierNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_tier | Enumdonor_profiles_donation_tierFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_tier[] | null
    notIn?: $Enums.donor_profiles_donation_tier[] | null
    not?: NestedEnumdonor_profiles_donation_tierNullableWithAggregatesFilter<$PrismaModel> | $Enums.donor_profiles_donation_tier | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdonor_profiles_donation_tierNullableFilter<$PrismaModel>
    _max?: NestedEnumdonor_profiles_donation_tierNullableFilter<$PrismaModel>
  }

  export type Enumemail_logs_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.email_logs_status | Enumemail_logs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.email_logs_status[]
    notIn?: $Enums.email_logs_status[]
    not?: NestedEnumemail_logs_statusFilter<$PrismaModel> | $Enums.email_logs_status
  }

  export type email_logsOrderByRelevanceInput = {
    fields: email_logsOrderByRelevanceFieldEnum | email_logsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type email_logsCountOrderByAggregateInput = {
    id?: SortOrder
    recipient?: SortOrder
    subject?: SortOrder
    template_used?: SortOrder
    content?: SortOrder
    status?: SortOrder
    error_message?: SortOrder
    sent_at?: SortOrder
    opened_at?: SortOrder
    clicked_at?: SortOrder
  }

  export type email_logsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type email_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    recipient?: SortOrder
    subject?: SortOrder
    template_used?: SortOrder
    content?: SortOrder
    status?: SortOrder
    error_message?: SortOrder
    sent_at?: SortOrder
    opened_at?: SortOrder
    clicked_at?: SortOrder
  }

  export type email_logsMinOrderByAggregateInput = {
    id?: SortOrder
    recipient?: SortOrder
    subject?: SortOrder
    template_used?: SortOrder
    content?: SortOrder
    status?: SortOrder
    error_message?: SortOrder
    sent_at?: SortOrder
    opened_at?: SortOrder
    clicked_at?: SortOrder
  }

  export type email_logsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumemail_logs_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.email_logs_status | Enumemail_logs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.email_logs_status[]
    notIn?: $Enums.email_logs_status[]
    not?: NestedEnumemail_logs_statusWithAggregatesFilter<$PrismaModel> | $Enums.email_logs_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumemail_logs_statusFilter<$PrismaModel>
    _max?: NestedEnumemail_logs_statusFilter<$PrismaModel>
  }

  export type Enumevent_participants_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_role | Enumevent_participants_roleFieldRefInput<$PrismaModel>
    in?: $Enums.event_participants_role[]
    notIn?: $Enums.event_participants_role[]
    not?: NestedEnumevent_participants_roleFilter<$PrismaModel> | $Enums.event_participants_role
  }

  export type Enumevent_participants_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_status | Enumevent_participants_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.event_participants_status[] | null
    notIn?: $Enums.event_participants_status[] | null
    not?: NestedEnumevent_participants_statusNullableFilter<$PrismaModel> | $Enums.event_participants_status | null
  }

  export type EventsScalarRelationFilter = {
    is?: eventsWhereInput
    isNot?: eventsWhereInput
  }

  export type event_participantsOrderByRelevanceInput = {
    fields: event_participantsOrderByRelevanceFieldEnum | event_participantsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type event_participantsEvent_idUser_idCompoundUniqueInput = {
    event_id: bigint | number
    user_id: bigint | number
  }

  export type event_participantsCountOrderByAggregateInput = {
    event_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    status?: SortOrder
    hours_contributed?: SortOrder
    feedback?: SortOrder
    rating?: SortOrder
    registered_at?: SortOrder
    attended_at?: SortOrder
  }

  export type event_participantsAvgOrderByAggregateInput = {
    event_id?: SortOrder
    user_id?: SortOrder
    hours_contributed?: SortOrder
    rating?: SortOrder
  }

  export type event_participantsMaxOrderByAggregateInput = {
    event_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    status?: SortOrder
    hours_contributed?: SortOrder
    feedback?: SortOrder
    rating?: SortOrder
    registered_at?: SortOrder
    attended_at?: SortOrder
  }

  export type event_participantsMinOrderByAggregateInput = {
    event_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    status?: SortOrder
    hours_contributed?: SortOrder
    feedback?: SortOrder
    rating?: SortOrder
    registered_at?: SortOrder
    attended_at?: SortOrder
  }

  export type event_participantsSumOrderByAggregateInput = {
    event_id?: SortOrder
    user_id?: SortOrder
    hours_contributed?: SortOrder
    rating?: SortOrder
  }

  export type Enumevent_participants_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_role | Enumevent_participants_roleFieldRefInput<$PrismaModel>
    in?: $Enums.event_participants_role[]
    notIn?: $Enums.event_participants_role[]
    not?: NestedEnumevent_participants_roleWithAggregatesFilter<$PrismaModel> | $Enums.event_participants_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumevent_participants_roleFilter<$PrismaModel>
    _max?: NestedEnumevent_participants_roleFilter<$PrismaModel>
  }

  export type Enumevent_participants_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_status | Enumevent_participants_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.event_participants_status[] | null
    notIn?: $Enums.event_participants_status[] | null
    not?: NestedEnumevent_participants_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.event_participants_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumevent_participants_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumevent_participants_statusNullableFilter<$PrismaModel>
  }

  export type Enumevents_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.events_status | Enumevents_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_status[] | null
    notIn?: $Enums.events_status[] | null
    not?: NestedEnumevents_statusNullableFilter<$PrismaModel> | $Enums.events_status | null
  }

  export type Enumevents_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.events_language | Enumevents_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_language[] | null
    notIn?: $Enums.events_language[] | null
    not?: NestedEnumevents_languageNullableFilter<$PrismaModel> | $Enums.events_language | null
  }

  export type Event_participantsListRelationFilter = {
    every?: event_participantsWhereInput
    some?: event_participantsWhereInput
    none?: event_participantsWhereInput
  }

  export type MediaListRelationFilter = {
    every?: mediaWhereInput
    some?: mediaWhereInput
    none?: mediaWhereInput
  }

  export type event_participantsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mediaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type eventsOrderByRelevanceInput = {
    fields: eventsOrderByRelevanceFieldEnum | eventsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type eventsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    event_date?: SortOrder
    event_time?: SortOrder
    timezone?: SortOrder
    location?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    category?: SortOrder
    capacity?: SortOrder
    registered_count?: SortOrder
    status?: SortOrder
    registration_deadline?: SortOrder
    registration_link?: SortOrder
    map_embed_url?: SortOrder
    agenda?: SortOrder
    speaker_info?: SortOrder
    requirements?: SortOrder
    ticket_price?: SortOrder
    ticket_link?: SortOrder
    is_featured?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type eventsAvgOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    capacity?: SortOrder
    registered_count?: SortOrder
    ticket_price?: SortOrder
    created_by?: SortOrder
  }

  export type eventsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    event_date?: SortOrder
    event_time?: SortOrder
    timezone?: SortOrder
    location?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    category?: SortOrder
    capacity?: SortOrder
    registered_count?: SortOrder
    status?: SortOrder
    registration_deadline?: SortOrder
    registration_link?: SortOrder
    map_embed_url?: SortOrder
    agenda?: SortOrder
    speaker_info?: SortOrder
    requirements?: SortOrder
    ticket_price?: SortOrder
    ticket_link?: SortOrder
    is_featured?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type eventsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    event_date?: SortOrder
    event_time?: SortOrder
    timezone?: SortOrder
    location?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    category?: SortOrder
    capacity?: SortOrder
    registered_count?: SortOrder
    status?: SortOrder
    registration_deadline?: SortOrder
    registration_link?: SortOrder
    map_embed_url?: SortOrder
    agenda?: SortOrder
    speaker_info?: SortOrder
    requirements?: SortOrder
    ticket_price?: SortOrder
    ticket_link?: SortOrder
    is_featured?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type eventsSumOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    capacity?: SortOrder
    registered_count?: SortOrder
    ticket_price?: SortOrder
    created_by?: SortOrder
  }

  export type Enumevents_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.events_status | Enumevents_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_status[] | null
    notIn?: $Enums.events_status[] | null
    not?: NestedEnumevents_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.events_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumevents_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumevents_statusNullableFilter<$PrismaModel>
  }

  export type Enumevents_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.events_language | Enumevents_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_language[] | null
    notIn?: $Enums.events_language[] | null
    not?: NestedEnumevents_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.events_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumevents_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumevents_languageNullableFilter<$PrismaModel>
  }

  export type Enumfaqs_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.faqs_language | Enumfaqs_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.faqs_language[] | null
    notIn?: $Enums.faqs_language[] | null
    not?: NestedEnumfaqs_languageNullableFilter<$PrismaModel> | $Enums.faqs_language | null
  }

  export type faqsOrderByRelevanceInput = {
    fields: faqsOrderByRelevanceFieldEnum | faqsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type faqsCountOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_active?: SortOrder
    sort_order?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type faqsAvgOrderByAggregateInput = {
    id?: SortOrder
    sort_order?: SortOrder
  }

  export type faqsMaxOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_active?: SortOrder
    sort_order?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type faqsMinOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_active?: SortOrder
    sort_order?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type faqsSumOrderByAggregateInput = {
    id?: SortOrder
    sort_order?: SortOrder
  }

  export type Enumfaqs_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.faqs_language | Enumfaqs_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.faqs_language[] | null
    notIn?: $Enums.faqs_language[] | null
    not?: NestedEnumfaqs_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.faqs_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumfaqs_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumfaqs_languageNullableFilter<$PrismaModel>
  }

  export type Enummedia_media_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.media_media_type | Enummedia_media_typeFieldRefInput<$PrismaModel>
    in?: $Enums.media_media_type[]
    notIn?: $Enums.media_media_type[]
    not?: NestedEnummedia_media_typeFilter<$PrismaModel> | $Enums.media_media_type
  }

  export type Enummedia_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.media_language | Enummedia_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.media_language[] | null
    notIn?: $Enums.media_language[] | null
    not?: NestedEnummedia_languageNullableFilter<$PrismaModel> | $Enums.media_language | null
  }

  export type EventsNullableScalarRelationFilter = {
    is?: eventsWhereInput | null
    isNot?: eventsWhereInput | null
  }

  export type ProgramsNullableScalarRelationFilter = {
    is?: programsWhereInput | null
    isNot?: programsWhereInput | null
  }

  export type mediaOrderByRelevanceInput = {
    fields: mediaOrderByRelevanceFieldEnum | mediaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type mediaCountOrderByAggregateInput = {
    id?: SortOrder
    media_type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    file_url?: SortOrder
    related_event_id?: SortOrder
    related_program_id?: SortOrder
    uploaded_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    uploaded_at?: SortOrder
  }

  export type mediaAvgOrderByAggregateInput = {
    id?: SortOrder
    related_event_id?: SortOrder
    related_program_id?: SortOrder
    uploaded_by?: SortOrder
  }

  export type mediaMaxOrderByAggregateInput = {
    id?: SortOrder
    media_type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    file_url?: SortOrder
    related_event_id?: SortOrder
    related_program_id?: SortOrder
    uploaded_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    uploaded_at?: SortOrder
  }

  export type mediaMinOrderByAggregateInput = {
    id?: SortOrder
    media_type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    file_url?: SortOrder
    related_event_id?: SortOrder
    related_program_id?: SortOrder
    uploaded_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    uploaded_at?: SortOrder
  }

  export type mediaSumOrderByAggregateInput = {
    id?: SortOrder
    related_event_id?: SortOrder
    related_program_id?: SortOrder
    uploaded_by?: SortOrder
  }

  export type Enummedia_media_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.media_media_type | Enummedia_media_typeFieldRefInput<$PrismaModel>
    in?: $Enums.media_media_type[]
    notIn?: $Enums.media_media_type[]
    not?: NestedEnummedia_media_typeWithAggregatesFilter<$PrismaModel> | $Enums.media_media_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnummedia_media_typeFilter<$PrismaModel>
    _max?: NestedEnummedia_media_typeFilter<$PrismaModel>
  }

  export type Enummedia_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.media_language | Enummedia_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.media_language[] | null
    notIn?: $Enums.media_language[] | null
    not?: NestedEnummedia_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.media_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnummedia_languageNullableFilter<$PrismaModel>
    _max?: NestedEnummedia_languageNullableFilter<$PrismaModel>
  }

  export type Enumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.newsletter_subscribers_language_preference | Enumnewsletter_subscribers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.newsletter_subscribers_language_preference[] | null
    notIn?: $Enums.newsletter_subscribers_language_preference[] | null
    not?: NestedEnumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel> | $Enums.newsletter_subscribers_language_preference | null
  }

  export type newsletter_subscribersOrderByRelevanceInput = {
    fields: newsletter_subscribersOrderByRelevanceFieldEnum | newsletter_subscribersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type newsletter_subscribersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    is_active?: SortOrder
    language_preference?: SortOrder
    subscribed_at?: SortOrder
    unsubscribed_at?: SortOrder
  }

  export type newsletter_subscribersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type newsletter_subscribersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    is_active?: SortOrder
    language_preference?: SortOrder
    subscribed_at?: SortOrder
    unsubscribed_at?: SortOrder
  }

  export type newsletter_subscribersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    is_active?: SortOrder
    language_preference?: SortOrder
    subscribed_at?: SortOrder
    unsubscribed_at?: SortOrder
  }

  export type newsletter_subscribersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumnewsletter_subscribers_language_preferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.newsletter_subscribers_language_preference | Enumnewsletter_subscribers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.newsletter_subscribers_language_preference[] | null
    notIn?: $Enums.newsletter_subscribers_language_preference[] | null
    not?: NestedEnumnewsletter_subscribers_language_preferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.newsletter_subscribers_language_preference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel>
  }

  export type Enumpartners_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_type | Enumpartners_typeFieldRefInput<$PrismaModel>
    in?: $Enums.partners_type[]
    notIn?: $Enums.partners_type[]
    not?: NestedEnumpartners_typeFilter<$PrismaModel> | $Enums.partners_type
  }

  export type Enumpartners_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_language | Enumpartners_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.partners_language[] | null
    notIn?: $Enums.partners_language[] | null
    not?: NestedEnumpartners_languageNullableFilter<$PrismaModel> | $Enums.partners_language | null
  }

  export type partnersOrderByRelevanceInput = {
    fields: partnersOrderByRelevanceFieldEnum | partnersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type partnersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo_url?: SortOrder
    type?: SortOrder
    website?: SortOrder
    contact_email?: SortOrder
    quote?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_active?: SortOrder
    partnership_start_date?: SortOrder
    partnership_end_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type partnersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type partnersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo_url?: SortOrder
    type?: SortOrder
    website?: SortOrder
    contact_email?: SortOrder
    quote?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_active?: SortOrder
    partnership_start_date?: SortOrder
    partnership_end_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type partnersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo_url?: SortOrder
    type?: SortOrder
    website?: SortOrder
    contact_email?: SortOrder
    quote?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_active?: SortOrder
    partnership_start_date?: SortOrder
    partnership_end_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type partnersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumpartners_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_type | Enumpartners_typeFieldRefInput<$PrismaModel>
    in?: $Enums.partners_type[]
    notIn?: $Enums.partners_type[]
    not?: NestedEnumpartners_typeWithAggregatesFilter<$PrismaModel> | $Enums.partners_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpartners_typeFilter<$PrismaModel>
    _max?: NestedEnumpartners_typeFilter<$PrismaModel>
  }

  export type Enumpartners_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_language | Enumpartners_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.partners_language[] | null
    notIn?: $Enums.partners_language[] | null
    not?: NestedEnumpartners_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.partners_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpartners_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumpartners_languageNullableFilter<$PrismaModel>
  }

  export type Enumposts_post_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_post_type | Enumposts_post_typeFieldRefInput<$PrismaModel>
    in?: $Enums.posts_post_type[]
    notIn?: $Enums.posts_post_type[]
    not?: NestedEnumposts_post_typeFilter<$PrismaModel> | $Enums.posts_post_type
  }

  export type Enumposts_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_language | Enumposts_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.posts_language[] | null
    notIn?: $Enums.posts_language[] | null
    not?: NestedEnumposts_languageNullableFilter<$PrismaModel> | $Enums.posts_language | null
  }

  export type postsOrderByRelevanceInput = {
    fields: postsOrderByRelevanceFieldEnum | postsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type postsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    post_type?: SortOrder
    author_id?: SortOrder
    feature_image?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type postsAvgOrderByAggregateInput = {
    id?: SortOrder
    author_id?: SortOrder
  }

  export type postsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    post_type?: SortOrder
    author_id?: SortOrder
    feature_image?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type postsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    post_type?: SortOrder
    author_id?: SortOrder
    feature_image?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type postsSumOrderByAggregateInput = {
    id?: SortOrder
    author_id?: SortOrder
  }

  export type Enumposts_post_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_post_type | Enumposts_post_typeFieldRefInput<$PrismaModel>
    in?: $Enums.posts_post_type[]
    notIn?: $Enums.posts_post_type[]
    not?: NestedEnumposts_post_typeWithAggregatesFilter<$PrismaModel> | $Enums.posts_post_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumposts_post_typeFilter<$PrismaModel>
    _max?: NestedEnumposts_post_typeFilter<$PrismaModel>
  }

  export type Enumposts_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_language | Enumposts_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.posts_language[] | null
    notIn?: $Enums.posts_language[] | null
    not?: NestedEnumposts_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.posts_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumposts_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumposts_languageNullableFilter<$PrismaModel>
  }

  export type Enumprograms_categoryNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_category | Enumprograms_categoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_category[] | null
    notIn?: $Enums.programs_category[] | null
    not?: NestedEnumprograms_categoryNullableFilter<$PrismaModel> | $Enums.programs_category | null
  }

  export type Enumprograms_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_language | Enumprograms_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_language[] | null
    notIn?: $Enums.programs_language[] | null
    not?: NestedEnumprograms_languageNullableFilter<$PrismaModel> | $Enums.programs_language | null
  }

  export type programsOrderByRelevanceInput = {
    fields: programsOrderByRelevanceFieldEnum | programsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type programsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    location?: SortOrder
    impact_stats?: SortOrder
    is_featured?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type programsAvgOrderByAggregateInput = {
    id?: SortOrder
    created_by?: SortOrder
  }

  export type programsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    location?: SortOrder
    impact_stats?: SortOrder
    is_featured?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type programsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    location?: SortOrder
    impact_stats?: SortOrder
    is_featured?: SortOrder
    created_by?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type programsSumOrderByAggregateInput = {
    id?: SortOrder
    created_by?: SortOrder
  }

  export type Enumprograms_categoryNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_category | Enumprograms_categoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_category[] | null
    notIn?: $Enums.programs_category[] | null
    not?: NestedEnumprograms_categoryNullableWithAggregatesFilter<$PrismaModel> | $Enums.programs_category | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumprograms_categoryNullableFilter<$PrismaModel>
    _max?: NestedEnumprograms_categoryNullableFilter<$PrismaModel>
  }

  export type Enumprograms_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_language | Enumprograms_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_language[] | null
    notIn?: $Enums.programs_language[] | null
    not?: NestedEnumprograms_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.programs_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumprograms_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumprograms_languageNullableFilter<$PrismaModel>
  }

  export type Enumrole_permissions_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.role_permissions_role | Enumrole_permissions_roleFieldRefInput<$PrismaModel>
    in?: $Enums.role_permissions_role[]
    notIn?: $Enums.role_permissions_role[]
    not?: NestedEnumrole_permissions_roleFilter<$PrismaModel> | $Enums.role_permissions_role
  }

  export type role_permissionsOrderByRelevanceInput = {
    fields: role_permissionsOrderByRelevanceFieldEnum | role_permissionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type role_permissionsRolePermissionCompoundUniqueInput = {
    role: $Enums.role_permissions_role
    permission: string
  }

  export type role_permissionsCountOrderByAggregateInput = {
    role?: SortOrder
    permission?: SortOrder
    created_at?: SortOrder
  }

  export type role_permissionsMaxOrderByAggregateInput = {
    role?: SortOrder
    permission?: SortOrder
    created_at?: SortOrder
  }

  export type role_permissionsMinOrderByAggregateInput = {
    role?: SortOrder
    permission?: SortOrder
    created_at?: SortOrder
  }

  export type Enumrole_permissions_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.role_permissions_role | Enumrole_permissions_roleFieldRefInput<$PrismaModel>
    in?: $Enums.role_permissions_role[]
    notIn?: $Enums.role_permissions_role[]
    not?: NestedEnumrole_permissions_roleWithAggregatesFilter<$PrismaModel> | $Enums.role_permissions_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumrole_permissions_roleFilter<$PrismaModel>
    _max?: NestedEnumrole_permissions_roleFilter<$PrismaModel>
  }

  export type site_interactionsOrderByRelevanceInput = {
    fields: site_interactionsOrderByRelevanceFieldEnum | site_interactionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type site_interactionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    session_id?: SortOrder
    page?: SortOrder
    action?: SortOrder
    metadata?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
    occurred_at?: SortOrder
  }

  export type site_interactionsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type site_interactionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    session_id?: SortOrder
    page?: SortOrder
    action?: SortOrder
    metadata?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
    occurred_at?: SortOrder
  }

  export type site_interactionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    session_id?: SortOrder
    page?: SortOrder
    action?: SortOrder
    metadata?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
    occurred_at?: SortOrder
  }

  export type site_interactionsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type Volunteer_skillsListRelationFilter = {
    every?: volunteer_skillsWhereInput
    some?: volunteer_skillsWhereInput
    none?: volunteer_skillsWhereInput
  }

  export type volunteer_skillsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type skillsOrderByRelevanceInput = {
    fields: skillsOrderByRelevanceFieldEnum | skillsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type skillsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
  }

  export type skillsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type skillsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
  }

  export type skillsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
  }

  export type skillsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumtestimonials_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_type | Enumtestimonials_typeFieldRefInput<$PrismaModel>
    in?: $Enums.testimonials_type[]
    notIn?: $Enums.testimonials_type[]
    not?: NestedEnumtestimonials_typeFilter<$PrismaModel> | $Enums.testimonials_type
  }

  export type Enumtestimonials_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_language | Enumtestimonials_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.testimonials_language[] | null
    notIn?: $Enums.testimonials_language[] | null
    not?: NestedEnumtestimonials_languageNullableFilter<$PrismaModel> | $Enums.testimonials_language | null
  }

  export type testimonialsOrderByRelevanceInput = {
    fields: testimonialsOrderByRelevanceFieldEnum | testimonialsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type testimonialsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    role?: SortOrder
    message?: SortOrder
    image_url?: SortOrder
    type?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_featured?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type testimonialsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type testimonialsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    role?: SortOrder
    message?: SortOrder
    image_url?: SortOrder
    type?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_featured?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type testimonialsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    role?: SortOrder
    message?: SortOrder
    image_url?: SortOrder
    type?: SortOrder
    language?: SortOrder
    translation_group_id?: SortOrder
    is_featured?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type testimonialsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumtestimonials_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_type | Enumtestimonials_typeFieldRefInput<$PrismaModel>
    in?: $Enums.testimonials_type[]
    notIn?: $Enums.testimonials_type[]
    not?: NestedEnumtestimonials_typeWithAggregatesFilter<$PrismaModel> | $Enums.testimonials_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtestimonials_typeFilter<$PrismaModel>
    _max?: NestedEnumtestimonials_typeFilter<$PrismaModel>
  }

  export type Enumtestimonials_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_language | Enumtestimonials_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.testimonials_language[] | null
    notIn?: $Enums.testimonials_language[] | null
    not?: NestedEnumtestimonials_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.testimonials_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtestimonials_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumtestimonials_languageNullableFilter<$PrismaModel>
  }

  export type Enumusers_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[]
    notIn?: $Enums.users_role[]
    not?: NestedEnumusers_roleFilter<$PrismaModel> | $Enums.users_role
  }

  export type Enumusers_language_preferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.users_language_preference | Enumusers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_language_preference[] | null
    notIn?: $Enums.users_language_preference[] | null
    not?: NestedEnumusers_language_preferenceNullableFilter<$PrismaModel> | $Enums.users_language_preference | null
  }

  export type CampaignsListRelationFilter = {
    every?: campaignsWhereInput
    some?: campaignsWhereInput
    none?: campaignsWhereInput
  }

  export type DocumentsListRelationFilter = {
    every?: documentsWhereInput
    some?: documentsWhereInput
    none?: documentsWhereInput
  }

  export type Donor_profilesNullableScalarRelationFilter = {
    is?: donor_profilesWhereInput | null
    isNot?: donor_profilesWhereInput | null
  }

  export type EventsListRelationFilter = {
    every?: eventsWhereInput
    some?: eventsWhereInput
    none?: eventsWhereInput
  }

  export type PostsListRelationFilter = {
    every?: postsWhereInput
    some?: postsWhereInput
    none?: postsWhereInput
  }

  export type ProgramsListRelationFilter = {
    every?: programsWhereInput
    some?: programsWhereInput
    none?: programsWhereInput
  }

  export type Site_interactionsListRelationFilter = {
    every?: site_interactionsWhereInput
    some?: site_interactionsWhereInput
    none?: site_interactionsWhereInput
  }

  export type Volunteer_profilesNullableScalarRelationFilter = {
    is?: volunteer_profilesWhereInput | null
    isNot?: volunteer_profilesWhereInput | null
  }

  export type campaignsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type documentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type eventsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type postsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type programsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type site_interactionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelevanceInput = {
    fields: usersOrderByRelevanceFieldEnum | usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    profile_image_url?: SortOrder
    language_preference?: SortOrder
    email_verified?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    profile_image_url?: SortOrder
    language_preference?: SortOrder
    email_verified?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    profile_image_url?: SortOrder
    language_preference?: SortOrder
    email_verified?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumusers_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[]
    notIn?: $Enums.users_role[]
    not?: NestedEnumusers_roleWithAggregatesFilter<$PrismaModel> | $Enums.users_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumusers_roleFilter<$PrismaModel>
    _max?: NestedEnumusers_roleFilter<$PrismaModel>
  }

  export type Enumusers_language_preferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_language_preference | Enumusers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_language_preference[] | null
    notIn?: $Enums.users_language_preference[] | null
    not?: NestedEnumusers_language_preferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.users_language_preference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusers_language_preferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumusers_language_preferenceNullableFilter<$PrismaModel>
  }

  export type Enumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_profiles_background_check_status | Enumvolunteer_profiles_background_check_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.volunteer_profiles_background_check_status[] | null
    notIn?: $Enums.volunteer_profiles_background_check_status[] | null
    not?: NestedEnumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel> | $Enums.volunteer_profiles_background_check_status | null
  }

  export type volunteer_profilesOrderByRelevanceInput = {
    fields: volunteer_profilesOrderByRelevanceFieldEnum | volunteer_profilesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type volunteer_profilesCountOrderByAggregateInput = {
    user_id?: SortOrder
    area_of_expertise?: SortOrder
    location?: SortOrder
    availability?: SortOrder
    motivation?: SortOrder
    total_hours?: SortOrder
    certificate_url?: SortOrder
    registered_events_count?: SortOrder
    training_completed?: SortOrder
    background_check_status?: SortOrder
    emergency_contact_name?: SortOrder
    emergency_contact_phone?: SortOrder
    rating?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type volunteer_profilesAvgOrderByAggregateInput = {
    user_id?: SortOrder
    total_hours?: SortOrder
    registered_events_count?: SortOrder
    rating?: SortOrder
  }

  export type volunteer_profilesMaxOrderByAggregateInput = {
    user_id?: SortOrder
    area_of_expertise?: SortOrder
    location?: SortOrder
    availability?: SortOrder
    motivation?: SortOrder
    total_hours?: SortOrder
    certificate_url?: SortOrder
    registered_events_count?: SortOrder
    training_completed?: SortOrder
    background_check_status?: SortOrder
    emergency_contact_name?: SortOrder
    emergency_contact_phone?: SortOrder
    rating?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type volunteer_profilesMinOrderByAggregateInput = {
    user_id?: SortOrder
    area_of_expertise?: SortOrder
    location?: SortOrder
    availability?: SortOrder
    motivation?: SortOrder
    total_hours?: SortOrder
    certificate_url?: SortOrder
    registered_events_count?: SortOrder
    training_completed?: SortOrder
    background_check_status?: SortOrder
    emergency_contact_name?: SortOrder
    emergency_contact_phone?: SortOrder
    rating?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type volunteer_profilesSumOrderByAggregateInput = {
    user_id?: SortOrder
    total_hours?: SortOrder
    registered_events_count?: SortOrder
    rating?: SortOrder
  }

  export type Enumvolunteer_profiles_background_check_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_profiles_background_check_status | Enumvolunteer_profiles_background_check_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.volunteer_profiles_background_check_status[] | null
    notIn?: $Enums.volunteer_profiles_background_check_status[] | null
    not?: NestedEnumvolunteer_profiles_background_check_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.volunteer_profiles_background_check_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel>
  }

  export type Enumvolunteer_skills_proficiency_levelFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_skills_proficiency_level | Enumvolunteer_skills_proficiency_levelFieldRefInput<$PrismaModel>
    in?: $Enums.volunteer_skills_proficiency_level[]
    notIn?: $Enums.volunteer_skills_proficiency_level[]
    not?: NestedEnumvolunteer_skills_proficiency_levelFilter<$PrismaModel> | $Enums.volunteer_skills_proficiency_level
  }

  export type Volunteer_profilesScalarRelationFilter = {
    is?: volunteer_profilesWhereInput
    isNot?: volunteer_profilesWhereInput
  }

  export type SkillsScalarRelationFilter = {
    is?: skillsWhereInput
    isNot?: skillsWhereInput
  }

  export type volunteer_skillsVolunteer_idSkill_idCompoundUniqueInput = {
    volunteer_id: bigint | number
    skill_id: bigint | number
  }

  export type volunteer_skillsCountOrderByAggregateInput = {
    volunteer_id?: SortOrder
    skill_id?: SortOrder
    proficiency_level?: SortOrder
    is_verified?: SortOrder
    created_at?: SortOrder
  }

  export type volunteer_skillsAvgOrderByAggregateInput = {
    volunteer_id?: SortOrder
    skill_id?: SortOrder
  }

  export type volunteer_skillsMaxOrderByAggregateInput = {
    volunteer_id?: SortOrder
    skill_id?: SortOrder
    proficiency_level?: SortOrder
    is_verified?: SortOrder
    created_at?: SortOrder
  }

  export type volunteer_skillsMinOrderByAggregateInput = {
    volunteer_id?: SortOrder
    skill_id?: SortOrder
    proficiency_level?: SortOrder
    is_verified?: SortOrder
    created_at?: SortOrder
  }

  export type volunteer_skillsSumOrderByAggregateInput = {
    volunteer_id?: SortOrder
    skill_id?: SortOrder
  }

  export type Enumvolunteer_skills_proficiency_levelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_skills_proficiency_level | Enumvolunteer_skills_proficiency_levelFieldRefInput<$PrismaModel>
    in?: $Enums.volunteer_skills_proficiency_level[]
    notIn?: $Enums.volunteer_skills_proficiency_level[]
    not?: NestedEnumvolunteer_skills_proficiency_levelWithAggregatesFilter<$PrismaModel> | $Enums.volunteer_skills_proficiency_level
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumvolunteer_skills_proficiency_levelFilter<$PrismaModel>
    _max?: NestedEnumvolunteer_skills_proficiency_levelFilter<$PrismaModel>
  }

  export type usersCreateNestedOneWithoutCampaignsInput = {
    create?: XOR<usersCreateWithoutCampaignsInput, usersUncheckedCreateWithoutCampaignsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCampaignsInput
    connect?: usersWhereUniqueInput
  }

  export type donationsCreateNestedManyWithoutCampaignsInput = {
    create?: XOR<donationsCreateWithoutCampaignsInput, donationsUncheckedCreateWithoutCampaignsInput> | donationsCreateWithoutCampaignsInput[] | donationsUncheckedCreateWithoutCampaignsInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutCampaignsInput | donationsCreateOrConnectWithoutCampaignsInput[]
    createMany?: donationsCreateManyCampaignsInputEnvelope
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
  }

  export type donationsUncheckedCreateNestedManyWithoutCampaignsInput = {
    create?: XOR<donationsCreateWithoutCampaignsInput, donationsUncheckedCreateWithoutCampaignsInput> | donationsCreateWithoutCampaignsInput[] | donationsUncheckedCreateWithoutCampaignsInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutCampaignsInput | donationsCreateOrConnectWithoutCampaignsInput[]
    createMany?: donationsCreateManyCampaignsInputEnvelope
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumcampaigns_languageFieldUpdateOperationsInput = {
    set?: $Enums.campaigns_language | null
  }

  export type usersUpdateOneWithoutCampaignsNestedInput = {
    create?: XOR<usersCreateWithoutCampaignsInput, usersUncheckedCreateWithoutCampaignsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCampaignsInput
    upsert?: usersUpsertWithoutCampaignsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutCampaignsInput, usersUpdateWithoutCampaignsInput>, usersUncheckedUpdateWithoutCampaignsInput>
  }

  export type donationsUpdateManyWithoutCampaignsNestedInput = {
    create?: XOR<donationsCreateWithoutCampaignsInput, donationsUncheckedCreateWithoutCampaignsInput> | donationsCreateWithoutCampaignsInput[] | donationsUncheckedCreateWithoutCampaignsInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutCampaignsInput | donationsCreateOrConnectWithoutCampaignsInput[]
    upsert?: donationsUpsertWithWhereUniqueWithoutCampaignsInput | donationsUpsertWithWhereUniqueWithoutCampaignsInput[]
    createMany?: donationsCreateManyCampaignsInputEnvelope
    set?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    disconnect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    delete?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    update?: donationsUpdateWithWhereUniqueWithoutCampaignsInput | donationsUpdateWithWhereUniqueWithoutCampaignsInput[]
    updateMany?: donationsUpdateManyWithWhereWithoutCampaignsInput | donationsUpdateManyWithWhereWithoutCampaignsInput[]
    deleteMany?: donationsScalarWhereInput | donationsScalarWhereInput[]
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type donationsUncheckedUpdateManyWithoutCampaignsNestedInput = {
    create?: XOR<donationsCreateWithoutCampaignsInput, donationsUncheckedCreateWithoutCampaignsInput> | donationsCreateWithoutCampaignsInput[] | donationsUncheckedCreateWithoutCampaignsInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutCampaignsInput | donationsCreateOrConnectWithoutCampaignsInput[]
    upsert?: donationsUpsertWithWhereUniqueWithoutCampaignsInput | donationsUpsertWithWhereUniqueWithoutCampaignsInput[]
    createMany?: donationsCreateManyCampaignsInputEnvelope
    set?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    disconnect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    delete?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    update?: donationsUpdateWithWhereUniqueWithoutCampaignsInput | donationsUpdateWithWhereUniqueWithoutCampaignsInput[]
    updateMany?: donationsUpdateManyWithWhereWithoutCampaignsInput | donationsUpdateManyWithWhereWithoutCampaignsInput[]
    deleteMany?: donationsScalarWhereInput | donationsScalarWhereInput[]
  }

  export type Enumcontact_messages_reasonFieldUpdateOperationsInput = {
    set?: $Enums.contact_messages_reason
  }

  export type NullableEnumcontact_messages_statusFieldUpdateOperationsInput = {
    set?: $Enums.contact_messages_status | null
  }

  export type usersCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<usersCreateWithoutDocumentsInput, usersUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutDocumentsInput
    connect?: usersWhereUniqueInput
  }

  export type NullableEnumdocuments_languageFieldUpdateOperationsInput = {
    set?: $Enums.documents_language | null
  }

  export type usersUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<usersCreateWithoutDocumentsInput, usersUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutDocumentsInput
    upsert?: usersUpsertWithoutDocumentsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutDocumentsInput, usersUpdateWithoutDocumentsInput>, usersUncheckedUpdateWithoutDocumentsInput>
  }

  export type donor_profilesCreateNestedOneWithoutDonationsInput = {
    create?: XOR<donor_profilesCreateWithoutDonationsInput, donor_profilesUncheckedCreateWithoutDonationsInput>
    connectOrCreate?: donor_profilesCreateOrConnectWithoutDonationsInput
    connect?: donor_profilesWhereUniqueInput
  }

  export type campaignsCreateNestedOneWithoutDonationsInput = {
    create?: XOR<campaignsCreateWithoutDonationsInput, campaignsUncheckedCreateWithoutDonationsInput>
    connectOrCreate?: campaignsCreateOrConnectWithoutDonationsInput
    connect?: campaignsWhereUniqueInput
  }

  export type Enumdonations_donation_typeFieldUpdateOperationsInput = {
    set?: $Enums.donations_donation_type
  }

  export type Enumdonations_payment_statusFieldUpdateOperationsInput = {
    set?: $Enums.donations_payment_status
  }

  export type donor_profilesUpdateOneRequiredWithoutDonationsNestedInput = {
    create?: XOR<donor_profilesCreateWithoutDonationsInput, donor_profilesUncheckedCreateWithoutDonationsInput>
    connectOrCreate?: donor_profilesCreateOrConnectWithoutDonationsInput
    upsert?: donor_profilesUpsertWithoutDonationsInput
    connect?: donor_profilesWhereUniqueInput
    update?: XOR<XOR<donor_profilesUpdateToOneWithWhereWithoutDonationsInput, donor_profilesUpdateWithoutDonationsInput>, donor_profilesUncheckedUpdateWithoutDonationsInput>
  }

  export type campaignsUpdateOneRequiredWithoutDonationsNestedInput = {
    create?: XOR<campaignsCreateWithoutDonationsInput, campaignsUncheckedCreateWithoutDonationsInput>
    connectOrCreate?: campaignsCreateOrConnectWithoutDonationsInput
    upsert?: campaignsUpsertWithoutDonationsInput
    connect?: campaignsWhereUniqueInput
    update?: XOR<XOR<campaignsUpdateToOneWithWhereWithoutDonationsInput, campaignsUpdateWithoutDonationsInput>, campaignsUncheckedUpdateWithoutDonationsInput>
  }

  export type donationsCreateNestedManyWithoutDonor_profilesInput = {
    create?: XOR<donationsCreateWithoutDonor_profilesInput, donationsUncheckedCreateWithoutDonor_profilesInput> | donationsCreateWithoutDonor_profilesInput[] | donationsUncheckedCreateWithoutDonor_profilesInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutDonor_profilesInput | donationsCreateOrConnectWithoutDonor_profilesInput[]
    createMany?: donationsCreateManyDonor_profilesInputEnvelope
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutDonor_profilesInput = {
    create?: XOR<usersCreateWithoutDonor_profilesInput, usersUncheckedCreateWithoutDonor_profilesInput>
    connectOrCreate?: usersCreateOrConnectWithoutDonor_profilesInput
    connect?: usersWhereUniqueInput
  }

  export type donationsUncheckedCreateNestedManyWithoutDonor_profilesInput = {
    create?: XOR<donationsCreateWithoutDonor_profilesInput, donationsUncheckedCreateWithoutDonor_profilesInput> | donationsCreateWithoutDonor_profilesInput[] | donationsUncheckedCreateWithoutDonor_profilesInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutDonor_profilesInput | donationsCreateOrConnectWithoutDonor_profilesInput[]
    createMany?: donationsCreateManyDonor_profilesInputEnvelope
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
  }

  export type NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput = {
    set?: $Enums.donor_profiles_donation_frequency | null
  }

  export type NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput = {
    set?: $Enums.donor_profiles_donation_tier | null
  }

  export type donationsUpdateManyWithoutDonor_profilesNestedInput = {
    create?: XOR<donationsCreateWithoutDonor_profilesInput, donationsUncheckedCreateWithoutDonor_profilesInput> | donationsCreateWithoutDonor_profilesInput[] | donationsUncheckedCreateWithoutDonor_profilesInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutDonor_profilesInput | donationsCreateOrConnectWithoutDonor_profilesInput[]
    upsert?: donationsUpsertWithWhereUniqueWithoutDonor_profilesInput | donationsUpsertWithWhereUniqueWithoutDonor_profilesInput[]
    createMany?: donationsCreateManyDonor_profilesInputEnvelope
    set?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    disconnect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    delete?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    update?: donationsUpdateWithWhereUniqueWithoutDonor_profilesInput | donationsUpdateWithWhereUniqueWithoutDonor_profilesInput[]
    updateMany?: donationsUpdateManyWithWhereWithoutDonor_profilesInput | donationsUpdateManyWithWhereWithoutDonor_profilesInput[]
    deleteMany?: donationsScalarWhereInput | donationsScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutDonor_profilesNestedInput = {
    create?: XOR<usersCreateWithoutDonor_profilesInput, usersUncheckedCreateWithoutDonor_profilesInput>
    connectOrCreate?: usersCreateOrConnectWithoutDonor_profilesInput
    upsert?: usersUpsertWithoutDonor_profilesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutDonor_profilesInput, usersUpdateWithoutDonor_profilesInput>, usersUncheckedUpdateWithoutDonor_profilesInput>
  }

  export type donationsUncheckedUpdateManyWithoutDonor_profilesNestedInput = {
    create?: XOR<donationsCreateWithoutDonor_profilesInput, donationsUncheckedCreateWithoutDonor_profilesInput> | donationsCreateWithoutDonor_profilesInput[] | donationsUncheckedCreateWithoutDonor_profilesInput[]
    connectOrCreate?: donationsCreateOrConnectWithoutDonor_profilesInput | donationsCreateOrConnectWithoutDonor_profilesInput[]
    upsert?: donationsUpsertWithWhereUniqueWithoutDonor_profilesInput | donationsUpsertWithWhereUniqueWithoutDonor_profilesInput[]
    createMany?: donationsCreateManyDonor_profilesInputEnvelope
    set?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    disconnect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    delete?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    connect?: donationsWhereUniqueInput | donationsWhereUniqueInput[]
    update?: donationsUpdateWithWhereUniqueWithoutDonor_profilesInput | donationsUpdateWithWhereUniqueWithoutDonor_profilesInput[]
    updateMany?: donationsUpdateManyWithWhereWithoutDonor_profilesInput | donationsUpdateManyWithWhereWithoutDonor_profilesInput[]
    deleteMany?: donationsScalarWhereInput | donationsScalarWhereInput[]
  }

  export type Enumemail_logs_statusFieldUpdateOperationsInput = {
    set?: $Enums.email_logs_status
  }

  export type eventsCreateNestedOneWithoutEvent_participantsInput = {
    create?: XOR<eventsCreateWithoutEvent_participantsInput, eventsUncheckedCreateWithoutEvent_participantsInput>
    connectOrCreate?: eventsCreateOrConnectWithoutEvent_participantsInput
    connect?: eventsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutEvent_participantsInput = {
    create?: XOR<usersCreateWithoutEvent_participantsInput, usersUncheckedCreateWithoutEvent_participantsInput>
    connectOrCreate?: usersCreateOrConnectWithoutEvent_participantsInput
    connect?: usersWhereUniqueInput
  }

  export type Enumevent_participants_roleFieldUpdateOperationsInput = {
    set?: $Enums.event_participants_role
  }

  export type NullableEnumevent_participants_statusFieldUpdateOperationsInput = {
    set?: $Enums.event_participants_status | null
  }

  export type eventsUpdateOneRequiredWithoutEvent_participantsNestedInput = {
    create?: XOR<eventsCreateWithoutEvent_participantsInput, eventsUncheckedCreateWithoutEvent_participantsInput>
    connectOrCreate?: eventsCreateOrConnectWithoutEvent_participantsInput
    upsert?: eventsUpsertWithoutEvent_participantsInput
    connect?: eventsWhereUniqueInput
    update?: XOR<XOR<eventsUpdateToOneWithWhereWithoutEvent_participantsInput, eventsUpdateWithoutEvent_participantsInput>, eventsUncheckedUpdateWithoutEvent_participantsInput>
  }

  export type usersUpdateOneRequiredWithoutEvent_participantsNestedInput = {
    create?: XOR<usersCreateWithoutEvent_participantsInput, usersUncheckedCreateWithoutEvent_participantsInput>
    connectOrCreate?: usersCreateOrConnectWithoutEvent_participantsInput
    upsert?: usersUpsertWithoutEvent_participantsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutEvent_participantsInput, usersUpdateWithoutEvent_participantsInput>, usersUncheckedUpdateWithoutEvent_participantsInput>
  }

  export type event_participantsCreateNestedManyWithoutEventsInput = {
    create?: XOR<event_participantsCreateWithoutEventsInput, event_participantsUncheckedCreateWithoutEventsInput> | event_participantsCreateWithoutEventsInput[] | event_participantsUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutEventsInput | event_participantsCreateOrConnectWithoutEventsInput[]
    createMany?: event_participantsCreateManyEventsInputEnvelope
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutEventsInput = {
    create?: XOR<usersCreateWithoutEventsInput, usersUncheckedCreateWithoutEventsInput>
    connectOrCreate?: usersCreateOrConnectWithoutEventsInput
    connect?: usersWhereUniqueInput
  }

  export type mediaCreateNestedManyWithoutEventsInput = {
    create?: XOR<mediaCreateWithoutEventsInput, mediaUncheckedCreateWithoutEventsInput> | mediaCreateWithoutEventsInput[] | mediaUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutEventsInput | mediaCreateOrConnectWithoutEventsInput[]
    createMany?: mediaCreateManyEventsInputEnvelope
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
  }

  export type event_participantsUncheckedCreateNestedManyWithoutEventsInput = {
    create?: XOR<event_participantsCreateWithoutEventsInput, event_participantsUncheckedCreateWithoutEventsInput> | event_participantsCreateWithoutEventsInput[] | event_participantsUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutEventsInput | event_participantsCreateOrConnectWithoutEventsInput[]
    createMany?: event_participantsCreateManyEventsInputEnvelope
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
  }

  export type mediaUncheckedCreateNestedManyWithoutEventsInput = {
    create?: XOR<mediaCreateWithoutEventsInput, mediaUncheckedCreateWithoutEventsInput> | mediaCreateWithoutEventsInput[] | mediaUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutEventsInput | mediaCreateOrConnectWithoutEventsInput[]
    createMany?: mediaCreateManyEventsInputEnvelope
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
  }

  export type NullableEnumevents_statusFieldUpdateOperationsInput = {
    set?: $Enums.events_status | null
  }

  export type NullableEnumevents_languageFieldUpdateOperationsInput = {
    set?: $Enums.events_language | null
  }

  export type event_participantsUpdateManyWithoutEventsNestedInput = {
    create?: XOR<event_participantsCreateWithoutEventsInput, event_participantsUncheckedCreateWithoutEventsInput> | event_participantsCreateWithoutEventsInput[] | event_participantsUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutEventsInput | event_participantsCreateOrConnectWithoutEventsInput[]
    upsert?: event_participantsUpsertWithWhereUniqueWithoutEventsInput | event_participantsUpsertWithWhereUniqueWithoutEventsInput[]
    createMany?: event_participantsCreateManyEventsInputEnvelope
    set?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    disconnect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    delete?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    update?: event_participantsUpdateWithWhereUniqueWithoutEventsInput | event_participantsUpdateWithWhereUniqueWithoutEventsInput[]
    updateMany?: event_participantsUpdateManyWithWhereWithoutEventsInput | event_participantsUpdateManyWithWhereWithoutEventsInput[]
    deleteMany?: event_participantsScalarWhereInput | event_participantsScalarWhereInput[]
  }

  export type usersUpdateOneWithoutEventsNestedInput = {
    create?: XOR<usersCreateWithoutEventsInput, usersUncheckedCreateWithoutEventsInput>
    connectOrCreate?: usersCreateOrConnectWithoutEventsInput
    upsert?: usersUpsertWithoutEventsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutEventsInput, usersUpdateWithoutEventsInput>, usersUncheckedUpdateWithoutEventsInput>
  }

  export type mediaUpdateManyWithoutEventsNestedInput = {
    create?: XOR<mediaCreateWithoutEventsInput, mediaUncheckedCreateWithoutEventsInput> | mediaCreateWithoutEventsInput[] | mediaUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutEventsInput | mediaCreateOrConnectWithoutEventsInput[]
    upsert?: mediaUpsertWithWhereUniqueWithoutEventsInput | mediaUpsertWithWhereUniqueWithoutEventsInput[]
    createMany?: mediaCreateManyEventsInputEnvelope
    set?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    disconnect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    delete?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    update?: mediaUpdateWithWhereUniqueWithoutEventsInput | mediaUpdateWithWhereUniqueWithoutEventsInput[]
    updateMany?: mediaUpdateManyWithWhereWithoutEventsInput | mediaUpdateManyWithWhereWithoutEventsInput[]
    deleteMany?: mediaScalarWhereInput | mediaScalarWhereInput[]
  }

  export type event_participantsUncheckedUpdateManyWithoutEventsNestedInput = {
    create?: XOR<event_participantsCreateWithoutEventsInput, event_participantsUncheckedCreateWithoutEventsInput> | event_participantsCreateWithoutEventsInput[] | event_participantsUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutEventsInput | event_participantsCreateOrConnectWithoutEventsInput[]
    upsert?: event_participantsUpsertWithWhereUniqueWithoutEventsInput | event_participantsUpsertWithWhereUniqueWithoutEventsInput[]
    createMany?: event_participantsCreateManyEventsInputEnvelope
    set?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    disconnect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    delete?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    update?: event_participantsUpdateWithWhereUniqueWithoutEventsInput | event_participantsUpdateWithWhereUniqueWithoutEventsInput[]
    updateMany?: event_participantsUpdateManyWithWhereWithoutEventsInput | event_participantsUpdateManyWithWhereWithoutEventsInput[]
    deleteMany?: event_participantsScalarWhereInput | event_participantsScalarWhereInput[]
  }

  export type mediaUncheckedUpdateManyWithoutEventsNestedInput = {
    create?: XOR<mediaCreateWithoutEventsInput, mediaUncheckedCreateWithoutEventsInput> | mediaCreateWithoutEventsInput[] | mediaUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutEventsInput | mediaCreateOrConnectWithoutEventsInput[]
    upsert?: mediaUpsertWithWhereUniqueWithoutEventsInput | mediaUpsertWithWhereUniqueWithoutEventsInput[]
    createMany?: mediaCreateManyEventsInputEnvelope
    set?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    disconnect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    delete?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    update?: mediaUpdateWithWhereUniqueWithoutEventsInput | mediaUpdateWithWhereUniqueWithoutEventsInput[]
    updateMany?: mediaUpdateManyWithWhereWithoutEventsInput | mediaUpdateManyWithWhereWithoutEventsInput[]
    deleteMany?: mediaScalarWhereInput | mediaScalarWhereInput[]
  }

  export type NullableEnumfaqs_languageFieldUpdateOperationsInput = {
    set?: $Enums.faqs_language | null
  }

  export type eventsCreateNestedOneWithoutMediaInput = {
    create?: XOR<eventsCreateWithoutMediaInput, eventsUncheckedCreateWithoutMediaInput>
    connectOrCreate?: eventsCreateOrConnectWithoutMediaInput
    connect?: eventsWhereUniqueInput
  }

  export type programsCreateNestedOneWithoutMediaInput = {
    create?: XOR<programsCreateWithoutMediaInput, programsUncheckedCreateWithoutMediaInput>
    connectOrCreate?: programsCreateOrConnectWithoutMediaInput
    connect?: programsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutMediaInput = {
    create?: XOR<usersCreateWithoutMediaInput, usersUncheckedCreateWithoutMediaInput>
    connectOrCreate?: usersCreateOrConnectWithoutMediaInput
    connect?: usersWhereUniqueInput
  }

  export type Enummedia_media_typeFieldUpdateOperationsInput = {
    set?: $Enums.media_media_type
  }

  export type NullableEnummedia_languageFieldUpdateOperationsInput = {
    set?: $Enums.media_language | null
  }

  export type eventsUpdateOneWithoutMediaNestedInput = {
    create?: XOR<eventsCreateWithoutMediaInput, eventsUncheckedCreateWithoutMediaInput>
    connectOrCreate?: eventsCreateOrConnectWithoutMediaInput
    upsert?: eventsUpsertWithoutMediaInput
    disconnect?: eventsWhereInput | boolean
    delete?: eventsWhereInput | boolean
    connect?: eventsWhereUniqueInput
    update?: XOR<XOR<eventsUpdateToOneWithWhereWithoutMediaInput, eventsUpdateWithoutMediaInput>, eventsUncheckedUpdateWithoutMediaInput>
  }

  export type programsUpdateOneWithoutMediaNestedInput = {
    create?: XOR<programsCreateWithoutMediaInput, programsUncheckedCreateWithoutMediaInput>
    connectOrCreate?: programsCreateOrConnectWithoutMediaInput
    upsert?: programsUpsertWithoutMediaInput
    disconnect?: programsWhereInput | boolean
    delete?: programsWhereInput | boolean
    connect?: programsWhereUniqueInput
    update?: XOR<XOR<programsUpdateToOneWithWhereWithoutMediaInput, programsUpdateWithoutMediaInput>, programsUncheckedUpdateWithoutMediaInput>
  }

  export type usersUpdateOneWithoutMediaNestedInput = {
    create?: XOR<usersCreateWithoutMediaInput, usersUncheckedCreateWithoutMediaInput>
    connectOrCreate?: usersCreateOrConnectWithoutMediaInput
    upsert?: usersUpsertWithoutMediaInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMediaInput, usersUpdateWithoutMediaInput>, usersUncheckedUpdateWithoutMediaInput>
  }

  export type NullableEnumnewsletter_subscribers_language_preferenceFieldUpdateOperationsInput = {
    set?: $Enums.newsletter_subscribers_language_preference | null
  }

  export type Enumpartners_typeFieldUpdateOperationsInput = {
    set?: $Enums.partners_type
  }

  export type NullableEnumpartners_languageFieldUpdateOperationsInput = {
    set?: $Enums.partners_language | null
  }

  export type usersCreateNestedOneWithoutPostsInput = {
    create?: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPostsInput
    connect?: usersWhereUniqueInput
  }

  export type Enumposts_post_typeFieldUpdateOperationsInput = {
    set?: $Enums.posts_post_type
  }

  export type NullableEnumposts_languageFieldUpdateOperationsInput = {
    set?: $Enums.posts_language | null
  }

  export type usersUpdateOneWithoutPostsNestedInput = {
    create?: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPostsInput
    upsert?: usersUpsertWithoutPostsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPostsInput, usersUpdateWithoutPostsInput>, usersUncheckedUpdateWithoutPostsInput>
  }

  export type mediaCreateNestedManyWithoutProgramsInput = {
    create?: XOR<mediaCreateWithoutProgramsInput, mediaUncheckedCreateWithoutProgramsInput> | mediaCreateWithoutProgramsInput[] | mediaUncheckedCreateWithoutProgramsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutProgramsInput | mediaCreateOrConnectWithoutProgramsInput[]
    createMany?: mediaCreateManyProgramsInputEnvelope
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutProgramsInput = {
    create?: XOR<usersCreateWithoutProgramsInput, usersUncheckedCreateWithoutProgramsInput>
    connectOrCreate?: usersCreateOrConnectWithoutProgramsInput
    connect?: usersWhereUniqueInput
  }

  export type mediaUncheckedCreateNestedManyWithoutProgramsInput = {
    create?: XOR<mediaCreateWithoutProgramsInput, mediaUncheckedCreateWithoutProgramsInput> | mediaCreateWithoutProgramsInput[] | mediaUncheckedCreateWithoutProgramsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutProgramsInput | mediaCreateOrConnectWithoutProgramsInput[]
    createMany?: mediaCreateManyProgramsInputEnvelope
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
  }

  export type NullableEnumprograms_categoryFieldUpdateOperationsInput = {
    set?: $Enums.programs_category | null
  }

  export type NullableEnumprograms_languageFieldUpdateOperationsInput = {
    set?: $Enums.programs_language | null
  }

  export type mediaUpdateManyWithoutProgramsNestedInput = {
    create?: XOR<mediaCreateWithoutProgramsInput, mediaUncheckedCreateWithoutProgramsInput> | mediaCreateWithoutProgramsInput[] | mediaUncheckedCreateWithoutProgramsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutProgramsInput | mediaCreateOrConnectWithoutProgramsInput[]
    upsert?: mediaUpsertWithWhereUniqueWithoutProgramsInput | mediaUpsertWithWhereUniqueWithoutProgramsInput[]
    createMany?: mediaCreateManyProgramsInputEnvelope
    set?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    disconnect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    delete?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    update?: mediaUpdateWithWhereUniqueWithoutProgramsInput | mediaUpdateWithWhereUniqueWithoutProgramsInput[]
    updateMany?: mediaUpdateManyWithWhereWithoutProgramsInput | mediaUpdateManyWithWhereWithoutProgramsInput[]
    deleteMany?: mediaScalarWhereInput | mediaScalarWhereInput[]
  }

  export type usersUpdateOneWithoutProgramsNestedInput = {
    create?: XOR<usersCreateWithoutProgramsInput, usersUncheckedCreateWithoutProgramsInput>
    connectOrCreate?: usersCreateOrConnectWithoutProgramsInput
    upsert?: usersUpsertWithoutProgramsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutProgramsInput, usersUpdateWithoutProgramsInput>, usersUncheckedUpdateWithoutProgramsInput>
  }

  export type mediaUncheckedUpdateManyWithoutProgramsNestedInput = {
    create?: XOR<mediaCreateWithoutProgramsInput, mediaUncheckedCreateWithoutProgramsInput> | mediaCreateWithoutProgramsInput[] | mediaUncheckedCreateWithoutProgramsInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutProgramsInput | mediaCreateOrConnectWithoutProgramsInput[]
    upsert?: mediaUpsertWithWhereUniqueWithoutProgramsInput | mediaUpsertWithWhereUniqueWithoutProgramsInput[]
    createMany?: mediaCreateManyProgramsInputEnvelope
    set?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    disconnect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    delete?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    update?: mediaUpdateWithWhereUniqueWithoutProgramsInput | mediaUpdateWithWhereUniqueWithoutProgramsInput[]
    updateMany?: mediaUpdateManyWithWhereWithoutProgramsInput | mediaUpdateManyWithWhereWithoutProgramsInput[]
    deleteMany?: mediaScalarWhereInput | mediaScalarWhereInput[]
  }

  export type Enumrole_permissions_roleFieldUpdateOperationsInput = {
    set?: $Enums.role_permissions_role
  }

  export type usersCreateNestedOneWithoutSite_interactionsInput = {
    create?: XOR<usersCreateWithoutSite_interactionsInput, usersUncheckedCreateWithoutSite_interactionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSite_interactionsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutSite_interactionsNestedInput = {
    create?: XOR<usersCreateWithoutSite_interactionsInput, usersUncheckedCreateWithoutSite_interactionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSite_interactionsInput
    upsert?: usersUpsertWithoutSite_interactionsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSite_interactionsInput, usersUpdateWithoutSite_interactionsInput>, usersUncheckedUpdateWithoutSite_interactionsInput>
  }

  export type volunteer_skillsCreateNestedManyWithoutSkillsInput = {
    create?: XOR<volunteer_skillsCreateWithoutSkillsInput, volunteer_skillsUncheckedCreateWithoutSkillsInput> | volunteer_skillsCreateWithoutSkillsInput[] | volunteer_skillsUncheckedCreateWithoutSkillsInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutSkillsInput | volunteer_skillsCreateOrConnectWithoutSkillsInput[]
    createMany?: volunteer_skillsCreateManySkillsInputEnvelope
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
  }

  export type volunteer_skillsUncheckedCreateNestedManyWithoutSkillsInput = {
    create?: XOR<volunteer_skillsCreateWithoutSkillsInput, volunteer_skillsUncheckedCreateWithoutSkillsInput> | volunteer_skillsCreateWithoutSkillsInput[] | volunteer_skillsUncheckedCreateWithoutSkillsInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutSkillsInput | volunteer_skillsCreateOrConnectWithoutSkillsInput[]
    createMany?: volunteer_skillsCreateManySkillsInputEnvelope
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
  }

  export type volunteer_skillsUpdateManyWithoutSkillsNestedInput = {
    create?: XOR<volunteer_skillsCreateWithoutSkillsInput, volunteer_skillsUncheckedCreateWithoutSkillsInput> | volunteer_skillsCreateWithoutSkillsInput[] | volunteer_skillsUncheckedCreateWithoutSkillsInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutSkillsInput | volunteer_skillsCreateOrConnectWithoutSkillsInput[]
    upsert?: volunteer_skillsUpsertWithWhereUniqueWithoutSkillsInput | volunteer_skillsUpsertWithWhereUniqueWithoutSkillsInput[]
    createMany?: volunteer_skillsCreateManySkillsInputEnvelope
    set?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    disconnect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    delete?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    update?: volunteer_skillsUpdateWithWhereUniqueWithoutSkillsInput | volunteer_skillsUpdateWithWhereUniqueWithoutSkillsInput[]
    updateMany?: volunteer_skillsUpdateManyWithWhereWithoutSkillsInput | volunteer_skillsUpdateManyWithWhereWithoutSkillsInput[]
    deleteMany?: volunteer_skillsScalarWhereInput | volunteer_skillsScalarWhereInput[]
  }

  export type volunteer_skillsUncheckedUpdateManyWithoutSkillsNestedInput = {
    create?: XOR<volunteer_skillsCreateWithoutSkillsInput, volunteer_skillsUncheckedCreateWithoutSkillsInput> | volunteer_skillsCreateWithoutSkillsInput[] | volunteer_skillsUncheckedCreateWithoutSkillsInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutSkillsInput | volunteer_skillsCreateOrConnectWithoutSkillsInput[]
    upsert?: volunteer_skillsUpsertWithWhereUniqueWithoutSkillsInput | volunteer_skillsUpsertWithWhereUniqueWithoutSkillsInput[]
    createMany?: volunteer_skillsCreateManySkillsInputEnvelope
    set?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    disconnect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    delete?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    update?: volunteer_skillsUpdateWithWhereUniqueWithoutSkillsInput | volunteer_skillsUpdateWithWhereUniqueWithoutSkillsInput[]
    updateMany?: volunteer_skillsUpdateManyWithWhereWithoutSkillsInput | volunteer_skillsUpdateManyWithWhereWithoutSkillsInput[]
    deleteMany?: volunteer_skillsScalarWhereInput | volunteer_skillsScalarWhereInput[]
  }

  export type Enumtestimonials_typeFieldUpdateOperationsInput = {
    set?: $Enums.testimonials_type
  }

  export type NullableEnumtestimonials_languageFieldUpdateOperationsInput = {
    set?: $Enums.testimonials_language | null
  }

  export type campaignsCreateNestedManyWithoutUsersInput = {
    create?: XOR<campaignsCreateWithoutUsersInput, campaignsUncheckedCreateWithoutUsersInput> | campaignsCreateWithoutUsersInput[] | campaignsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: campaignsCreateOrConnectWithoutUsersInput | campaignsCreateOrConnectWithoutUsersInput[]
    createMany?: campaignsCreateManyUsersInputEnvelope
    connect?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
  }

  export type documentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<documentsCreateWithoutUsersInput, documentsUncheckedCreateWithoutUsersInput> | documentsCreateWithoutUsersInput[] | documentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutUsersInput | documentsCreateOrConnectWithoutUsersInput[]
    createMany?: documentsCreateManyUsersInputEnvelope
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
  }

  export type donor_profilesCreateNestedOneWithoutUsersInput = {
    create?: XOR<donor_profilesCreateWithoutUsersInput, donor_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: donor_profilesCreateOrConnectWithoutUsersInput
    connect?: donor_profilesWhereUniqueInput
  }

  export type event_participantsCreateNestedManyWithoutUsersInput = {
    create?: XOR<event_participantsCreateWithoutUsersInput, event_participantsUncheckedCreateWithoutUsersInput> | event_participantsCreateWithoutUsersInput[] | event_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutUsersInput | event_participantsCreateOrConnectWithoutUsersInput[]
    createMany?: event_participantsCreateManyUsersInputEnvelope
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
  }

  export type eventsCreateNestedManyWithoutUsersInput = {
    create?: XOR<eventsCreateWithoutUsersInput, eventsUncheckedCreateWithoutUsersInput> | eventsCreateWithoutUsersInput[] | eventsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutUsersInput | eventsCreateOrConnectWithoutUsersInput[]
    createMany?: eventsCreateManyUsersInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type mediaCreateNestedManyWithoutUsersInput = {
    create?: XOR<mediaCreateWithoutUsersInput, mediaUncheckedCreateWithoutUsersInput> | mediaCreateWithoutUsersInput[] | mediaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutUsersInput | mediaCreateOrConnectWithoutUsersInput[]
    createMany?: mediaCreateManyUsersInputEnvelope
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
  }

  export type postsCreateNestedManyWithoutUsersInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
  }

  export type programsCreateNestedManyWithoutUsersInput = {
    create?: XOR<programsCreateWithoutUsersInput, programsUncheckedCreateWithoutUsersInput> | programsCreateWithoutUsersInput[] | programsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: programsCreateOrConnectWithoutUsersInput | programsCreateOrConnectWithoutUsersInput[]
    createMany?: programsCreateManyUsersInputEnvelope
    connect?: programsWhereUniqueInput | programsWhereUniqueInput[]
  }

  export type site_interactionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<site_interactionsCreateWithoutUsersInput, site_interactionsUncheckedCreateWithoutUsersInput> | site_interactionsCreateWithoutUsersInput[] | site_interactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: site_interactionsCreateOrConnectWithoutUsersInput | site_interactionsCreateOrConnectWithoutUsersInput[]
    createMany?: site_interactionsCreateManyUsersInputEnvelope
    connect?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
  }

  export type volunteer_profilesCreateNestedOneWithoutUsersInput = {
    create?: XOR<volunteer_profilesCreateWithoutUsersInput, volunteer_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: volunteer_profilesCreateOrConnectWithoutUsersInput
    connect?: volunteer_profilesWhereUniqueInput
  }

  export type campaignsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<campaignsCreateWithoutUsersInput, campaignsUncheckedCreateWithoutUsersInput> | campaignsCreateWithoutUsersInput[] | campaignsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: campaignsCreateOrConnectWithoutUsersInput | campaignsCreateOrConnectWithoutUsersInput[]
    createMany?: campaignsCreateManyUsersInputEnvelope
    connect?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
  }

  export type documentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<documentsCreateWithoutUsersInput, documentsUncheckedCreateWithoutUsersInput> | documentsCreateWithoutUsersInput[] | documentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutUsersInput | documentsCreateOrConnectWithoutUsersInput[]
    createMany?: documentsCreateManyUsersInputEnvelope
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
  }

  export type donor_profilesUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<donor_profilesCreateWithoutUsersInput, donor_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: donor_profilesCreateOrConnectWithoutUsersInput
    connect?: donor_profilesWhereUniqueInput
  }

  export type event_participantsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<event_participantsCreateWithoutUsersInput, event_participantsUncheckedCreateWithoutUsersInput> | event_participantsCreateWithoutUsersInput[] | event_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutUsersInput | event_participantsCreateOrConnectWithoutUsersInput[]
    createMany?: event_participantsCreateManyUsersInputEnvelope
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
  }

  export type eventsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<eventsCreateWithoutUsersInput, eventsUncheckedCreateWithoutUsersInput> | eventsCreateWithoutUsersInput[] | eventsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutUsersInput | eventsCreateOrConnectWithoutUsersInput[]
    createMany?: eventsCreateManyUsersInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type mediaUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<mediaCreateWithoutUsersInput, mediaUncheckedCreateWithoutUsersInput> | mediaCreateWithoutUsersInput[] | mediaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutUsersInput | mediaCreateOrConnectWithoutUsersInput[]
    createMany?: mediaCreateManyUsersInputEnvelope
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
  }

  export type postsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
  }

  export type programsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<programsCreateWithoutUsersInput, programsUncheckedCreateWithoutUsersInput> | programsCreateWithoutUsersInput[] | programsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: programsCreateOrConnectWithoutUsersInput | programsCreateOrConnectWithoutUsersInput[]
    createMany?: programsCreateManyUsersInputEnvelope
    connect?: programsWhereUniqueInput | programsWhereUniqueInput[]
  }

  export type site_interactionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<site_interactionsCreateWithoutUsersInput, site_interactionsUncheckedCreateWithoutUsersInput> | site_interactionsCreateWithoutUsersInput[] | site_interactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: site_interactionsCreateOrConnectWithoutUsersInput | site_interactionsCreateOrConnectWithoutUsersInput[]
    createMany?: site_interactionsCreateManyUsersInputEnvelope
    connect?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
  }

  export type volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<volunteer_profilesCreateWithoutUsersInput, volunteer_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: volunteer_profilesCreateOrConnectWithoutUsersInput
    connect?: volunteer_profilesWhereUniqueInput
  }

  export type Enumusers_roleFieldUpdateOperationsInput = {
    set?: $Enums.users_role
  }

  export type NullableEnumusers_language_preferenceFieldUpdateOperationsInput = {
    set?: $Enums.users_language_preference | null
  }

  export type campaignsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<campaignsCreateWithoutUsersInput, campaignsUncheckedCreateWithoutUsersInput> | campaignsCreateWithoutUsersInput[] | campaignsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: campaignsCreateOrConnectWithoutUsersInput | campaignsCreateOrConnectWithoutUsersInput[]
    upsert?: campaignsUpsertWithWhereUniqueWithoutUsersInput | campaignsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: campaignsCreateManyUsersInputEnvelope
    set?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    disconnect?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    delete?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    connect?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    update?: campaignsUpdateWithWhereUniqueWithoutUsersInput | campaignsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: campaignsUpdateManyWithWhereWithoutUsersInput | campaignsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: campaignsScalarWhereInput | campaignsScalarWhereInput[]
  }

  export type documentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<documentsCreateWithoutUsersInput, documentsUncheckedCreateWithoutUsersInput> | documentsCreateWithoutUsersInput[] | documentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutUsersInput | documentsCreateOrConnectWithoutUsersInput[]
    upsert?: documentsUpsertWithWhereUniqueWithoutUsersInput | documentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: documentsCreateManyUsersInputEnvelope
    set?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    disconnect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    delete?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    update?: documentsUpdateWithWhereUniqueWithoutUsersInput | documentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: documentsUpdateManyWithWhereWithoutUsersInput | documentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: documentsScalarWhereInput | documentsScalarWhereInput[]
  }

  export type donor_profilesUpdateOneWithoutUsersNestedInput = {
    create?: XOR<donor_profilesCreateWithoutUsersInput, donor_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: donor_profilesCreateOrConnectWithoutUsersInput
    upsert?: donor_profilesUpsertWithoutUsersInput
    disconnect?: donor_profilesWhereInput | boolean
    delete?: donor_profilesWhereInput | boolean
    connect?: donor_profilesWhereUniqueInput
    update?: XOR<XOR<donor_profilesUpdateToOneWithWhereWithoutUsersInput, donor_profilesUpdateWithoutUsersInput>, donor_profilesUncheckedUpdateWithoutUsersInput>
  }

  export type event_participantsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<event_participantsCreateWithoutUsersInput, event_participantsUncheckedCreateWithoutUsersInput> | event_participantsCreateWithoutUsersInput[] | event_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutUsersInput | event_participantsCreateOrConnectWithoutUsersInput[]
    upsert?: event_participantsUpsertWithWhereUniqueWithoutUsersInput | event_participantsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: event_participantsCreateManyUsersInputEnvelope
    set?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    disconnect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    delete?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    update?: event_participantsUpdateWithWhereUniqueWithoutUsersInput | event_participantsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: event_participantsUpdateManyWithWhereWithoutUsersInput | event_participantsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: event_participantsScalarWhereInput | event_participantsScalarWhereInput[]
  }

  export type eventsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<eventsCreateWithoutUsersInput, eventsUncheckedCreateWithoutUsersInput> | eventsCreateWithoutUsersInput[] | eventsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutUsersInput | eventsCreateOrConnectWithoutUsersInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutUsersInput | eventsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: eventsCreateManyUsersInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutUsersInput | eventsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutUsersInput | eventsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type mediaUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mediaCreateWithoutUsersInput, mediaUncheckedCreateWithoutUsersInput> | mediaCreateWithoutUsersInput[] | mediaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutUsersInput | mediaCreateOrConnectWithoutUsersInput[]
    upsert?: mediaUpsertWithWhereUniqueWithoutUsersInput | mediaUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mediaCreateManyUsersInputEnvelope
    set?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    disconnect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    delete?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    update?: mediaUpdateWithWhereUniqueWithoutUsersInput | mediaUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mediaUpdateManyWithWhereWithoutUsersInput | mediaUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mediaScalarWhereInput | mediaScalarWhereInput[]
  }

  export type postsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    upsert?: postsUpsertWithWhereUniqueWithoutUsersInput | postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    set?: postsWhereUniqueInput | postsWhereUniqueInput[]
    disconnect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    delete?: postsWhereUniqueInput | postsWhereUniqueInput[]
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    update?: postsUpdateWithWhereUniqueWithoutUsersInput | postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: postsUpdateManyWithWhereWithoutUsersInput | postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: postsScalarWhereInput | postsScalarWhereInput[]
  }

  export type programsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<programsCreateWithoutUsersInput, programsUncheckedCreateWithoutUsersInput> | programsCreateWithoutUsersInput[] | programsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: programsCreateOrConnectWithoutUsersInput | programsCreateOrConnectWithoutUsersInput[]
    upsert?: programsUpsertWithWhereUniqueWithoutUsersInput | programsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: programsCreateManyUsersInputEnvelope
    set?: programsWhereUniqueInput | programsWhereUniqueInput[]
    disconnect?: programsWhereUniqueInput | programsWhereUniqueInput[]
    delete?: programsWhereUniqueInput | programsWhereUniqueInput[]
    connect?: programsWhereUniqueInput | programsWhereUniqueInput[]
    update?: programsUpdateWithWhereUniqueWithoutUsersInput | programsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: programsUpdateManyWithWhereWithoutUsersInput | programsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: programsScalarWhereInput | programsScalarWhereInput[]
  }

  export type site_interactionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<site_interactionsCreateWithoutUsersInput, site_interactionsUncheckedCreateWithoutUsersInput> | site_interactionsCreateWithoutUsersInput[] | site_interactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: site_interactionsCreateOrConnectWithoutUsersInput | site_interactionsCreateOrConnectWithoutUsersInput[]
    upsert?: site_interactionsUpsertWithWhereUniqueWithoutUsersInput | site_interactionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: site_interactionsCreateManyUsersInputEnvelope
    set?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    disconnect?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    delete?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    connect?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    update?: site_interactionsUpdateWithWhereUniqueWithoutUsersInput | site_interactionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: site_interactionsUpdateManyWithWhereWithoutUsersInput | site_interactionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: site_interactionsScalarWhereInput | site_interactionsScalarWhereInput[]
  }

  export type volunteer_profilesUpdateOneWithoutUsersNestedInput = {
    create?: XOR<volunteer_profilesCreateWithoutUsersInput, volunteer_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: volunteer_profilesCreateOrConnectWithoutUsersInput
    upsert?: volunteer_profilesUpsertWithoutUsersInput
    disconnect?: volunteer_profilesWhereInput | boolean
    delete?: volunteer_profilesWhereInput | boolean
    connect?: volunteer_profilesWhereUniqueInput
    update?: XOR<XOR<volunteer_profilesUpdateToOneWithWhereWithoutUsersInput, volunteer_profilesUpdateWithoutUsersInput>, volunteer_profilesUncheckedUpdateWithoutUsersInput>
  }

  export type campaignsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<campaignsCreateWithoutUsersInput, campaignsUncheckedCreateWithoutUsersInput> | campaignsCreateWithoutUsersInput[] | campaignsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: campaignsCreateOrConnectWithoutUsersInput | campaignsCreateOrConnectWithoutUsersInput[]
    upsert?: campaignsUpsertWithWhereUniqueWithoutUsersInput | campaignsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: campaignsCreateManyUsersInputEnvelope
    set?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    disconnect?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    delete?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    connect?: campaignsWhereUniqueInput | campaignsWhereUniqueInput[]
    update?: campaignsUpdateWithWhereUniqueWithoutUsersInput | campaignsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: campaignsUpdateManyWithWhereWithoutUsersInput | campaignsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: campaignsScalarWhereInput | campaignsScalarWhereInput[]
  }

  export type documentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<documentsCreateWithoutUsersInput, documentsUncheckedCreateWithoutUsersInput> | documentsCreateWithoutUsersInput[] | documentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutUsersInput | documentsCreateOrConnectWithoutUsersInput[]
    upsert?: documentsUpsertWithWhereUniqueWithoutUsersInput | documentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: documentsCreateManyUsersInputEnvelope
    set?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    disconnect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    delete?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    update?: documentsUpdateWithWhereUniqueWithoutUsersInput | documentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: documentsUpdateManyWithWhereWithoutUsersInput | documentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: documentsScalarWhereInput | documentsScalarWhereInput[]
  }

  export type donor_profilesUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<donor_profilesCreateWithoutUsersInput, donor_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: donor_profilesCreateOrConnectWithoutUsersInput
    upsert?: donor_profilesUpsertWithoutUsersInput
    disconnect?: donor_profilesWhereInput | boolean
    delete?: donor_profilesWhereInput | boolean
    connect?: donor_profilesWhereUniqueInput
    update?: XOR<XOR<donor_profilesUpdateToOneWithWhereWithoutUsersInput, donor_profilesUpdateWithoutUsersInput>, donor_profilesUncheckedUpdateWithoutUsersInput>
  }

  export type event_participantsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<event_participantsCreateWithoutUsersInput, event_participantsUncheckedCreateWithoutUsersInput> | event_participantsCreateWithoutUsersInput[] | event_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: event_participantsCreateOrConnectWithoutUsersInput | event_participantsCreateOrConnectWithoutUsersInput[]
    upsert?: event_participantsUpsertWithWhereUniqueWithoutUsersInput | event_participantsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: event_participantsCreateManyUsersInputEnvelope
    set?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    disconnect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    delete?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    connect?: event_participantsWhereUniqueInput | event_participantsWhereUniqueInput[]
    update?: event_participantsUpdateWithWhereUniqueWithoutUsersInput | event_participantsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: event_participantsUpdateManyWithWhereWithoutUsersInput | event_participantsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: event_participantsScalarWhereInput | event_participantsScalarWhereInput[]
  }

  export type eventsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<eventsCreateWithoutUsersInput, eventsUncheckedCreateWithoutUsersInput> | eventsCreateWithoutUsersInput[] | eventsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutUsersInput | eventsCreateOrConnectWithoutUsersInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutUsersInput | eventsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: eventsCreateManyUsersInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutUsersInput | eventsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutUsersInput | eventsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type mediaUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mediaCreateWithoutUsersInput, mediaUncheckedCreateWithoutUsersInput> | mediaCreateWithoutUsersInput[] | mediaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mediaCreateOrConnectWithoutUsersInput | mediaCreateOrConnectWithoutUsersInput[]
    upsert?: mediaUpsertWithWhereUniqueWithoutUsersInput | mediaUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mediaCreateManyUsersInputEnvelope
    set?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    disconnect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    delete?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    connect?: mediaWhereUniqueInput | mediaWhereUniqueInput[]
    update?: mediaUpdateWithWhereUniqueWithoutUsersInput | mediaUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mediaUpdateManyWithWhereWithoutUsersInput | mediaUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mediaScalarWhereInput | mediaScalarWhereInput[]
  }

  export type postsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput> | postsCreateWithoutUsersInput[] | postsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUsersInput | postsCreateOrConnectWithoutUsersInput[]
    upsert?: postsUpsertWithWhereUniqueWithoutUsersInput | postsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: postsCreateManyUsersInputEnvelope
    set?: postsWhereUniqueInput | postsWhereUniqueInput[]
    disconnect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    delete?: postsWhereUniqueInput | postsWhereUniqueInput[]
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    update?: postsUpdateWithWhereUniqueWithoutUsersInput | postsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: postsUpdateManyWithWhereWithoutUsersInput | postsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: postsScalarWhereInput | postsScalarWhereInput[]
  }

  export type programsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<programsCreateWithoutUsersInput, programsUncheckedCreateWithoutUsersInput> | programsCreateWithoutUsersInput[] | programsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: programsCreateOrConnectWithoutUsersInput | programsCreateOrConnectWithoutUsersInput[]
    upsert?: programsUpsertWithWhereUniqueWithoutUsersInput | programsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: programsCreateManyUsersInputEnvelope
    set?: programsWhereUniqueInput | programsWhereUniqueInput[]
    disconnect?: programsWhereUniqueInput | programsWhereUniqueInput[]
    delete?: programsWhereUniqueInput | programsWhereUniqueInput[]
    connect?: programsWhereUniqueInput | programsWhereUniqueInput[]
    update?: programsUpdateWithWhereUniqueWithoutUsersInput | programsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: programsUpdateManyWithWhereWithoutUsersInput | programsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: programsScalarWhereInput | programsScalarWhereInput[]
  }

  export type site_interactionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<site_interactionsCreateWithoutUsersInput, site_interactionsUncheckedCreateWithoutUsersInput> | site_interactionsCreateWithoutUsersInput[] | site_interactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: site_interactionsCreateOrConnectWithoutUsersInput | site_interactionsCreateOrConnectWithoutUsersInput[]
    upsert?: site_interactionsUpsertWithWhereUniqueWithoutUsersInput | site_interactionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: site_interactionsCreateManyUsersInputEnvelope
    set?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    disconnect?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    delete?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    connect?: site_interactionsWhereUniqueInput | site_interactionsWhereUniqueInput[]
    update?: site_interactionsUpdateWithWhereUniqueWithoutUsersInput | site_interactionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: site_interactionsUpdateManyWithWhereWithoutUsersInput | site_interactionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: site_interactionsScalarWhereInput | site_interactionsScalarWhereInput[]
  }

  export type volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<volunteer_profilesCreateWithoutUsersInput, volunteer_profilesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: volunteer_profilesCreateOrConnectWithoutUsersInput
    upsert?: volunteer_profilesUpsertWithoutUsersInput
    disconnect?: volunteer_profilesWhereInput | boolean
    delete?: volunteer_profilesWhereInput | boolean
    connect?: volunteer_profilesWhereUniqueInput
    update?: XOR<XOR<volunteer_profilesUpdateToOneWithWhereWithoutUsersInput, volunteer_profilesUpdateWithoutUsersInput>, volunteer_profilesUncheckedUpdateWithoutUsersInput>
  }

  export type usersCreateNestedOneWithoutVolunteer_profilesInput = {
    create?: XOR<usersCreateWithoutVolunteer_profilesInput, usersUncheckedCreateWithoutVolunteer_profilesInput>
    connectOrCreate?: usersCreateOrConnectWithoutVolunteer_profilesInput
    connect?: usersWhereUniqueInput
  }

  export type volunteer_skillsCreateNestedManyWithoutVolunteer_profilesInput = {
    create?: XOR<volunteer_skillsCreateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput> | volunteer_skillsCreateWithoutVolunteer_profilesInput[] | volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput | volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput[]
    createMany?: volunteer_skillsCreateManyVolunteer_profilesInputEnvelope
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
  }

  export type volunteer_skillsUncheckedCreateNestedManyWithoutVolunteer_profilesInput = {
    create?: XOR<volunteer_skillsCreateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput> | volunteer_skillsCreateWithoutVolunteer_profilesInput[] | volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput | volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput[]
    createMany?: volunteer_skillsCreateManyVolunteer_profilesInputEnvelope
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
  }

  export type NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput = {
    set?: $Enums.volunteer_profiles_background_check_status | null
  }

  export type usersUpdateOneRequiredWithoutVolunteer_profilesNestedInput = {
    create?: XOR<usersCreateWithoutVolunteer_profilesInput, usersUncheckedCreateWithoutVolunteer_profilesInput>
    connectOrCreate?: usersCreateOrConnectWithoutVolunteer_profilesInput
    upsert?: usersUpsertWithoutVolunteer_profilesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutVolunteer_profilesInput, usersUpdateWithoutVolunteer_profilesInput>, usersUncheckedUpdateWithoutVolunteer_profilesInput>
  }

  export type volunteer_skillsUpdateManyWithoutVolunteer_profilesNestedInput = {
    create?: XOR<volunteer_skillsCreateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput> | volunteer_skillsCreateWithoutVolunteer_profilesInput[] | volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput | volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput[]
    upsert?: volunteer_skillsUpsertWithWhereUniqueWithoutVolunteer_profilesInput | volunteer_skillsUpsertWithWhereUniqueWithoutVolunteer_profilesInput[]
    createMany?: volunteer_skillsCreateManyVolunteer_profilesInputEnvelope
    set?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    disconnect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    delete?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    update?: volunteer_skillsUpdateWithWhereUniqueWithoutVolunteer_profilesInput | volunteer_skillsUpdateWithWhereUniqueWithoutVolunteer_profilesInput[]
    updateMany?: volunteer_skillsUpdateManyWithWhereWithoutVolunteer_profilesInput | volunteer_skillsUpdateManyWithWhereWithoutVolunteer_profilesInput[]
    deleteMany?: volunteer_skillsScalarWhereInput | volunteer_skillsScalarWhereInput[]
  }

  export type volunteer_skillsUncheckedUpdateManyWithoutVolunteer_profilesNestedInput = {
    create?: XOR<volunteer_skillsCreateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput> | volunteer_skillsCreateWithoutVolunteer_profilesInput[] | volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput[]
    connectOrCreate?: volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput | volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput[]
    upsert?: volunteer_skillsUpsertWithWhereUniqueWithoutVolunteer_profilesInput | volunteer_skillsUpsertWithWhereUniqueWithoutVolunteer_profilesInput[]
    createMany?: volunteer_skillsCreateManyVolunteer_profilesInputEnvelope
    set?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    disconnect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    delete?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    connect?: volunteer_skillsWhereUniqueInput | volunteer_skillsWhereUniqueInput[]
    update?: volunteer_skillsUpdateWithWhereUniqueWithoutVolunteer_profilesInput | volunteer_skillsUpdateWithWhereUniqueWithoutVolunteer_profilesInput[]
    updateMany?: volunteer_skillsUpdateManyWithWhereWithoutVolunteer_profilesInput | volunteer_skillsUpdateManyWithWhereWithoutVolunteer_profilesInput[]
    deleteMany?: volunteer_skillsScalarWhereInput | volunteer_skillsScalarWhereInput[]
  }

  export type volunteer_profilesCreateNestedOneWithoutVolunteer_skillsInput = {
    create?: XOR<volunteer_profilesCreateWithoutVolunteer_skillsInput, volunteer_profilesUncheckedCreateWithoutVolunteer_skillsInput>
    connectOrCreate?: volunteer_profilesCreateOrConnectWithoutVolunteer_skillsInput
    connect?: volunteer_profilesWhereUniqueInput
  }

  export type skillsCreateNestedOneWithoutVolunteer_skillsInput = {
    create?: XOR<skillsCreateWithoutVolunteer_skillsInput, skillsUncheckedCreateWithoutVolunteer_skillsInput>
    connectOrCreate?: skillsCreateOrConnectWithoutVolunteer_skillsInput
    connect?: skillsWhereUniqueInput
  }

  export type Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput = {
    set?: $Enums.volunteer_skills_proficiency_level
  }

  export type volunteer_profilesUpdateOneRequiredWithoutVolunteer_skillsNestedInput = {
    create?: XOR<volunteer_profilesCreateWithoutVolunteer_skillsInput, volunteer_profilesUncheckedCreateWithoutVolunteer_skillsInput>
    connectOrCreate?: volunteer_profilesCreateOrConnectWithoutVolunteer_skillsInput
    upsert?: volunteer_profilesUpsertWithoutVolunteer_skillsInput
    connect?: volunteer_profilesWhereUniqueInput
    update?: XOR<XOR<volunteer_profilesUpdateToOneWithWhereWithoutVolunteer_skillsInput, volunteer_profilesUpdateWithoutVolunteer_skillsInput>, volunteer_profilesUncheckedUpdateWithoutVolunteer_skillsInput>
  }

  export type skillsUpdateOneRequiredWithoutVolunteer_skillsNestedInput = {
    create?: XOR<skillsCreateWithoutVolunteer_skillsInput, skillsUncheckedCreateWithoutVolunteer_skillsInput>
    connectOrCreate?: skillsCreateOrConnectWithoutVolunteer_skillsInput
    upsert?: skillsUpsertWithoutVolunteer_skillsInput
    connect?: skillsWhereUniqueInput
    update?: XOR<XOR<skillsUpdateToOneWithWhereWithoutVolunteer_skillsInput, skillsUpdateWithoutVolunteer_skillsInput>, skillsUncheckedUpdateWithoutVolunteer_skillsInput>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedEnumcampaigns_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.campaigns_language | Enumcampaigns_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.campaigns_language[] | null
    notIn?: $Enums.campaigns_language[] | null
    not?: NestedEnumcampaigns_languageNullableFilter<$PrismaModel> | $Enums.campaigns_language | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumcampaigns_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.campaigns_language | Enumcampaigns_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.campaigns_language[] | null
    notIn?: $Enums.campaigns_language[] | null
    not?: NestedEnumcampaigns_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.campaigns_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcampaigns_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumcampaigns_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumcontact_messages_reasonFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_reason | Enumcontact_messages_reasonFieldRefInput<$PrismaModel>
    in?: $Enums.contact_messages_reason[]
    notIn?: $Enums.contact_messages_reason[]
    not?: NestedEnumcontact_messages_reasonFilter<$PrismaModel> | $Enums.contact_messages_reason
  }

  export type NestedEnumcontact_messages_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_status | Enumcontact_messages_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.contact_messages_status[] | null
    notIn?: $Enums.contact_messages_status[] | null
    not?: NestedEnumcontact_messages_statusNullableFilter<$PrismaModel> | $Enums.contact_messages_status | null
  }

  export type NestedEnumcontact_messages_reasonWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_reason | Enumcontact_messages_reasonFieldRefInput<$PrismaModel>
    in?: $Enums.contact_messages_reason[]
    notIn?: $Enums.contact_messages_reason[]
    not?: NestedEnumcontact_messages_reasonWithAggregatesFilter<$PrismaModel> | $Enums.contact_messages_reason
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcontact_messages_reasonFilter<$PrismaModel>
    _max?: NestedEnumcontact_messages_reasonFilter<$PrismaModel>
  }

  export type NestedEnumcontact_messages_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.contact_messages_status | Enumcontact_messages_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.contact_messages_status[] | null
    notIn?: $Enums.contact_messages_status[] | null
    not?: NestedEnumcontact_messages_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.contact_messages_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcontact_messages_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcontact_messages_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumdocuments_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.documents_language | Enumdocuments_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.documents_language[] | null
    notIn?: $Enums.documents_language[] | null
    not?: NestedEnumdocuments_languageNullableFilter<$PrismaModel> | $Enums.documents_language | null
  }

  export type NestedEnumdocuments_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.documents_language | Enumdocuments_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.documents_language[] | null
    notIn?: $Enums.documents_language[] | null
    not?: NestedEnumdocuments_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.documents_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdocuments_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumdocuments_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumdonations_donation_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_donation_type | Enumdonations_donation_typeFieldRefInput<$PrismaModel>
    in?: $Enums.donations_donation_type[]
    notIn?: $Enums.donations_donation_type[]
    not?: NestedEnumdonations_donation_typeFilter<$PrismaModel> | $Enums.donations_donation_type
  }

  export type NestedEnumdonations_payment_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_payment_status | Enumdonations_payment_statusFieldRefInput<$PrismaModel>
    in?: $Enums.donations_payment_status[]
    notIn?: $Enums.donations_payment_status[]
    not?: NestedEnumdonations_payment_statusFilter<$PrismaModel> | $Enums.donations_payment_status
  }

  export type NestedEnumdonations_donation_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_donation_type | Enumdonations_donation_typeFieldRefInput<$PrismaModel>
    in?: $Enums.donations_donation_type[]
    notIn?: $Enums.donations_donation_type[]
    not?: NestedEnumdonations_donation_typeWithAggregatesFilter<$PrismaModel> | $Enums.donations_donation_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdonations_donation_typeFilter<$PrismaModel>
    _max?: NestedEnumdonations_donation_typeFilter<$PrismaModel>
  }

  export type NestedEnumdonations_payment_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donations_payment_status | Enumdonations_payment_statusFieldRefInput<$PrismaModel>
    in?: $Enums.donations_payment_status[]
    notIn?: $Enums.donations_payment_status[]
    not?: NestedEnumdonations_payment_statusWithAggregatesFilter<$PrismaModel> | $Enums.donations_payment_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdonations_payment_statusFilter<$PrismaModel>
    _max?: NestedEnumdonations_payment_statusFilter<$PrismaModel>
  }

  export type NestedEnumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_frequency | Enumdonor_profiles_donation_frequencyFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_frequency[] | null
    notIn?: $Enums.donor_profiles_donation_frequency[] | null
    not?: NestedEnumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel> | $Enums.donor_profiles_donation_frequency | null
  }

  export type NestedEnumdonor_profiles_donation_tierNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_tier | Enumdonor_profiles_donation_tierFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_tier[] | null
    notIn?: $Enums.donor_profiles_donation_tier[] | null
    not?: NestedEnumdonor_profiles_donation_tierNullableFilter<$PrismaModel> | $Enums.donor_profiles_donation_tier | null
  }

  export type NestedEnumdonor_profiles_donation_frequencyNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_frequency | Enumdonor_profiles_donation_frequencyFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_frequency[] | null
    notIn?: $Enums.donor_profiles_donation_frequency[] | null
    not?: NestedEnumdonor_profiles_donation_frequencyNullableWithAggregatesFilter<$PrismaModel> | $Enums.donor_profiles_donation_frequency | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel>
    _max?: NestedEnumdonor_profiles_donation_frequencyNullableFilter<$PrismaModel>
  }

  export type NestedEnumdonor_profiles_donation_tierNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.donor_profiles_donation_tier | Enumdonor_profiles_donation_tierFieldRefInput<$PrismaModel> | null
    in?: $Enums.donor_profiles_donation_tier[] | null
    notIn?: $Enums.donor_profiles_donation_tier[] | null
    not?: NestedEnumdonor_profiles_donation_tierNullableWithAggregatesFilter<$PrismaModel> | $Enums.donor_profiles_donation_tier | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdonor_profiles_donation_tierNullableFilter<$PrismaModel>
    _max?: NestedEnumdonor_profiles_donation_tierNullableFilter<$PrismaModel>
  }

  export type NestedEnumemail_logs_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.email_logs_status | Enumemail_logs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.email_logs_status[]
    notIn?: $Enums.email_logs_status[]
    not?: NestedEnumemail_logs_statusFilter<$PrismaModel> | $Enums.email_logs_status
  }

  export type NestedEnumemail_logs_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.email_logs_status | Enumemail_logs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.email_logs_status[]
    notIn?: $Enums.email_logs_status[]
    not?: NestedEnumemail_logs_statusWithAggregatesFilter<$PrismaModel> | $Enums.email_logs_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumemail_logs_statusFilter<$PrismaModel>
    _max?: NestedEnumemail_logs_statusFilter<$PrismaModel>
  }

  export type NestedEnumevent_participants_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_role | Enumevent_participants_roleFieldRefInput<$PrismaModel>
    in?: $Enums.event_participants_role[]
    notIn?: $Enums.event_participants_role[]
    not?: NestedEnumevent_participants_roleFilter<$PrismaModel> | $Enums.event_participants_role
  }

  export type NestedEnumevent_participants_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_status | Enumevent_participants_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.event_participants_status[] | null
    notIn?: $Enums.event_participants_status[] | null
    not?: NestedEnumevent_participants_statusNullableFilter<$PrismaModel> | $Enums.event_participants_status | null
  }

  export type NestedEnumevent_participants_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_role | Enumevent_participants_roleFieldRefInput<$PrismaModel>
    in?: $Enums.event_participants_role[]
    notIn?: $Enums.event_participants_role[]
    not?: NestedEnumevent_participants_roleWithAggregatesFilter<$PrismaModel> | $Enums.event_participants_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumevent_participants_roleFilter<$PrismaModel>
    _max?: NestedEnumevent_participants_roleFilter<$PrismaModel>
  }

  export type NestedEnumevent_participants_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.event_participants_status | Enumevent_participants_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.event_participants_status[] | null
    notIn?: $Enums.event_participants_status[] | null
    not?: NestedEnumevent_participants_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.event_participants_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumevent_participants_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumevent_participants_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumevents_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.events_status | Enumevents_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_status[] | null
    notIn?: $Enums.events_status[] | null
    not?: NestedEnumevents_statusNullableFilter<$PrismaModel> | $Enums.events_status | null
  }

  export type NestedEnumevents_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.events_language | Enumevents_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_language[] | null
    notIn?: $Enums.events_language[] | null
    not?: NestedEnumevents_languageNullableFilter<$PrismaModel> | $Enums.events_language | null
  }

  export type NestedEnumevents_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.events_status | Enumevents_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_status[] | null
    notIn?: $Enums.events_status[] | null
    not?: NestedEnumevents_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.events_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumevents_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumevents_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumevents_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.events_language | Enumevents_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.events_language[] | null
    notIn?: $Enums.events_language[] | null
    not?: NestedEnumevents_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.events_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumevents_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumevents_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumfaqs_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.faqs_language | Enumfaqs_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.faqs_language[] | null
    notIn?: $Enums.faqs_language[] | null
    not?: NestedEnumfaqs_languageNullableFilter<$PrismaModel> | $Enums.faqs_language | null
  }

  export type NestedEnumfaqs_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.faqs_language | Enumfaqs_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.faqs_language[] | null
    notIn?: $Enums.faqs_language[] | null
    not?: NestedEnumfaqs_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.faqs_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumfaqs_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumfaqs_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnummedia_media_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.media_media_type | Enummedia_media_typeFieldRefInput<$PrismaModel>
    in?: $Enums.media_media_type[]
    notIn?: $Enums.media_media_type[]
    not?: NestedEnummedia_media_typeFilter<$PrismaModel> | $Enums.media_media_type
  }

  export type NestedEnummedia_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.media_language | Enummedia_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.media_language[] | null
    notIn?: $Enums.media_language[] | null
    not?: NestedEnummedia_languageNullableFilter<$PrismaModel> | $Enums.media_language | null
  }

  export type NestedEnummedia_media_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.media_media_type | Enummedia_media_typeFieldRefInput<$PrismaModel>
    in?: $Enums.media_media_type[]
    notIn?: $Enums.media_media_type[]
    not?: NestedEnummedia_media_typeWithAggregatesFilter<$PrismaModel> | $Enums.media_media_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnummedia_media_typeFilter<$PrismaModel>
    _max?: NestedEnummedia_media_typeFilter<$PrismaModel>
  }

  export type NestedEnummedia_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.media_language | Enummedia_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.media_language[] | null
    notIn?: $Enums.media_language[] | null
    not?: NestedEnummedia_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.media_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnummedia_languageNullableFilter<$PrismaModel>
    _max?: NestedEnummedia_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.newsletter_subscribers_language_preference | Enumnewsletter_subscribers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.newsletter_subscribers_language_preference[] | null
    notIn?: $Enums.newsletter_subscribers_language_preference[] | null
    not?: NestedEnumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel> | $Enums.newsletter_subscribers_language_preference | null
  }

  export type NestedEnumnewsletter_subscribers_language_preferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.newsletter_subscribers_language_preference | Enumnewsletter_subscribers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.newsletter_subscribers_language_preference[] | null
    notIn?: $Enums.newsletter_subscribers_language_preference[] | null
    not?: NestedEnumnewsletter_subscribers_language_preferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.newsletter_subscribers_language_preference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumnewsletter_subscribers_language_preferenceNullableFilter<$PrismaModel>
  }

  export type NestedEnumpartners_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_type | Enumpartners_typeFieldRefInput<$PrismaModel>
    in?: $Enums.partners_type[]
    notIn?: $Enums.partners_type[]
    not?: NestedEnumpartners_typeFilter<$PrismaModel> | $Enums.partners_type
  }

  export type NestedEnumpartners_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_language | Enumpartners_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.partners_language[] | null
    notIn?: $Enums.partners_language[] | null
    not?: NestedEnumpartners_languageNullableFilter<$PrismaModel> | $Enums.partners_language | null
  }

  export type NestedEnumpartners_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_type | Enumpartners_typeFieldRefInput<$PrismaModel>
    in?: $Enums.partners_type[]
    notIn?: $Enums.partners_type[]
    not?: NestedEnumpartners_typeWithAggregatesFilter<$PrismaModel> | $Enums.partners_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpartners_typeFilter<$PrismaModel>
    _max?: NestedEnumpartners_typeFilter<$PrismaModel>
  }

  export type NestedEnumpartners_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.partners_language | Enumpartners_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.partners_language[] | null
    notIn?: $Enums.partners_language[] | null
    not?: NestedEnumpartners_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.partners_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpartners_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumpartners_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumposts_post_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_post_type | Enumposts_post_typeFieldRefInput<$PrismaModel>
    in?: $Enums.posts_post_type[]
    notIn?: $Enums.posts_post_type[]
    not?: NestedEnumposts_post_typeFilter<$PrismaModel> | $Enums.posts_post_type
  }

  export type NestedEnumposts_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_language | Enumposts_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.posts_language[] | null
    notIn?: $Enums.posts_language[] | null
    not?: NestedEnumposts_languageNullableFilter<$PrismaModel> | $Enums.posts_language | null
  }

  export type NestedEnumposts_post_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_post_type | Enumposts_post_typeFieldRefInput<$PrismaModel>
    in?: $Enums.posts_post_type[]
    notIn?: $Enums.posts_post_type[]
    not?: NestedEnumposts_post_typeWithAggregatesFilter<$PrismaModel> | $Enums.posts_post_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumposts_post_typeFilter<$PrismaModel>
    _max?: NestedEnumposts_post_typeFilter<$PrismaModel>
  }

  export type NestedEnumposts_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.posts_language | Enumposts_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.posts_language[] | null
    notIn?: $Enums.posts_language[] | null
    not?: NestedEnumposts_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.posts_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumposts_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumposts_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumprograms_categoryNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_category | Enumprograms_categoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_category[] | null
    notIn?: $Enums.programs_category[] | null
    not?: NestedEnumprograms_categoryNullableFilter<$PrismaModel> | $Enums.programs_category | null
  }

  export type NestedEnumprograms_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_language | Enumprograms_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_language[] | null
    notIn?: $Enums.programs_language[] | null
    not?: NestedEnumprograms_languageNullableFilter<$PrismaModel> | $Enums.programs_language | null
  }

  export type NestedEnumprograms_categoryNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_category | Enumprograms_categoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_category[] | null
    notIn?: $Enums.programs_category[] | null
    not?: NestedEnumprograms_categoryNullableWithAggregatesFilter<$PrismaModel> | $Enums.programs_category | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumprograms_categoryNullableFilter<$PrismaModel>
    _max?: NestedEnumprograms_categoryNullableFilter<$PrismaModel>
  }

  export type NestedEnumprograms_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.programs_language | Enumprograms_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.programs_language[] | null
    notIn?: $Enums.programs_language[] | null
    not?: NestedEnumprograms_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.programs_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumprograms_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumprograms_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumrole_permissions_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.role_permissions_role | Enumrole_permissions_roleFieldRefInput<$PrismaModel>
    in?: $Enums.role_permissions_role[]
    notIn?: $Enums.role_permissions_role[]
    not?: NestedEnumrole_permissions_roleFilter<$PrismaModel> | $Enums.role_permissions_role
  }

  export type NestedEnumrole_permissions_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.role_permissions_role | Enumrole_permissions_roleFieldRefInput<$PrismaModel>
    in?: $Enums.role_permissions_role[]
    notIn?: $Enums.role_permissions_role[]
    not?: NestedEnumrole_permissions_roleWithAggregatesFilter<$PrismaModel> | $Enums.role_permissions_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumrole_permissions_roleFilter<$PrismaModel>
    _max?: NestedEnumrole_permissions_roleFilter<$PrismaModel>
  }

  export type NestedEnumtestimonials_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_type | Enumtestimonials_typeFieldRefInput<$PrismaModel>
    in?: $Enums.testimonials_type[]
    notIn?: $Enums.testimonials_type[]
    not?: NestedEnumtestimonials_typeFilter<$PrismaModel> | $Enums.testimonials_type
  }

  export type NestedEnumtestimonials_languageNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_language | Enumtestimonials_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.testimonials_language[] | null
    notIn?: $Enums.testimonials_language[] | null
    not?: NestedEnumtestimonials_languageNullableFilter<$PrismaModel> | $Enums.testimonials_language | null
  }

  export type NestedEnumtestimonials_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_type | Enumtestimonials_typeFieldRefInput<$PrismaModel>
    in?: $Enums.testimonials_type[]
    notIn?: $Enums.testimonials_type[]
    not?: NestedEnumtestimonials_typeWithAggregatesFilter<$PrismaModel> | $Enums.testimonials_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtestimonials_typeFilter<$PrismaModel>
    _max?: NestedEnumtestimonials_typeFilter<$PrismaModel>
  }

  export type NestedEnumtestimonials_languageNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.testimonials_language | Enumtestimonials_languageFieldRefInput<$PrismaModel> | null
    in?: $Enums.testimonials_language[] | null
    notIn?: $Enums.testimonials_language[] | null
    not?: NestedEnumtestimonials_languageNullableWithAggregatesFilter<$PrismaModel> | $Enums.testimonials_language | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtestimonials_languageNullableFilter<$PrismaModel>
    _max?: NestedEnumtestimonials_languageNullableFilter<$PrismaModel>
  }

  export type NestedEnumusers_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[]
    notIn?: $Enums.users_role[]
    not?: NestedEnumusers_roleFilter<$PrismaModel> | $Enums.users_role
  }

  export type NestedEnumusers_language_preferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.users_language_preference | Enumusers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_language_preference[] | null
    notIn?: $Enums.users_language_preference[] | null
    not?: NestedEnumusers_language_preferenceNullableFilter<$PrismaModel> | $Enums.users_language_preference | null
  }

  export type NestedEnumusers_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_role | Enumusers_roleFieldRefInput<$PrismaModel>
    in?: $Enums.users_role[]
    notIn?: $Enums.users_role[]
    not?: NestedEnumusers_roleWithAggregatesFilter<$PrismaModel> | $Enums.users_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumusers_roleFilter<$PrismaModel>
    _max?: NestedEnumusers_roleFilter<$PrismaModel>
  }

  export type NestedEnumusers_language_preferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_language_preference | Enumusers_language_preferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_language_preference[] | null
    notIn?: $Enums.users_language_preference[] | null
    not?: NestedEnumusers_language_preferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.users_language_preference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusers_language_preferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumusers_language_preferenceNullableFilter<$PrismaModel>
  }

  export type NestedEnumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_profiles_background_check_status | Enumvolunteer_profiles_background_check_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.volunteer_profiles_background_check_status[] | null
    notIn?: $Enums.volunteer_profiles_background_check_status[] | null
    not?: NestedEnumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel> | $Enums.volunteer_profiles_background_check_status | null
  }

  export type NestedEnumvolunteer_profiles_background_check_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_profiles_background_check_status | Enumvolunteer_profiles_background_check_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.volunteer_profiles_background_check_status[] | null
    notIn?: $Enums.volunteer_profiles_background_check_status[] | null
    not?: NestedEnumvolunteer_profiles_background_check_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.volunteer_profiles_background_check_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumvolunteer_profiles_background_check_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumvolunteer_skills_proficiency_levelFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_skills_proficiency_level | Enumvolunteer_skills_proficiency_levelFieldRefInput<$PrismaModel>
    in?: $Enums.volunteer_skills_proficiency_level[]
    notIn?: $Enums.volunteer_skills_proficiency_level[]
    not?: NestedEnumvolunteer_skills_proficiency_levelFilter<$PrismaModel> | $Enums.volunteer_skills_proficiency_level
  }

  export type NestedEnumvolunteer_skills_proficiency_levelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.volunteer_skills_proficiency_level | Enumvolunteer_skills_proficiency_levelFieldRefInput<$PrismaModel>
    in?: $Enums.volunteer_skills_proficiency_level[]
    notIn?: $Enums.volunteer_skills_proficiency_level[]
    not?: NestedEnumvolunteer_skills_proficiency_levelWithAggregatesFilter<$PrismaModel> | $Enums.volunteer_skills_proficiency_level
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumvolunteer_skills_proficiency_levelFilter<$PrismaModel>
    _max?: NestedEnumvolunteer_skills_proficiency_levelFilter<$PrismaModel>
  }

  export type usersCreateWithoutCampaignsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutCampaignsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutCampaignsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCampaignsInput, usersUncheckedCreateWithoutCampaignsInput>
  }

  export type donationsCreateWithoutCampaignsInput = {
    id?: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    donor_profiles: donor_profilesCreateNestedOneWithoutDonationsInput
  }

  export type donationsUncheckedCreateWithoutCampaignsInput = {
    id?: bigint | number
    donor_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donationsCreateOrConnectWithoutCampaignsInput = {
    where: donationsWhereUniqueInput
    create: XOR<donationsCreateWithoutCampaignsInput, donationsUncheckedCreateWithoutCampaignsInput>
  }

  export type donationsCreateManyCampaignsInputEnvelope = {
    data: donationsCreateManyCampaignsInput | donationsCreateManyCampaignsInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutCampaignsInput = {
    update: XOR<usersUpdateWithoutCampaignsInput, usersUncheckedUpdateWithoutCampaignsInput>
    create: XOR<usersCreateWithoutCampaignsInput, usersUncheckedCreateWithoutCampaignsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutCampaignsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutCampaignsInput, usersUncheckedUpdateWithoutCampaignsInput>
  }

  export type usersUpdateWithoutCampaignsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutCampaignsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type donationsUpsertWithWhereUniqueWithoutCampaignsInput = {
    where: donationsWhereUniqueInput
    update: XOR<donationsUpdateWithoutCampaignsInput, donationsUncheckedUpdateWithoutCampaignsInput>
    create: XOR<donationsCreateWithoutCampaignsInput, donationsUncheckedCreateWithoutCampaignsInput>
  }

  export type donationsUpdateWithWhereUniqueWithoutCampaignsInput = {
    where: donationsWhereUniqueInput
    data: XOR<donationsUpdateWithoutCampaignsInput, donationsUncheckedUpdateWithoutCampaignsInput>
  }

  export type donationsUpdateManyWithWhereWithoutCampaignsInput = {
    where: donationsScalarWhereInput
    data: XOR<donationsUpdateManyMutationInput, donationsUncheckedUpdateManyWithoutCampaignsInput>
  }

  export type donationsScalarWhereInput = {
    AND?: donationsScalarWhereInput | donationsScalarWhereInput[]
    OR?: donationsScalarWhereInput[]
    NOT?: donationsScalarWhereInput | donationsScalarWhereInput[]
    id?: BigIntFilter<"donations"> | bigint | number
    donor_id?: BigIntFilter<"donations"> | bigint | number
    campaign_id?: BigIntFilter<"donations"> | bigint | number
    amount?: DecimalFilter<"donations"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"donations"> | string
    donation_type?: Enumdonations_donation_typeFilter<"donations"> | $Enums.donations_donation_type
    payment_method?: StringNullableFilter<"donations"> | string | null
    payment_status?: Enumdonations_payment_statusFilter<"donations"> | $Enums.donations_payment_status
    transaction_id?: StringNullableFilter<"donations"> | string | null
    receipt_url?: StringNullableFilter<"donations"> | string | null
    is_acknowledged?: BoolNullableFilter<"donations"> | boolean | null
    is_tax_deductible?: BoolNullableFilter<"donations"> | boolean | null
    is_anonymous?: BoolNullableFilter<"donations"> | boolean | null
    notes?: StringNullableFilter<"donations"> | string | null
    donated_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    created_at?: DateTimeNullableFilter<"donations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"donations"> | Date | string | null
  }

  export type usersCreateWithoutDocumentsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutDocumentsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutDocumentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutDocumentsInput, usersUncheckedCreateWithoutDocumentsInput>
  }

  export type usersUpsertWithoutDocumentsInput = {
    update: XOR<usersUpdateWithoutDocumentsInput, usersUncheckedUpdateWithoutDocumentsInput>
    create: XOR<usersCreateWithoutDocumentsInput, usersUncheckedCreateWithoutDocumentsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutDocumentsInput, usersUncheckedUpdateWithoutDocumentsInput>
  }

  export type usersUpdateWithoutDocumentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutDocumentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type donor_profilesCreateWithoutDonationsInput = {
    is_recurring_donor?: boolean | null
    preferred_payment_method?: string | null
    total_donated?: Decimal | DecimalJsLike | number | string | null
    donation_frequency?: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: string | null
    is_anonymous?: boolean | null
    last_donation_date?: Date | string | null
    donation_tier?: $Enums.donor_profiles_donation_tier | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    users: usersCreateNestedOneWithoutDonor_profilesInput
  }

  export type donor_profilesUncheckedCreateWithoutDonationsInput = {
    user_id: bigint | number
    is_recurring_donor?: boolean | null
    preferred_payment_method?: string | null
    total_donated?: Decimal | DecimalJsLike | number | string | null
    donation_frequency?: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: string | null
    is_anonymous?: boolean | null
    last_donation_date?: Date | string | null
    donation_tier?: $Enums.donor_profiles_donation_tier | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donor_profilesCreateOrConnectWithoutDonationsInput = {
    where: donor_profilesWhereUniqueInput
    create: XOR<donor_profilesCreateWithoutDonationsInput, donor_profilesUncheckedCreateWithoutDonationsInput>
  }

  export type campaignsCreateWithoutDonationsInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    users?: usersCreateNestedOneWithoutCampaignsInput
  }

  export type campaignsUncheckedCreateWithoutDonationsInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    created_by?: bigint | number | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type campaignsCreateOrConnectWithoutDonationsInput = {
    where: campaignsWhereUniqueInput
    create: XOR<campaignsCreateWithoutDonationsInput, campaignsUncheckedCreateWithoutDonationsInput>
  }

  export type donor_profilesUpsertWithoutDonationsInput = {
    update: XOR<donor_profilesUpdateWithoutDonationsInput, donor_profilesUncheckedUpdateWithoutDonationsInput>
    create: XOR<donor_profilesCreateWithoutDonationsInput, donor_profilesUncheckedCreateWithoutDonationsInput>
    where?: donor_profilesWhereInput
  }

  export type donor_profilesUpdateToOneWithWhereWithoutDonationsInput = {
    where?: donor_profilesWhereInput
    data: XOR<donor_profilesUpdateWithoutDonationsInput, donor_profilesUncheckedUpdateWithoutDonationsInput>
  }

  export type donor_profilesUpdateWithoutDonationsInput = {
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutDonor_profilesNestedInput
  }

  export type donor_profilesUncheckedUpdateWithoutDonationsInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type campaignsUpsertWithoutDonationsInput = {
    update: XOR<campaignsUpdateWithoutDonationsInput, campaignsUncheckedUpdateWithoutDonationsInput>
    create: XOR<campaignsCreateWithoutDonationsInput, campaignsUncheckedCreateWithoutDonationsInput>
    where?: campaignsWhereInput
  }

  export type campaignsUpdateToOneWithWhereWithoutDonationsInput = {
    where?: campaignsWhereInput
    data: XOR<campaignsUpdateWithoutDonationsInput, campaignsUncheckedUpdateWithoutDonationsInput>
  }

  export type campaignsUpdateWithoutDonationsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutCampaignsNestedInput
  }

  export type campaignsUncheckedUpdateWithoutDonationsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsCreateWithoutDonor_profilesInput = {
    id?: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    campaigns: campaignsCreateNestedOneWithoutDonationsInput
  }

  export type donationsUncheckedCreateWithoutDonor_profilesInput = {
    id?: bigint | number
    campaign_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donationsCreateOrConnectWithoutDonor_profilesInput = {
    where: donationsWhereUniqueInput
    create: XOR<donationsCreateWithoutDonor_profilesInput, donationsUncheckedCreateWithoutDonor_profilesInput>
  }

  export type donationsCreateManyDonor_profilesInputEnvelope = {
    data: donationsCreateManyDonor_profilesInput | donationsCreateManyDonor_profilesInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutDonor_profilesInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutDonor_profilesInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutDonor_profilesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutDonor_profilesInput, usersUncheckedCreateWithoutDonor_profilesInput>
  }

  export type donationsUpsertWithWhereUniqueWithoutDonor_profilesInput = {
    where: donationsWhereUniqueInput
    update: XOR<donationsUpdateWithoutDonor_profilesInput, donationsUncheckedUpdateWithoutDonor_profilesInput>
    create: XOR<donationsCreateWithoutDonor_profilesInput, donationsUncheckedCreateWithoutDonor_profilesInput>
  }

  export type donationsUpdateWithWhereUniqueWithoutDonor_profilesInput = {
    where: donationsWhereUniqueInput
    data: XOR<donationsUpdateWithoutDonor_profilesInput, donationsUncheckedUpdateWithoutDonor_profilesInput>
  }

  export type donationsUpdateManyWithWhereWithoutDonor_profilesInput = {
    where: donationsScalarWhereInput
    data: XOR<donationsUpdateManyMutationInput, donationsUncheckedUpdateManyWithoutDonor_profilesInput>
  }

  export type usersUpsertWithoutDonor_profilesInput = {
    update: XOR<usersUpdateWithoutDonor_profilesInput, usersUncheckedUpdateWithoutDonor_profilesInput>
    create: XOR<usersCreateWithoutDonor_profilesInput, usersUncheckedCreateWithoutDonor_profilesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutDonor_profilesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutDonor_profilesInput, usersUncheckedUpdateWithoutDonor_profilesInput>
  }

  export type usersUpdateWithoutDonor_profilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutDonor_profilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type eventsCreateWithoutEvent_participantsInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    users?: usersCreateNestedOneWithoutEventsInput
    media?: mediaCreateNestedManyWithoutEventsInput
  }

  export type eventsUncheckedCreateWithoutEvent_participantsInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    created_by?: bigint | number | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    media?: mediaUncheckedCreateNestedManyWithoutEventsInput
  }

  export type eventsCreateOrConnectWithoutEvent_participantsInput = {
    where: eventsWhereUniqueInput
    create: XOR<eventsCreateWithoutEvent_participantsInput, eventsUncheckedCreateWithoutEvent_participantsInput>
  }

  export type usersCreateWithoutEvent_participantsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutEvent_participantsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutEvent_participantsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutEvent_participantsInput, usersUncheckedCreateWithoutEvent_participantsInput>
  }

  export type eventsUpsertWithoutEvent_participantsInput = {
    update: XOR<eventsUpdateWithoutEvent_participantsInput, eventsUncheckedUpdateWithoutEvent_participantsInput>
    create: XOR<eventsCreateWithoutEvent_participantsInput, eventsUncheckedCreateWithoutEvent_participantsInput>
    where?: eventsWhereInput
  }

  export type eventsUpdateToOneWithWhereWithoutEvent_participantsInput = {
    where?: eventsWhereInput
    data: XOR<eventsUpdateWithoutEvent_participantsInput, eventsUncheckedUpdateWithoutEvent_participantsInput>
  }

  export type eventsUpdateWithoutEvent_participantsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutEventsNestedInput
    media?: mediaUpdateManyWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateWithoutEvent_participantsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: mediaUncheckedUpdateManyWithoutEventsNestedInput
  }

  export type usersUpsertWithoutEvent_participantsInput = {
    update: XOR<usersUpdateWithoutEvent_participantsInput, usersUncheckedUpdateWithoutEvent_participantsInput>
    create: XOR<usersCreateWithoutEvent_participantsInput, usersUncheckedCreateWithoutEvent_participantsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutEvent_participantsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutEvent_participantsInput, usersUncheckedUpdateWithoutEvent_participantsInput>
  }

  export type usersUpdateWithoutEvent_participantsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutEvent_participantsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type event_participantsCreateWithoutEventsInput = {
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
    users: usersCreateNestedOneWithoutEvent_participantsInput
  }

  export type event_participantsUncheckedCreateWithoutEventsInput = {
    user_id: bigint | number
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
  }

  export type event_participantsCreateOrConnectWithoutEventsInput = {
    where: event_participantsWhereUniqueInput
    create: XOR<event_participantsCreateWithoutEventsInput, event_participantsUncheckedCreateWithoutEventsInput>
  }

  export type event_participantsCreateManyEventsInputEnvelope = {
    data: event_participantsCreateManyEventsInput | event_participantsCreateManyEventsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutEventsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutEventsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutEventsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutEventsInput, usersUncheckedCreateWithoutEventsInput>
  }

  export type mediaCreateWithoutEventsInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
    programs?: programsCreateNestedOneWithoutMediaInput
    users?: usersCreateNestedOneWithoutMediaInput
  }

  export type mediaUncheckedCreateWithoutEventsInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_program_id?: bigint | number | null
    uploaded_by?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type mediaCreateOrConnectWithoutEventsInput = {
    where: mediaWhereUniqueInput
    create: XOR<mediaCreateWithoutEventsInput, mediaUncheckedCreateWithoutEventsInput>
  }

  export type mediaCreateManyEventsInputEnvelope = {
    data: mediaCreateManyEventsInput | mediaCreateManyEventsInput[]
    skipDuplicates?: boolean
  }

  export type event_participantsUpsertWithWhereUniqueWithoutEventsInput = {
    where: event_participantsWhereUniqueInput
    update: XOR<event_participantsUpdateWithoutEventsInput, event_participantsUncheckedUpdateWithoutEventsInput>
    create: XOR<event_participantsCreateWithoutEventsInput, event_participantsUncheckedCreateWithoutEventsInput>
  }

  export type event_participantsUpdateWithWhereUniqueWithoutEventsInput = {
    where: event_participantsWhereUniqueInput
    data: XOR<event_participantsUpdateWithoutEventsInput, event_participantsUncheckedUpdateWithoutEventsInput>
  }

  export type event_participantsUpdateManyWithWhereWithoutEventsInput = {
    where: event_participantsScalarWhereInput
    data: XOR<event_participantsUpdateManyMutationInput, event_participantsUncheckedUpdateManyWithoutEventsInput>
  }

  export type event_participantsScalarWhereInput = {
    AND?: event_participantsScalarWhereInput | event_participantsScalarWhereInput[]
    OR?: event_participantsScalarWhereInput[]
    NOT?: event_participantsScalarWhereInput | event_participantsScalarWhereInput[]
    event_id?: BigIntFilter<"event_participants"> | bigint | number
    user_id?: BigIntFilter<"event_participants"> | bigint | number
    role?: Enumevent_participants_roleFilter<"event_participants"> | $Enums.event_participants_role
    status?: Enumevent_participants_statusNullableFilter<"event_participants"> | $Enums.event_participants_status | null
    hours_contributed?: DecimalNullableFilter<"event_participants"> | Decimal | DecimalJsLike | number | string | null
    feedback?: StringNullableFilter<"event_participants"> | string | null
    rating?: IntNullableFilter<"event_participants"> | number | null
    registered_at?: DateTimeNullableFilter<"event_participants"> | Date | string | null
    attended_at?: DateTimeNullableFilter<"event_participants"> | Date | string | null
  }

  export type usersUpsertWithoutEventsInput = {
    update: XOR<usersUpdateWithoutEventsInput, usersUncheckedUpdateWithoutEventsInput>
    create: XOR<usersCreateWithoutEventsInput, usersUncheckedCreateWithoutEventsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutEventsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutEventsInput, usersUncheckedUpdateWithoutEventsInput>
  }

  export type usersUpdateWithoutEventsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutEventsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type mediaUpsertWithWhereUniqueWithoutEventsInput = {
    where: mediaWhereUniqueInput
    update: XOR<mediaUpdateWithoutEventsInput, mediaUncheckedUpdateWithoutEventsInput>
    create: XOR<mediaCreateWithoutEventsInput, mediaUncheckedCreateWithoutEventsInput>
  }

  export type mediaUpdateWithWhereUniqueWithoutEventsInput = {
    where: mediaWhereUniqueInput
    data: XOR<mediaUpdateWithoutEventsInput, mediaUncheckedUpdateWithoutEventsInput>
  }

  export type mediaUpdateManyWithWhereWithoutEventsInput = {
    where: mediaScalarWhereInput
    data: XOR<mediaUpdateManyMutationInput, mediaUncheckedUpdateManyWithoutEventsInput>
  }

  export type mediaScalarWhereInput = {
    AND?: mediaScalarWhereInput | mediaScalarWhereInput[]
    OR?: mediaScalarWhereInput[]
    NOT?: mediaScalarWhereInput | mediaScalarWhereInput[]
    id?: BigIntFilter<"media"> | bigint | number
    media_type?: Enummedia_media_typeFilter<"media"> | $Enums.media_media_type
    title?: StringNullableFilter<"media"> | string | null
    description?: StringNullableFilter<"media"> | string | null
    file_url?: StringFilter<"media"> | string
    related_event_id?: BigIntNullableFilter<"media"> | bigint | number | null
    related_program_id?: BigIntNullableFilter<"media"> | bigint | number | null
    uploaded_by?: BigIntNullableFilter<"media"> | bigint | number | null
    language?: Enummedia_languageNullableFilter<"media"> | $Enums.media_language | null
    translation_group_id?: StringNullableFilter<"media"> | string | null
    uploaded_at?: DateTimeNullableFilter<"media"> | Date | string | null
  }

  export type eventsCreateWithoutMediaInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    event_participants?: event_participantsCreateNestedManyWithoutEventsInput
    users?: usersCreateNestedOneWithoutEventsInput
  }

  export type eventsUncheckedCreateWithoutMediaInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    created_by?: bigint | number | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutEventsInput
  }

  export type eventsCreateOrConnectWithoutMediaInput = {
    where: eventsWhereUniqueInput
    create: XOR<eventsCreateWithoutMediaInput, eventsUncheckedCreateWithoutMediaInput>
  }

  export type programsCreateWithoutMediaInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    users?: usersCreateNestedOneWithoutProgramsInput
  }

  export type programsUncheckedCreateWithoutMediaInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    created_by?: bigint | number | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type programsCreateOrConnectWithoutMediaInput = {
    where: programsWhereUniqueInput
    create: XOR<programsCreateWithoutMediaInput, programsUncheckedCreateWithoutMediaInput>
  }

  export type usersCreateWithoutMediaInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMediaInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMediaInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMediaInput, usersUncheckedCreateWithoutMediaInput>
  }

  export type eventsUpsertWithoutMediaInput = {
    update: XOR<eventsUpdateWithoutMediaInput, eventsUncheckedUpdateWithoutMediaInput>
    create: XOR<eventsCreateWithoutMediaInput, eventsUncheckedCreateWithoutMediaInput>
    where?: eventsWhereInput
  }

  export type eventsUpdateToOneWithWhereWithoutMediaInput = {
    where?: eventsWhereInput
    data: XOR<eventsUpdateWithoutMediaInput, eventsUncheckedUpdateWithoutMediaInput>
  }

  export type eventsUpdateWithoutMediaInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_participants?: event_participantsUpdateManyWithoutEventsNestedInput
    users?: usersUpdateOneWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateWithoutMediaInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_participants?: event_participantsUncheckedUpdateManyWithoutEventsNestedInput
  }

  export type programsUpsertWithoutMediaInput = {
    update: XOR<programsUpdateWithoutMediaInput, programsUncheckedUpdateWithoutMediaInput>
    create: XOR<programsCreateWithoutMediaInput, programsUncheckedCreateWithoutMediaInput>
    where?: programsWhereInput
  }

  export type programsUpdateToOneWithWhereWithoutMediaInput = {
    where?: programsWhereInput
    data: XOR<programsUpdateWithoutMediaInput, programsUncheckedUpdateWithoutMediaInput>
  }

  export type programsUpdateWithoutMediaInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutProgramsNestedInput
  }

  export type programsUncheckedUpdateWithoutMediaInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutMediaInput = {
    update: XOR<usersUpdateWithoutMediaInput, usersUncheckedUpdateWithoutMediaInput>
    create: XOR<usersCreateWithoutMediaInput, usersUncheckedCreateWithoutMediaInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMediaInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMediaInput, usersUncheckedUpdateWithoutMediaInput>
  }

  export type usersUpdateWithoutMediaInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMediaInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type usersCreateWithoutPostsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPostsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPostsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
  }

  export type usersUpsertWithoutPostsInput = {
    update: XOR<usersUpdateWithoutPostsInput, usersUncheckedUpdateWithoutPostsInput>
    create: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPostsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPostsInput, usersUncheckedUpdateWithoutPostsInput>
  }

  export type usersUpdateWithoutPostsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPostsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type mediaCreateWithoutProgramsInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
    events?: eventsCreateNestedOneWithoutMediaInput
    users?: usersCreateNestedOneWithoutMediaInput
  }

  export type mediaUncheckedCreateWithoutProgramsInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_event_id?: bigint | number | null
    uploaded_by?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type mediaCreateOrConnectWithoutProgramsInput = {
    where: mediaWhereUniqueInput
    create: XOR<mediaCreateWithoutProgramsInput, mediaUncheckedCreateWithoutProgramsInput>
  }

  export type mediaCreateManyProgramsInputEnvelope = {
    data: mediaCreateManyProgramsInput | mediaCreateManyProgramsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutProgramsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutProgramsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutProgramsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutProgramsInput, usersUncheckedCreateWithoutProgramsInput>
  }

  export type mediaUpsertWithWhereUniqueWithoutProgramsInput = {
    where: mediaWhereUniqueInput
    update: XOR<mediaUpdateWithoutProgramsInput, mediaUncheckedUpdateWithoutProgramsInput>
    create: XOR<mediaCreateWithoutProgramsInput, mediaUncheckedCreateWithoutProgramsInput>
  }

  export type mediaUpdateWithWhereUniqueWithoutProgramsInput = {
    where: mediaWhereUniqueInput
    data: XOR<mediaUpdateWithoutProgramsInput, mediaUncheckedUpdateWithoutProgramsInput>
  }

  export type mediaUpdateManyWithWhereWithoutProgramsInput = {
    where: mediaScalarWhereInput
    data: XOR<mediaUpdateManyMutationInput, mediaUncheckedUpdateManyWithoutProgramsInput>
  }

  export type usersUpsertWithoutProgramsInput = {
    update: XOR<usersUpdateWithoutProgramsInput, usersUncheckedUpdateWithoutProgramsInput>
    create: XOR<usersCreateWithoutProgramsInput, usersUncheckedCreateWithoutProgramsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutProgramsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutProgramsInput, usersUncheckedUpdateWithoutProgramsInput>
  }

  export type usersUpdateWithoutProgramsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutProgramsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type usersCreateWithoutSite_interactionsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSite_interactionsInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    volunteer_profiles?: volunteer_profilesUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSite_interactionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSite_interactionsInput, usersUncheckedCreateWithoutSite_interactionsInput>
  }

  export type usersUpsertWithoutSite_interactionsInput = {
    update: XOR<usersUpdateWithoutSite_interactionsInput, usersUncheckedUpdateWithoutSite_interactionsInput>
    create: XOR<usersCreateWithoutSite_interactionsInput, usersUncheckedCreateWithoutSite_interactionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSite_interactionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSite_interactionsInput, usersUncheckedUpdateWithoutSite_interactionsInput>
  }

  export type usersUpdateWithoutSite_interactionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSite_interactionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    volunteer_profiles?: volunteer_profilesUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type volunteer_skillsCreateWithoutSkillsInput = {
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
    volunteer_profiles: volunteer_profilesCreateNestedOneWithoutVolunteer_skillsInput
  }

  export type volunteer_skillsUncheckedCreateWithoutSkillsInput = {
    volunteer_id: bigint | number
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
  }

  export type volunteer_skillsCreateOrConnectWithoutSkillsInput = {
    where: volunteer_skillsWhereUniqueInput
    create: XOR<volunteer_skillsCreateWithoutSkillsInput, volunteer_skillsUncheckedCreateWithoutSkillsInput>
  }

  export type volunteer_skillsCreateManySkillsInputEnvelope = {
    data: volunteer_skillsCreateManySkillsInput | volunteer_skillsCreateManySkillsInput[]
    skipDuplicates?: boolean
  }

  export type volunteer_skillsUpsertWithWhereUniqueWithoutSkillsInput = {
    where: volunteer_skillsWhereUniqueInput
    update: XOR<volunteer_skillsUpdateWithoutSkillsInput, volunteer_skillsUncheckedUpdateWithoutSkillsInput>
    create: XOR<volunteer_skillsCreateWithoutSkillsInput, volunteer_skillsUncheckedCreateWithoutSkillsInput>
  }

  export type volunteer_skillsUpdateWithWhereUniqueWithoutSkillsInput = {
    where: volunteer_skillsWhereUniqueInput
    data: XOR<volunteer_skillsUpdateWithoutSkillsInput, volunteer_skillsUncheckedUpdateWithoutSkillsInput>
  }

  export type volunteer_skillsUpdateManyWithWhereWithoutSkillsInput = {
    where: volunteer_skillsScalarWhereInput
    data: XOR<volunteer_skillsUpdateManyMutationInput, volunteer_skillsUncheckedUpdateManyWithoutSkillsInput>
  }

  export type volunteer_skillsScalarWhereInput = {
    AND?: volunteer_skillsScalarWhereInput | volunteer_skillsScalarWhereInput[]
    OR?: volunteer_skillsScalarWhereInput[]
    NOT?: volunteer_skillsScalarWhereInput | volunteer_skillsScalarWhereInput[]
    volunteer_id?: BigIntFilter<"volunteer_skills"> | bigint | number
    skill_id?: BigIntFilter<"volunteer_skills"> | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFilter<"volunteer_skills"> | $Enums.volunteer_skills_proficiency_level
    is_verified?: BoolNullableFilter<"volunteer_skills"> | boolean | null
    created_at?: DateTimeNullableFilter<"volunteer_skills"> | Date | string | null
  }

  export type campaignsCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    donations?: donationsCreateNestedManyWithoutCampaignsInput
  }

  export type campaignsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    donations?: donationsUncheckedCreateNestedManyWithoutCampaignsInput
  }

  export type campaignsCreateOrConnectWithoutUsersInput = {
    where: campaignsWhereUniqueInput
    create: XOR<campaignsCreateWithoutUsersInput, campaignsUncheckedCreateWithoutUsersInput>
  }

  export type campaignsCreateManyUsersInputEnvelope = {
    data: campaignsCreateManyUsersInput | campaignsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type documentsCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    description?: string | null
    category?: string | null
    file_url: string
    file_size?: bigint | number | null
    file_type?: string | null
    language?: $Enums.documents_language | null
    translation_group_id?: string | null
    is_public?: boolean | null
    download_count?: number | null
    uploaded_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type documentsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    description?: string | null
    category?: string | null
    file_url: string
    file_size?: bigint | number | null
    file_type?: string | null
    language?: $Enums.documents_language | null
    translation_group_id?: string | null
    is_public?: boolean | null
    download_count?: number | null
    uploaded_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type documentsCreateOrConnectWithoutUsersInput = {
    where: documentsWhereUniqueInput
    create: XOR<documentsCreateWithoutUsersInput, documentsUncheckedCreateWithoutUsersInput>
  }

  export type documentsCreateManyUsersInputEnvelope = {
    data: documentsCreateManyUsersInput | documentsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type donor_profilesCreateWithoutUsersInput = {
    is_recurring_donor?: boolean | null
    preferred_payment_method?: string | null
    total_donated?: Decimal | DecimalJsLike | number | string | null
    donation_frequency?: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: string | null
    is_anonymous?: boolean | null
    last_donation_date?: Date | string | null
    donation_tier?: $Enums.donor_profiles_donation_tier | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    donations?: donationsCreateNestedManyWithoutDonor_profilesInput
  }

  export type donor_profilesUncheckedCreateWithoutUsersInput = {
    is_recurring_donor?: boolean | null
    preferred_payment_method?: string | null
    total_donated?: Decimal | DecimalJsLike | number | string | null
    donation_frequency?: $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: string | null
    is_anonymous?: boolean | null
    last_donation_date?: Date | string | null
    donation_tier?: $Enums.donor_profiles_donation_tier | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    donations?: donationsUncheckedCreateNestedManyWithoutDonor_profilesInput
  }

  export type donor_profilesCreateOrConnectWithoutUsersInput = {
    where: donor_profilesWhereUniqueInput
    create: XOR<donor_profilesCreateWithoutUsersInput, donor_profilesUncheckedCreateWithoutUsersInput>
  }

  export type event_participantsCreateWithoutUsersInput = {
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
    events: eventsCreateNestedOneWithoutEvent_participantsInput
  }

  export type event_participantsUncheckedCreateWithoutUsersInput = {
    event_id: bigint | number
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
  }

  export type event_participantsCreateOrConnectWithoutUsersInput = {
    where: event_participantsWhereUniqueInput
    create: XOR<event_participantsCreateWithoutUsersInput, event_participantsUncheckedCreateWithoutUsersInput>
  }

  export type event_participantsCreateManyUsersInputEnvelope = {
    data: event_participantsCreateManyUsersInput | event_participantsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type eventsCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    event_participants?: event_participantsCreateNestedManyWithoutEventsInput
    media?: mediaCreateNestedManyWithoutEventsInput
  }

  export type eventsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutEventsInput
    media?: mediaUncheckedCreateNestedManyWithoutEventsInput
  }

  export type eventsCreateOrConnectWithoutUsersInput = {
    where: eventsWhereUniqueInput
    create: XOR<eventsCreateWithoutUsersInput, eventsUncheckedCreateWithoutUsersInput>
  }

  export type eventsCreateManyUsersInputEnvelope = {
    data: eventsCreateManyUsersInput | eventsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type mediaCreateWithoutUsersInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
    events?: eventsCreateNestedOneWithoutMediaInput
    programs?: programsCreateNestedOneWithoutMediaInput
  }

  export type mediaUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_event_id?: bigint | number | null
    related_program_id?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type mediaCreateOrConnectWithoutUsersInput = {
    where: mediaWhereUniqueInput
    create: XOR<mediaCreateWithoutUsersInput, mediaUncheckedCreateWithoutUsersInput>
  }

  export type mediaCreateManyUsersInputEnvelope = {
    data: mediaCreateManyUsersInput | mediaCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type postsCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    content?: string | null
    post_type: $Enums.posts_post_type
    feature_image?: string | null
    language?: $Enums.posts_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type postsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    content?: string | null
    post_type: $Enums.posts_post_type
    feature_image?: string | null
    language?: $Enums.posts_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type postsCreateOrConnectWithoutUsersInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput>
  }

  export type postsCreateManyUsersInputEnvelope = {
    data: postsCreateManyUsersInput | postsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type programsCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    media?: mediaCreateNestedManyWithoutProgramsInput
  }

  export type programsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    media?: mediaUncheckedCreateNestedManyWithoutProgramsInput
  }

  export type programsCreateOrConnectWithoutUsersInput = {
    where: programsWhereUniqueInput
    create: XOR<programsCreateWithoutUsersInput, programsUncheckedCreateWithoutUsersInput>
  }

  export type programsCreateManyUsersInputEnvelope = {
    data: programsCreateManyUsersInput | programsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type site_interactionsCreateWithoutUsersInput = {
    id?: bigint | number
    session_id?: string | null
    page?: string | null
    action?: string | null
    metadata?: string | null
    ip_address?: string | null
    user_agent?: string | null
    occurred_at?: Date | string | null
  }

  export type site_interactionsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    session_id?: string | null
    page?: string | null
    action?: string | null
    metadata?: string | null
    ip_address?: string | null
    user_agent?: string | null
    occurred_at?: Date | string | null
  }

  export type site_interactionsCreateOrConnectWithoutUsersInput = {
    where: site_interactionsWhereUniqueInput
    create: XOR<site_interactionsCreateWithoutUsersInput, site_interactionsUncheckedCreateWithoutUsersInput>
  }

  export type site_interactionsCreateManyUsersInputEnvelope = {
    data: site_interactionsCreateManyUsersInput | site_interactionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type volunteer_profilesCreateWithoutUsersInput = {
    area_of_expertise?: string | null
    location?: string | null
    availability?: string | null
    motivation?: string | null
    total_hours?: number | null
    certificate_url?: string | null
    registered_events_count?: number | null
    training_completed?: boolean | null
    background_check_status?: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    volunteer_skills?: volunteer_skillsCreateNestedManyWithoutVolunteer_profilesInput
  }

  export type volunteer_profilesUncheckedCreateWithoutUsersInput = {
    area_of_expertise?: string | null
    location?: string | null
    availability?: string | null
    motivation?: string | null
    total_hours?: number | null
    certificate_url?: string | null
    registered_events_count?: number | null
    training_completed?: boolean | null
    background_check_status?: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    volunteer_skills?: volunteer_skillsUncheckedCreateNestedManyWithoutVolunteer_profilesInput
  }

  export type volunteer_profilesCreateOrConnectWithoutUsersInput = {
    where: volunteer_profilesWhereUniqueInput
    create: XOR<volunteer_profilesCreateWithoutUsersInput, volunteer_profilesUncheckedCreateWithoutUsersInput>
  }

  export type campaignsUpsertWithWhereUniqueWithoutUsersInput = {
    where: campaignsWhereUniqueInput
    update: XOR<campaignsUpdateWithoutUsersInput, campaignsUncheckedUpdateWithoutUsersInput>
    create: XOR<campaignsCreateWithoutUsersInput, campaignsUncheckedCreateWithoutUsersInput>
  }

  export type campaignsUpdateWithWhereUniqueWithoutUsersInput = {
    where: campaignsWhereUniqueInput
    data: XOR<campaignsUpdateWithoutUsersInput, campaignsUncheckedUpdateWithoutUsersInput>
  }

  export type campaignsUpdateManyWithWhereWithoutUsersInput = {
    where: campaignsScalarWhereInput
    data: XOR<campaignsUpdateManyMutationInput, campaignsUncheckedUpdateManyWithoutUsersInput>
  }

  export type campaignsScalarWhereInput = {
    AND?: campaignsScalarWhereInput | campaignsScalarWhereInput[]
    OR?: campaignsScalarWhereInput[]
    NOT?: campaignsScalarWhereInput | campaignsScalarWhereInput[]
    id?: BigIntFilter<"campaigns"> | bigint | number
    title?: StringFilter<"campaigns"> | string
    slug?: StringFilter<"campaigns"> | string
    description?: StringNullableFilter<"campaigns"> | string | null
    goal_amount?: DecimalFilter<"campaigns"> | Decimal | DecimalJsLike | number | string
    current_amount?: DecimalNullableFilter<"campaigns"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFilter<"campaigns"> | Date | string
    end_date?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    is_active?: BoolNullableFilter<"campaigns"> | boolean | null
    is_featured?: BoolNullableFilter<"campaigns"> | boolean | null
    category?: StringNullableFilter<"campaigns"> | string | null
    progress_bar_color?: StringNullableFilter<"campaigns"> | string | null
    image_url?: StringNullableFilter<"campaigns"> | string | null
    video_url?: StringNullableFilter<"campaigns"> | string | null
    donor_count?: IntNullableFilter<"campaigns"> | number | null
    success_stories?: StringNullableFilter<"campaigns"> | string | null
    created_by?: BigIntNullableFilter<"campaigns"> | bigint | number | null
    language?: Enumcampaigns_languageNullableFilter<"campaigns"> | $Enums.campaigns_language | null
    translation_group_id?: StringNullableFilter<"campaigns"> | string | null
    created_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"campaigns"> | Date | string | null
  }

  export type documentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: documentsWhereUniqueInput
    update: XOR<documentsUpdateWithoutUsersInput, documentsUncheckedUpdateWithoutUsersInput>
    create: XOR<documentsCreateWithoutUsersInput, documentsUncheckedCreateWithoutUsersInput>
  }

  export type documentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: documentsWhereUniqueInput
    data: XOR<documentsUpdateWithoutUsersInput, documentsUncheckedUpdateWithoutUsersInput>
  }

  export type documentsUpdateManyWithWhereWithoutUsersInput = {
    where: documentsScalarWhereInput
    data: XOR<documentsUpdateManyMutationInput, documentsUncheckedUpdateManyWithoutUsersInput>
  }

  export type documentsScalarWhereInput = {
    AND?: documentsScalarWhereInput | documentsScalarWhereInput[]
    OR?: documentsScalarWhereInput[]
    NOT?: documentsScalarWhereInput | documentsScalarWhereInput[]
    id?: BigIntFilter<"documents"> | bigint | number
    title?: StringFilter<"documents"> | string
    description?: StringNullableFilter<"documents"> | string | null
    category?: StringNullableFilter<"documents"> | string | null
    file_url?: StringFilter<"documents"> | string
    file_size?: BigIntNullableFilter<"documents"> | bigint | number | null
    file_type?: StringNullableFilter<"documents"> | string | null
    uploaded_by?: BigIntNullableFilter<"documents"> | bigint | number | null
    language?: Enumdocuments_languageNullableFilter<"documents"> | $Enums.documents_language | null
    translation_group_id?: StringNullableFilter<"documents"> | string | null
    is_public?: BoolNullableFilter<"documents"> | boolean | null
    download_count?: IntNullableFilter<"documents"> | number | null
    uploaded_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"documents"> | Date | string | null
  }

  export type donor_profilesUpsertWithoutUsersInput = {
    update: XOR<donor_profilesUpdateWithoutUsersInput, donor_profilesUncheckedUpdateWithoutUsersInput>
    create: XOR<donor_profilesCreateWithoutUsersInput, donor_profilesUncheckedCreateWithoutUsersInput>
    where?: donor_profilesWhereInput
  }

  export type donor_profilesUpdateToOneWithWhereWithoutUsersInput = {
    where?: donor_profilesWhereInput
    data: XOR<donor_profilesUpdateWithoutUsersInput, donor_profilesUncheckedUpdateWithoutUsersInput>
  }

  export type donor_profilesUpdateWithoutUsersInput = {
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donations?: donationsUpdateManyWithoutDonor_profilesNestedInput
  }

  export type donor_profilesUncheckedUpdateWithoutUsersInput = {
    is_recurring_donor?: NullableBoolFieldUpdateOperationsInput | boolean | null
    preferred_payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    total_donated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    donation_frequency?: NullableEnumdonor_profiles_donation_frequencyFieldUpdateOperationsInput | $Enums.donor_profiles_donation_frequency | null
    tax_receipt_email?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donation_tier?: NullableEnumdonor_profiles_donation_tierFieldUpdateOperationsInput | $Enums.donor_profiles_donation_tier | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donations?: donationsUncheckedUpdateManyWithoutDonor_profilesNestedInput
  }

  export type event_participantsUpsertWithWhereUniqueWithoutUsersInput = {
    where: event_participantsWhereUniqueInput
    update: XOR<event_participantsUpdateWithoutUsersInput, event_participantsUncheckedUpdateWithoutUsersInput>
    create: XOR<event_participantsCreateWithoutUsersInput, event_participantsUncheckedCreateWithoutUsersInput>
  }

  export type event_participantsUpdateWithWhereUniqueWithoutUsersInput = {
    where: event_participantsWhereUniqueInput
    data: XOR<event_participantsUpdateWithoutUsersInput, event_participantsUncheckedUpdateWithoutUsersInput>
  }

  export type event_participantsUpdateManyWithWhereWithoutUsersInput = {
    where: event_participantsScalarWhereInput
    data: XOR<event_participantsUpdateManyMutationInput, event_participantsUncheckedUpdateManyWithoutUsersInput>
  }

  export type eventsUpsertWithWhereUniqueWithoutUsersInput = {
    where: eventsWhereUniqueInput
    update: XOR<eventsUpdateWithoutUsersInput, eventsUncheckedUpdateWithoutUsersInput>
    create: XOR<eventsCreateWithoutUsersInput, eventsUncheckedCreateWithoutUsersInput>
  }

  export type eventsUpdateWithWhereUniqueWithoutUsersInput = {
    where: eventsWhereUniqueInput
    data: XOR<eventsUpdateWithoutUsersInput, eventsUncheckedUpdateWithoutUsersInput>
  }

  export type eventsUpdateManyWithWhereWithoutUsersInput = {
    where: eventsScalarWhereInput
    data: XOR<eventsUpdateManyMutationInput, eventsUncheckedUpdateManyWithoutUsersInput>
  }

  export type eventsScalarWhereInput = {
    AND?: eventsScalarWhereInput | eventsScalarWhereInput[]
    OR?: eventsScalarWhereInput[]
    NOT?: eventsScalarWhereInput | eventsScalarWhereInput[]
    id?: BigIntFilter<"events"> | bigint | number
    title?: StringFilter<"events"> | string
    slug?: StringFilter<"events"> | string
    description?: StringNullableFilter<"events"> | string | null
    event_date?: DateTimeFilter<"events"> | Date | string
    event_time?: DateTimeFilter<"events"> | Date | string
    timezone?: StringNullableFilter<"events"> | string | null
    location?: StringNullableFilter<"events"> | string | null
    latitude?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableFilter<"events"> | string | null
    capacity?: IntNullableFilter<"events"> | number | null
    registered_count?: IntNullableFilter<"events"> | number | null
    status?: Enumevents_statusNullableFilter<"events"> | $Enums.events_status | null
    registration_deadline?: DateTimeNullableFilter<"events"> | Date | string | null
    registration_link?: StringNullableFilter<"events"> | string | null
    map_embed_url?: StringNullableFilter<"events"> | string | null
    agenda?: StringNullableFilter<"events"> | string | null
    speaker_info?: StringNullableFilter<"events"> | string | null
    requirements?: StringNullableFilter<"events"> | string | null
    ticket_price?: DecimalNullableFilter<"events"> | Decimal | DecimalJsLike | number | string | null
    ticket_link?: StringNullableFilter<"events"> | string | null
    is_featured?: BoolNullableFilter<"events"> | boolean | null
    created_by?: BigIntNullableFilter<"events"> | bigint | number | null
    language?: Enumevents_languageNullableFilter<"events"> | $Enums.events_language | null
    translation_group_id?: StringNullableFilter<"events"> | string | null
    created_at?: DateTimeNullableFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"events"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"events"> | Date | string | null
  }

  export type mediaUpsertWithWhereUniqueWithoutUsersInput = {
    where: mediaWhereUniqueInput
    update: XOR<mediaUpdateWithoutUsersInput, mediaUncheckedUpdateWithoutUsersInput>
    create: XOR<mediaCreateWithoutUsersInput, mediaUncheckedCreateWithoutUsersInput>
  }

  export type mediaUpdateWithWhereUniqueWithoutUsersInput = {
    where: mediaWhereUniqueInput
    data: XOR<mediaUpdateWithoutUsersInput, mediaUncheckedUpdateWithoutUsersInput>
  }

  export type mediaUpdateManyWithWhereWithoutUsersInput = {
    where: mediaScalarWhereInput
    data: XOR<mediaUpdateManyMutationInput, mediaUncheckedUpdateManyWithoutUsersInput>
  }

  export type postsUpsertWithWhereUniqueWithoutUsersInput = {
    where: postsWhereUniqueInput
    update: XOR<postsUpdateWithoutUsersInput, postsUncheckedUpdateWithoutUsersInput>
    create: XOR<postsCreateWithoutUsersInput, postsUncheckedCreateWithoutUsersInput>
  }

  export type postsUpdateWithWhereUniqueWithoutUsersInput = {
    where: postsWhereUniqueInput
    data: XOR<postsUpdateWithoutUsersInput, postsUncheckedUpdateWithoutUsersInput>
  }

  export type postsUpdateManyWithWhereWithoutUsersInput = {
    where: postsScalarWhereInput
    data: XOR<postsUpdateManyMutationInput, postsUncheckedUpdateManyWithoutUsersInput>
  }

  export type postsScalarWhereInput = {
    AND?: postsScalarWhereInput | postsScalarWhereInput[]
    OR?: postsScalarWhereInput[]
    NOT?: postsScalarWhereInput | postsScalarWhereInput[]
    id?: BigIntFilter<"posts"> | bigint | number
    title?: StringFilter<"posts"> | string
    slug?: StringFilter<"posts"> | string
    content?: StringNullableFilter<"posts"> | string | null
    post_type?: Enumposts_post_typeFilter<"posts"> | $Enums.posts_post_type
    author_id?: BigIntNullableFilter<"posts"> | bigint | number | null
    feature_image?: StringNullableFilter<"posts"> | string | null
    language?: Enumposts_languageNullableFilter<"posts"> | $Enums.posts_language | null
    translation_group_id?: StringNullableFilter<"posts"> | string | null
    created_at?: DateTimeNullableFilter<"posts"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"posts"> | Date | string | null
  }

  export type programsUpsertWithWhereUniqueWithoutUsersInput = {
    where: programsWhereUniqueInput
    update: XOR<programsUpdateWithoutUsersInput, programsUncheckedUpdateWithoutUsersInput>
    create: XOR<programsCreateWithoutUsersInput, programsUncheckedCreateWithoutUsersInput>
  }

  export type programsUpdateWithWhereUniqueWithoutUsersInput = {
    where: programsWhereUniqueInput
    data: XOR<programsUpdateWithoutUsersInput, programsUncheckedUpdateWithoutUsersInput>
  }

  export type programsUpdateManyWithWhereWithoutUsersInput = {
    where: programsScalarWhereInput
    data: XOR<programsUpdateManyMutationInput, programsUncheckedUpdateManyWithoutUsersInput>
  }

  export type programsScalarWhereInput = {
    AND?: programsScalarWhereInput | programsScalarWhereInput[]
    OR?: programsScalarWhereInput[]
    NOT?: programsScalarWhereInput | programsScalarWhereInput[]
    id?: BigIntFilter<"programs"> | bigint | number
    title?: StringFilter<"programs"> | string
    category?: Enumprograms_categoryNullableFilter<"programs"> | $Enums.programs_category | null
    description?: StringNullableFilter<"programs"> | string | null
    start_date?: DateTimeNullableFilter<"programs"> | Date | string | null
    end_date?: DateTimeNullableFilter<"programs"> | Date | string | null
    location?: StringNullableFilter<"programs"> | string | null
    impact_stats?: StringNullableFilter<"programs"> | string | null
    is_featured?: BoolNullableFilter<"programs"> | boolean | null
    created_by?: BigIntNullableFilter<"programs"> | bigint | number | null
    language?: Enumprograms_languageNullableFilter<"programs"> | $Enums.programs_language | null
    translation_group_id?: StringNullableFilter<"programs"> | string | null
    created_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"programs"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"programs"> | Date | string | null
  }

  export type site_interactionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: site_interactionsWhereUniqueInput
    update: XOR<site_interactionsUpdateWithoutUsersInput, site_interactionsUncheckedUpdateWithoutUsersInput>
    create: XOR<site_interactionsCreateWithoutUsersInput, site_interactionsUncheckedCreateWithoutUsersInput>
  }

  export type site_interactionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: site_interactionsWhereUniqueInput
    data: XOR<site_interactionsUpdateWithoutUsersInput, site_interactionsUncheckedUpdateWithoutUsersInput>
  }

  export type site_interactionsUpdateManyWithWhereWithoutUsersInput = {
    where: site_interactionsScalarWhereInput
    data: XOR<site_interactionsUpdateManyMutationInput, site_interactionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type site_interactionsScalarWhereInput = {
    AND?: site_interactionsScalarWhereInput | site_interactionsScalarWhereInput[]
    OR?: site_interactionsScalarWhereInput[]
    NOT?: site_interactionsScalarWhereInput | site_interactionsScalarWhereInput[]
    id?: BigIntFilter<"site_interactions"> | bigint | number
    user_id?: BigIntNullableFilter<"site_interactions"> | bigint | number | null
    session_id?: StringNullableFilter<"site_interactions"> | string | null
    page?: StringNullableFilter<"site_interactions"> | string | null
    action?: StringNullableFilter<"site_interactions"> | string | null
    metadata?: StringNullableFilter<"site_interactions"> | string | null
    ip_address?: StringNullableFilter<"site_interactions"> | string | null
    user_agent?: StringNullableFilter<"site_interactions"> | string | null
    occurred_at?: DateTimeNullableFilter<"site_interactions"> | Date | string | null
  }

  export type volunteer_profilesUpsertWithoutUsersInput = {
    update: XOR<volunteer_profilesUpdateWithoutUsersInput, volunteer_profilesUncheckedUpdateWithoutUsersInput>
    create: XOR<volunteer_profilesCreateWithoutUsersInput, volunteer_profilesUncheckedCreateWithoutUsersInput>
    where?: volunteer_profilesWhereInput
  }

  export type volunteer_profilesUpdateToOneWithWhereWithoutUsersInput = {
    where?: volunteer_profilesWhereInput
    data: XOR<volunteer_profilesUpdateWithoutUsersInput, volunteer_profilesUncheckedUpdateWithoutUsersInput>
  }

  export type volunteer_profilesUpdateWithoutUsersInput = {
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    volunteer_skills?: volunteer_skillsUpdateManyWithoutVolunteer_profilesNestedInput
  }

  export type volunteer_profilesUncheckedUpdateWithoutUsersInput = {
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    volunteer_skills?: volunteer_skillsUncheckedUpdateManyWithoutVolunteer_profilesNestedInput
  }

  export type usersCreateWithoutVolunteer_profilesInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsCreateNestedManyWithoutUsersInput
    documents?: documentsCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsCreateNestedManyWithoutUsersInput
    events?: eventsCreateNestedManyWithoutUsersInput
    media?: mediaCreateNestedManyWithoutUsersInput
    posts?: postsCreateNestedManyWithoutUsersInput
    programs?: programsCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutVolunteer_profilesInput = {
    id?: bigint | number
    full_name: string
    email: string
    phone?: string | null
    password_hash: string
    role: $Enums.users_role
    profile_image_url?: string | null
    language_preference?: $Enums.users_language_preference | null
    email_verified?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    campaigns?: campaignsUncheckedCreateNestedManyWithoutUsersInput
    documents?: documentsUncheckedCreateNestedManyWithoutUsersInput
    donor_profiles?: donor_profilesUncheckedCreateNestedOneWithoutUsersInput
    event_participants?: event_participantsUncheckedCreateNestedManyWithoutUsersInput
    events?: eventsUncheckedCreateNestedManyWithoutUsersInput
    media?: mediaUncheckedCreateNestedManyWithoutUsersInput
    posts?: postsUncheckedCreateNestedManyWithoutUsersInput
    programs?: programsUncheckedCreateNestedManyWithoutUsersInput
    site_interactions?: site_interactionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutVolunteer_profilesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVolunteer_profilesInput, usersUncheckedCreateWithoutVolunteer_profilesInput>
  }

  export type volunteer_skillsCreateWithoutVolunteer_profilesInput = {
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
    skills: skillsCreateNestedOneWithoutVolunteer_skillsInput
  }

  export type volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput = {
    skill_id: bigint | number
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
  }

  export type volunteer_skillsCreateOrConnectWithoutVolunteer_profilesInput = {
    where: volunteer_skillsWhereUniqueInput
    create: XOR<volunteer_skillsCreateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput>
  }

  export type volunteer_skillsCreateManyVolunteer_profilesInputEnvelope = {
    data: volunteer_skillsCreateManyVolunteer_profilesInput | volunteer_skillsCreateManyVolunteer_profilesInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutVolunteer_profilesInput = {
    update: XOR<usersUpdateWithoutVolunteer_profilesInput, usersUncheckedUpdateWithoutVolunteer_profilesInput>
    create: XOR<usersCreateWithoutVolunteer_profilesInput, usersUncheckedCreateWithoutVolunteer_profilesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutVolunteer_profilesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutVolunteer_profilesInput, usersUncheckedUpdateWithoutVolunteer_profilesInput>
  }

  export type usersUpdateWithoutVolunteer_profilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateManyWithoutUsersNestedInput
    documents?: documentsUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUpdateManyWithoutUsersNestedInput
    events?: eventsUpdateManyWithoutUsersNestedInput
    media?: mediaUpdateManyWithoutUsersNestedInput
    posts?: postsUpdateManyWithoutUsersNestedInput
    programs?: programsUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutVolunteer_profilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: Enumusers_roleFieldUpdateOperationsInput | $Enums.users_role
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    language_preference?: NullableEnumusers_language_preferenceFieldUpdateOperationsInput | $Enums.users_language_preference | null
    email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUncheckedUpdateManyWithoutUsersNestedInput
    documents?: documentsUncheckedUpdateManyWithoutUsersNestedInput
    donor_profiles?: donor_profilesUncheckedUpdateOneWithoutUsersNestedInput
    event_participants?: event_participantsUncheckedUpdateManyWithoutUsersNestedInput
    events?: eventsUncheckedUpdateManyWithoutUsersNestedInput
    media?: mediaUncheckedUpdateManyWithoutUsersNestedInput
    posts?: postsUncheckedUpdateManyWithoutUsersNestedInput
    programs?: programsUncheckedUpdateManyWithoutUsersNestedInput
    site_interactions?: site_interactionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type volunteer_skillsUpsertWithWhereUniqueWithoutVolunteer_profilesInput = {
    where: volunteer_skillsWhereUniqueInput
    update: XOR<volunteer_skillsUpdateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedUpdateWithoutVolunteer_profilesInput>
    create: XOR<volunteer_skillsCreateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedCreateWithoutVolunteer_profilesInput>
  }

  export type volunteer_skillsUpdateWithWhereUniqueWithoutVolunteer_profilesInput = {
    where: volunteer_skillsWhereUniqueInput
    data: XOR<volunteer_skillsUpdateWithoutVolunteer_profilesInput, volunteer_skillsUncheckedUpdateWithoutVolunteer_profilesInput>
  }

  export type volunteer_skillsUpdateManyWithWhereWithoutVolunteer_profilesInput = {
    where: volunteer_skillsScalarWhereInput
    data: XOR<volunteer_skillsUpdateManyMutationInput, volunteer_skillsUncheckedUpdateManyWithoutVolunteer_profilesInput>
  }

  export type volunteer_profilesCreateWithoutVolunteer_skillsInput = {
    area_of_expertise?: string | null
    location?: string | null
    availability?: string | null
    motivation?: string | null
    total_hours?: number | null
    certificate_url?: string | null
    registered_events_count?: number | null
    training_completed?: boolean | null
    background_check_status?: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    users: usersCreateNestedOneWithoutVolunteer_profilesInput
  }

  export type volunteer_profilesUncheckedCreateWithoutVolunteer_skillsInput = {
    user_id: bigint | number
    area_of_expertise?: string | null
    location?: string | null
    availability?: string | null
    motivation?: string | null
    total_hours?: number | null
    certificate_url?: string | null
    registered_events_count?: number | null
    training_completed?: boolean | null
    background_check_status?: $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type volunteer_profilesCreateOrConnectWithoutVolunteer_skillsInput = {
    where: volunteer_profilesWhereUniqueInput
    create: XOR<volunteer_profilesCreateWithoutVolunteer_skillsInput, volunteer_profilesUncheckedCreateWithoutVolunteer_skillsInput>
  }

  export type skillsCreateWithoutVolunteer_skillsInput = {
    id?: bigint | number
    name: string
    category?: string | null
    description?: string | null
    created_at?: Date | string | null
  }

  export type skillsUncheckedCreateWithoutVolunteer_skillsInput = {
    id?: bigint | number
    name: string
    category?: string | null
    description?: string | null
    created_at?: Date | string | null
  }

  export type skillsCreateOrConnectWithoutVolunteer_skillsInput = {
    where: skillsWhereUniqueInput
    create: XOR<skillsCreateWithoutVolunteer_skillsInput, skillsUncheckedCreateWithoutVolunteer_skillsInput>
  }

  export type volunteer_profilesUpsertWithoutVolunteer_skillsInput = {
    update: XOR<volunteer_profilesUpdateWithoutVolunteer_skillsInput, volunteer_profilesUncheckedUpdateWithoutVolunteer_skillsInput>
    create: XOR<volunteer_profilesCreateWithoutVolunteer_skillsInput, volunteer_profilesUncheckedCreateWithoutVolunteer_skillsInput>
    where?: volunteer_profilesWhereInput
  }

  export type volunteer_profilesUpdateToOneWithWhereWithoutVolunteer_skillsInput = {
    where?: volunteer_profilesWhereInput
    data: XOR<volunteer_profilesUpdateWithoutVolunteer_skillsInput, volunteer_profilesUncheckedUpdateWithoutVolunteer_skillsInput>
  }

  export type volunteer_profilesUpdateWithoutVolunteer_skillsInput = {
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutVolunteer_profilesNestedInput
  }

  export type volunteer_profilesUncheckedUpdateWithoutVolunteer_skillsInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    area_of_expertise?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    motivation?: NullableStringFieldUpdateOperationsInput | string | null
    total_hours?: NullableIntFieldUpdateOperationsInput | number | null
    certificate_url?: NullableStringFieldUpdateOperationsInput | string | null
    registered_events_count?: NullableIntFieldUpdateOperationsInput | number | null
    training_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    background_check_status?: NullableEnumvolunteer_profiles_background_check_statusFieldUpdateOperationsInput | $Enums.volunteer_profiles_background_check_status | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type skillsUpsertWithoutVolunteer_skillsInput = {
    update: XOR<skillsUpdateWithoutVolunteer_skillsInput, skillsUncheckedUpdateWithoutVolunteer_skillsInput>
    create: XOR<skillsCreateWithoutVolunteer_skillsInput, skillsUncheckedCreateWithoutVolunteer_skillsInput>
    where?: skillsWhereInput
  }

  export type skillsUpdateToOneWithWhereWithoutVolunteer_skillsInput = {
    where?: skillsWhereInput
    data: XOR<skillsUpdateWithoutVolunteer_skillsInput, skillsUncheckedUpdateWithoutVolunteer_skillsInput>
  }

  export type skillsUpdateWithoutVolunteer_skillsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type skillsUncheckedUpdateWithoutVolunteer_skillsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsCreateManyCampaignsInput = {
    id?: bigint | number
    donor_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donationsUpdateWithoutCampaignsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donor_profiles?: donor_profilesUpdateOneRequiredWithoutDonationsNestedInput
  }

  export type donationsUncheckedUpdateWithoutCampaignsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    donor_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsUncheckedUpdateManyWithoutCampaignsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    donor_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsCreateManyDonor_profilesInput = {
    id?: bigint | number
    campaign_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    donation_type: $Enums.donations_donation_type
    payment_method?: string | null
    payment_status: $Enums.donations_payment_status
    transaction_id?: string | null
    receipt_url?: string | null
    is_acknowledged?: boolean | null
    is_tax_deductible?: boolean | null
    is_anonymous?: boolean | null
    notes?: string | null
    donated_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type donationsUpdateWithoutDonor_profilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campaigns?: campaignsUpdateOneRequiredWithoutDonationsNestedInput
  }

  export type donationsUncheckedUpdateWithoutDonor_profilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type donationsUncheckedUpdateManyWithoutDonor_profilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    donation_type?: Enumdonations_donation_typeFieldUpdateOperationsInput | $Enums.donations_donation_type
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_status?: Enumdonations_payment_statusFieldUpdateOperationsInput | $Enums.donations_payment_status
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_acknowledged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_tax_deductible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_anonymous?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    donated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type event_participantsCreateManyEventsInput = {
    user_id: bigint | number
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
  }

  export type mediaCreateManyEventsInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_program_id?: bigint | number | null
    uploaded_by?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type event_participantsUpdateWithoutEventsInput = {
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutEvent_participantsNestedInput
  }

  export type event_participantsUncheckedUpdateWithoutEventsInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type event_participantsUncheckedUpdateManyWithoutEventsInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaUpdateWithoutEventsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    programs?: programsUpdateOneWithoutMediaNestedInput
    users?: usersUpdateOneWithoutMediaNestedInput
  }

  export type mediaUncheckedUpdateWithoutEventsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_program_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaUncheckedUpdateManyWithoutEventsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_program_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaCreateManyProgramsInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_event_id?: bigint | number | null
    uploaded_by?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type mediaUpdateWithoutProgramsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateOneWithoutMediaNestedInput
    users?: usersUpdateOneWithoutMediaNestedInput
  }

  export type mediaUncheckedUpdateWithoutProgramsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_event_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaUncheckedUpdateManyWithoutProgramsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_event_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    uploaded_by?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_skillsCreateManySkillsInput = {
    volunteer_id: bigint | number
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
  }

  export type volunteer_skillsUpdateWithoutSkillsInput = {
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    volunteer_profiles?: volunteer_profilesUpdateOneRequiredWithoutVolunteer_skillsNestedInput
  }

  export type volunteer_skillsUncheckedUpdateWithoutSkillsInput = {
    volunteer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_skillsUncheckedUpdateManyWithoutSkillsInput = {
    volunteer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type campaignsCreateManyUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    goal_amount: Decimal | DecimalJsLike | number | string
    current_amount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date?: Date | string | null
    is_active?: boolean | null
    is_featured?: boolean | null
    category?: string | null
    progress_bar_color?: string | null
    image_url?: string | null
    video_url?: string | null
    donor_count?: number | null
    success_stories?: string | null
    language?: $Enums.campaigns_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type documentsCreateManyUsersInput = {
    id?: bigint | number
    title: string
    description?: string | null
    category?: string | null
    file_url: string
    file_size?: bigint | number | null
    file_type?: string | null
    language?: $Enums.documents_language | null
    translation_group_id?: string | null
    is_public?: boolean | null
    download_count?: number | null
    uploaded_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type event_participantsCreateManyUsersInput = {
    event_id: bigint | number
    role: $Enums.event_participants_role
    status?: $Enums.event_participants_status | null
    hours_contributed?: Decimal | DecimalJsLike | number | string | null
    feedback?: string | null
    rating?: number | null
    registered_at?: Date | string | null
    attended_at?: Date | string | null
  }

  export type eventsCreateManyUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    description?: string | null
    event_date: Date | string
    event_time: Date | string
    timezone?: string | null
    location?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    capacity?: number | null
    registered_count?: number | null
    status?: $Enums.events_status | null
    registration_deadline?: Date | string | null
    registration_link?: string | null
    map_embed_url?: string | null
    agenda?: string | null
    speaker_info?: string | null
    requirements?: string | null
    ticket_price?: Decimal | DecimalJsLike | number | string | null
    ticket_link?: string | null
    is_featured?: boolean | null
    language?: $Enums.events_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type mediaCreateManyUsersInput = {
    id?: bigint | number
    media_type: $Enums.media_media_type
    title?: string | null
    description?: string | null
    file_url: string
    related_event_id?: bigint | number | null
    related_program_id?: bigint | number | null
    language?: $Enums.media_language | null
    translation_group_id?: string | null
    uploaded_at?: Date | string | null
  }

  export type postsCreateManyUsersInput = {
    id?: bigint | number
    title: string
    slug: string
    content?: string | null
    post_type: $Enums.posts_post_type
    feature_image?: string | null
    language?: $Enums.posts_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type programsCreateManyUsersInput = {
    id?: bigint | number
    title: string
    category?: $Enums.programs_category | null
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    location?: string | null
    impact_stats?: string | null
    is_featured?: boolean | null
    language?: $Enums.programs_language | null
    translation_group_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type site_interactionsCreateManyUsersInput = {
    id?: bigint | number
    session_id?: string | null
    page?: string | null
    action?: string | null
    metadata?: string | null
    ip_address?: string | null
    user_agent?: string | null
    occurred_at?: Date | string | null
  }

  export type campaignsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donations?: donationsUpdateManyWithoutCampaignsNestedInput
  }

  export type campaignsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    donations?: donationsUncheckedUpdateManyWithoutCampaignsNestedInput
  }

  export type campaignsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    goal_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    current_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    progress_bar_color?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    donor_count?: NullableIntFieldUpdateOperationsInput | number | null
    success_stories?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumcampaigns_languageFieldUpdateOperationsInput | $Enums.campaigns_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    file_size?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumdocuments_languageFieldUpdateOperationsInput | $Enums.documents_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    download_count?: NullableIntFieldUpdateOperationsInput | number | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    file_size?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumdocuments_languageFieldUpdateOperationsInput | $Enums.documents_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    download_count?: NullableIntFieldUpdateOperationsInput | number | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    file_size?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumdocuments_languageFieldUpdateOperationsInput | $Enums.documents_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    download_count?: NullableIntFieldUpdateOperationsInput | number | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type event_participantsUpdateWithoutUsersInput = {
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateOneRequiredWithoutEvent_participantsNestedInput
  }

  export type event_participantsUncheckedUpdateWithoutUsersInput = {
    event_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type event_participantsUncheckedUpdateManyWithoutUsersInput = {
    event_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: Enumevent_participants_roleFieldUpdateOperationsInput | $Enums.event_participants_role
    status?: NullableEnumevent_participants_statusFieldUpdateOperationsInput | $Enums.event_participants_status | null
    hours_contributed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    registered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_participants?: event_participantsUpdateManyWithoutEventsNestedInput
    media?: mediaUpdateManyWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_participants?: event_participantsUncheckedUpdateManyWithoutEventsNestedInput
    media?: mediaUncheckedUpdateManyWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_date?: DateTimeFieldUpdateOperationsInput | Date | string
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    registered_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumevents_statusFieldUpdateOperationsInput | $Enums.events_status | null
    registration_deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_link?: NullableStringFieldUpdateOperationsInput | string | null
    map_embed_url?: NullableStringFieldUpdateOperationsInput | string | null
    agenda?: NullableStringFieldUpdateOperationsInput | string | null
    speaker_info?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    ticket_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ticket_link?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumevents_languageFieldUpdateOperationsInput | $Enums.events_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateOneWithoutMediaNestedInput
    programs?: programsUpdateOneWithoutMediaNestedInput
  }

  export type mediaUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_event_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    related_program_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mediaUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    media_type?: Enummedia_media_typeFieldUpdateOperationsInput | $Enums.media_media_type
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: StringFieldUpdateOperationsInput | string
    related_event_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    related_program_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    language?: NullableEnummedia_languageFieldUpdateOperationsInput | $Enums.media_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    uploaded_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type postsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    post_type?: Enumposts_post_typeFieldUpdateOperationsInput | $Enums.posts_post_type
    feature_image?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumposts_languageFieldUpdateOperationsInput | $Enums.posts_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type postsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    post_type?: Enumposts_post_typeFieldUpdateOperationsInput | $Enums.posts_post_type
    feature_image?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumposts_languageFieldUpdateOperationsInput | $Enums.posts_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type postsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    post_type?: Enumposts_post_typeFieldUpdateOperationsInput | $Enums.posts_post_type
    feature_image?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableEnumposts_languageFieldUpdateOperationsInput | $Enums.posts_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type programsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: mediaUpdateManyWithoutProgramsNestedInput
  }

  export type programsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: mediaUncheckedUpdateManyWithoutProgramsNestedInput
  }

  export type programsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableEnumprograms_categoryFieldUpdateOperationsInput | $Enums.programs_category | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    impact_stats?: NullableStringFieldUpdateOperationsInput | string | null
    is_featured?: NullableBoolFieldUpdateOperationsInput | boolean | null
    language?: NullableEnumprograms_languageFieldUpdateOperationsInput | $Enums.programs_language | null
    translation_group_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_interactionsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
    page?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    occurred_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_interactionsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
    page?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    occurred_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_interactionsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
    page?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    occurred_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_skillsCreateManyVolunteer_profilesInput = {
    skill_id: bigint | number
    proficiency_level: $Enums.volunteer_skills_proficiency_level
    is_verified?: boolean | null
    created_at?: Date | string | null
  }

  export type volunteer_skillsUpdateWithoutVolunteer_profilesInput = {
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    skills?: skillsUpdateOneRequiredWithoutVolunteer_skillsNestedInput
  }

  export type volunteer_skillsUncheckedUpdateWithoutVolunteer_profilesInput = {
    skill_id?: BigIntFieldUpdateOperationsInput | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type volunteer_skillsUncheckedUpdateManyWithoutVolunteer_profilesInput = {
    skill_id?: BigIntFieldUpdateOperationsInput | bigint | number
    proficiency_level?: Enumvolunteer_skills_proficiency_levelFieldUpdateOperationsInput | $Enums.volunteer_skills_proficiency_level
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}